"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[201],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),k=a,f=m["".concat(c,".").concat(k)]||m[k]||u[k]||o;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=k;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},87458:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={title:"Week 48 in Packit",date:new Date("2023-12-04T00:00:00.000Z"),authors:"nforro",tags:["2023-November",2023,"November"]},i=void 0,l={permalink:"/posts/weekly/2023/week-48",editUrl:"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-48.md",source:"@site/weekly/2023/week-48.md",title:"Week 48 in Packit",description:"Week 48 (November 28th \u2013 December 4th)",date:"2023-12-04T00:00:00.000Z",formattedDate:"December 4, 2023",tags:[{label:"2023-November",permalink:"/posts/weekly/tags/2023-november"},{label:"2023",permalink:"/posts/weekly/tags/2023"},{label:"November",permalink:"/posts/weekly/tags/november"}],readingTime:.495,hasTruncateMarker:!1,authors:[{name:"Nikola Forr\xf3",email:"nforro@redhat.com",url:"https://github.com/nforro",imageURL:"https://github.com/nforro.png",key:"nforro"}],frontMatter:{title:"Week 48 in Packit",date:"2023-12-04T00:00:00.000Z",authors:"nforro",tags:["2023-November","2023","November"]},prevItem:{title:"Packit workshop - Fedora Community Edition",permalink:"/posts/weekly/2023/packit-workshop"},nextItem:{title:"Week 47 in Packit",permalink:"/posts/weekly/2023/week-47"}},c={authorsImageUrls:[void 0]},p=[{value:"Week 48 (November 28th \u2013 December 4th)",id:"week-48-november-28th--december-4th",level:2}],s={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"week-48-november-28th--december-4th"},"Week 48 (November 28th \u2013 December 4th)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Packit now links the information related to upstream events in PRs opened when syncing a release.\n(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/packit/packit/pull/2173"},"packit#2173"),")")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"When accessing tags or macro definitions by name, specfile library now takes validity into account\nwhen looking for the best match. For example if there are two instances of ",(0,a.kt)("inlineCode",{parentName:"p"},"Version")," tag,\none in the true and one in the false branch of a condition, ",(0,a.kt)("inlineCode",{parentName:"p"},"Specfile.version")," will always access\nthe one that is in the true branch.\nThis also applies to Packit when syncing a release and updating value of ",(0,a.kt)("inlineCode",{parentName:"p"},"Version")," tag.\n(",(0,a.kt)("a",{parentName:"p",href:"https://github.com/packit/specfile/pull/328"},"specfile#328"),")"))))}u.isMDXComponent=!0}}]);