"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[46333],{15680:(e,n,r)=>{r.d(n,{xA:()=>p,yg:()=>h});var t=r(96540);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?t.createElement(h,i(i({ref:n},p),{},{components:r})):t.createElement(h,i({ref:n},p))}));function h(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},85050:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/tf-log-output-cdc5e1387e7ed318ce6abae84bcc62c2.png"},87787:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var t=r(58168),o=(r(96540),r(15680));const a={title:"Reproduce CI environment locally",date:new Date("2022-03-01T00:00:00.000Z"),sidebar_position:12},i="Reproduce CI environment locally",c={unversionedId:"reproduce-locally",id:"reproduce-locally",title:"Reproduce CI environment locally",description:"This used to be a question in our FAQ and",source:"@site/docs/reproduce-locally.md",sourceDirName:".",slug:"/reproduce-locally",permalink:"/docs/reproduce-locally",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/reproduce-locally.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"Reproduce CI environment locally",date:"2022-03-01T00:00:00.000Z",sidebar_position:12},sidebar:"autogenerated",previous:{title:"Generated code in upstream archives",permalink:"/docs/archive-not-matching-git"},next:{title:"Service Level Objectives",permalink:"/docs/service-level-objectives"}},l={},s=[{value:"SRPM builds in Copr",id:"srpm-builds-in-copr",level:2},{value:"<code>actions</code> commands run in our sandbox",id:"actions-commands-run-in-our-sandbox",level:2},{value:"Testing Farm",id:"testing-farm",level:2}],p={toc:s},u="wrapper";function d(e){let{components:n,...a}=e;return(0,o.yg)(u,(0,t.A)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"reproduce-ci-environment-locally"},"Reproduce CI environment locally"),(0,o.yg)("p",null,"This used to be a question ",(0,o.yg)("a",{parentName:"p",href:"faq#a-command-failed-in-packit-service-how-do-i-reproduce-it-locally"},"in our FAQ")," and\nnow we have a dedicated document to cover this."),(0,o.yg)("h2",{id:"srpm-builds-in-copr"},"SRPM builds in Copr"),(0,o.yg)("p",null,"For Copr builds, the corresponding SRPM builds are being built in directly in Copr. This\nsection describes how you can reproduce the build procedure locally."),(0,o.yg)("p",null,"We invoke our CLI command ",(0,o.yg)("inlineCode",{parentName:"p"},"packit prepare-sources")," in the Copr environment,\nthe command may look like this for a job triggered by a pull request change:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"$ packit prepare-sources --result-dir directory-to-place-sources --pr-id 150 \n--merge-pr --target-branch main --job-config-index 2 https://github.com/packit/packit\n")),(0,o.yg)("p",null,"As a first step, you can run this command\nlocally on your computer (if you have installed the needed dependencies for your actions)\nand see whether the sources are correctly prepared."),(0,o.yg)("p",null,"Thankfully, Copr is very transparent how it performs builds. When you open a\nbuild log (e.g. ",(0,o.yg)("inlineCode",{parentName:"p"},"builder-live.log.gz"),"), you'll see a command at the top which\nCopr invokes to perform a build. Let's do that in a container."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"$ podman run --privileged -ti fedora:36 bash\n")),(0,o.yg)("p",null,"(the reason for running root privileged container is that\n",(0,o.yg)("a",{parentName:"p",href:"https://github.com/rpm-software-management/mock"},"mock")," will be used inside and\nneeds capabilities to perform\n",(0,o.yg)("a",{parentName:"p",href:"https://man7.org/linux/man-pages/man1/unshare.1.html"},"unshare"),")"),(0,o.yg)("p",null,"But first we need to install the package which contains the ",(0,o.yg)("inlineCode",{parentName:"p"},"copr-rpmbuild")," command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"[root@f26be2947a15 /]# dnf install -y copr-rpmbuild\n")),(0,o.yg)("p",null,"Now let's rerun locally a build for build-id 3580313:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"[root@f26be2947a15 /]# /usr/bin/copr-rpmbuild --verbose --drop-resultdir --srpm --build-id 3580313\n")),(0,o.yg)("p",null,"Your changes need to be pushed and a PR needs to be created for this to work.\nYou are welcome to experiment with ",(0,o.yg)("inlineCode",{parentName:"p"},"copr-rpmbuild")," to get a more efficient\nworkflow (hint ",(0,o.yg)("inlineCode",{parentName:"p"},"--task-file"),")."),(0,o.yg)("h2",{id:"actions-commands-run-in-our-sandbox"},(0,o.yg)("inlineCode",{parentName:"h2"},"actions")," commands run in our sandbox"),(0,o.yg)("p",null,"Packit by default runs all commands from ",(0,o.yg)("inlineCode",{parentName:"p"},"actions")," (e.g. during syncing the release or building SRPMs for Koji builds)\nyou defined in a ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/packit/sandcastle"},"sandbox")," which is a Kubernetes pod in a\nnew project (the only exception are the commands run during SRPM build for Copr builds described above; they are run in the Copr)."),(0,o.yg)("p",null,"You can reproduce our sandbox environment: Firstly, you should pull our\nproduction sandbox image and run commands of your choice inside the container.\nAs an example, this is how we were debugging build problems with anaconda:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Clone your upstream git repo.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Launch the container and bind-mount the upstream project inside:"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"$ podman run -ti --rm --memory 768MB -v $PWD:/src -w /src quay.io/packit/sandcastle:prod bash\n")),(0,o.yg)("ol",{start:3},(0,o.yg)("li",{parentName:"ol"},"Run commands of your choice:")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"[root@4af5dbd9c828 src]# ./configure\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\nchecking for a thread-safe mkdir -p... /usr/bin/mkdir -p\nchecking for gawk... gawk\nchecking whether make sets $(MAKE)... yes\nchecking whether make supports nested variables... yes\nchecking whether UID '0' is supported by ustar format... yes\nchecking whether GID '0' is supported by ustar format... yes\nchecking how to create a ustar tar archive... gnutar\nchecking whether make supports nested variables... (cached) yes\nchecking whether make supports the include directive... yes (GNU style)\nchecking for gcc... gcc\nchecking whether the C compiler works... yes\n...\n")),(0,o.yg)("p",null,"Our deployment is running in ",(0,o.yg)("a",{parentName:"p",href:"https://docs.openshift.com/rosa/welcome/index.html"},"OpenShift\nROSA"),"."),(0,o.yg)("p",null,"Since OpenShift ",(0,o.yg)("a",{parentName:"p",href:"https://www.openshift.com/blog/a-guide-to-openshift-and-uids"},"invokes pods using arbitrary\nUIDs")," and as you\ncan see, the command above is invoked as root, it does not match production\npackit-service. So, if running a local container didn't help you with\nreproducing the issue, you can try running it in openshift."),(0,o.yg)("p",null,"Here is a simple python code how packit-service does it:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-python"},'from sandcastle import Sandcastle\n\n# this should be the path to your local clone of the upstream project\ngit_repo_path: str = "fill-me"\n# kubernetes namespace to use\nk8s_namespace: str = "myproject"\ncommand = ["your", "command", "of", "choice"]\n\n# This is how your code gets copied (via rsync) into the openshift pod\nm_dir = MappedDir(git_repo_path, "/sandcastle", with_interim_pvc=True)\n\no = Sandcastle(\n    image_reference="docker.io/usercont/sandcastle:prod",\n    k8s_namespace_name=k8s_namespace,\n    mapped_dir=m_dir\n)\no.run()\ntry:\n    output = o.exec(command=command)\n    print(output)\nfinally:\n    o.delete_pod()\n')),(0,o.yg)("p",null,"This script requires:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/packit/sandcastle"},"sandcastle")," installed"),(0,o.yg)("li",{parentName:"ul"},"being logged in an openshift cluster (",(0,o.yg)("inlineCode",{parentName:"li"},"oc whoami")," to confirm)"),(0,o.yg)("li",{parentName:"ul"},"rsync binary available")),(0,o.yg)("p",null,"If none of these helped you, please ",(0,o.yg)("a",{parentName:"p",href:"/#contact"},"reach out")," to us and we'll try to help you."),(0,o.yg)("h2",{id:"testing-farm"},"Testing Farm"),(0,o.yg)("p",null,"When you open test results, you can see commands which Testing Farm performed\nto run your test. You can run those locally."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Testing Farm Log Output",src:r(85050).A,width:"987",height:"454"})),(0,o.yg)("p",null,"The team is also planning to have a solution to fully reproduce the CI testing\nprocess locally:\n",(0,o.yg)("a",{parentName:"p",href:"https://github.com/teemtee/tmt/issues/1075"},"teemtee/tmt#1075"),"."))}d.isMDXComponent=!0}}]);