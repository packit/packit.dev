"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[3611],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var i=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=i.createContext({}),s=function(e){var t=i.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=s(a),k=n,m=h["".concat(p,".").concat(k)]||h[k]||u[k]||r;return a?i.createElement(m,l(l({ref:t},c),{},{components:a})):i.createElement(m,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[h]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}k.displayName="MDXCreateElement"},58217:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var i=a(87462),n=(a(67294),a(3905));const r={title:"2022",date:new Date("2023-01-01T00:00:00.000Z"),aliases:["/posts/weekly/january-2022","/posts/weekly/february-2022","/posts/weekly/march-2022","/posts/weekly/april-2022","/posts/weekly/may-2022","/posts/weekly/june-2022","/posts/weekly/july-2022","/posts/weekly/august-2022","/posts/weekly/september-2022","/posts/weekly/october-2022","/posts/weekly/november-2022","/posts/weekly/december-2022"],tags:[2022]},l=void 0,o={permalink:"/posts/weekly/2022",editUrl:"https://github.com/packit/packit.dev/tree/main/weekly/2022.md",source:"@site/weekly/2022.md",title:"2022",description:"Let's see what happened in Packit in 2022.",date:"2023-01-01T00:00:00.000Z",formattedDate:"January 1, 2023",tags:[{label:"2022",permalink:"/posts/weekly/tags/2022"}],readingTime:24.99,hasTruncateMarker:!0,authors:[],frontMatter:{title:"2022",date:"2023-01-01T00:00:00.000Z",aliases:["/posts/weekly/january-2022","/posts/weekly/february-2022","/posts/weekly/march-2022","/posts/weekly/april-2022","/posts/weekly/may-2022","/posts/weekly/june-2022","/posts/weekly/july-2022","/posts/weekly/august-2022","/posts/weekly/september-2022","/posts/weekly/october-2022","/posts/weekly/november-2022","/posts/weekly/december-2022"],tags:["2022"]},prevItem:{title:"January 2023",permalink:"/posts/weekly/January-2023"},nextItem:{title:"2021",permalink:"/posts/weekly/2021"}},p={authorsImageUrls:[]},s=[{value:"Week 0 (December 13th - January 2nd)",id:"week-0-december-13th---january-2nd",level:2},{value:"Week 1 (January 3rd - January 7th)",id:"week-1-january-3rd---january-7th",level:2},{value:"Week 2 (January 10th - January 14th)",id:"week-2-january-10th---january-14th",level:2},{value:"Week 3 (January 17th - January 21st)",id:"week-3-january-17th---january-21st",level:2},{value:"Week 4 (January 25th - January 28th)",id:"week-4-january-25th---january-28th",level:2},{value:"Week 5 (January 31th - February 7th)",id:"week-5-january-31th---february-7th",level:2},{value:"Week 6 (February 8th - February 14th)",id:"week-6-february-8th---february-14th",level:2},{value:"Week 7 (February 14th\u2764\ufe0f - February 18th)",id:"week-7-february-14th\ufe0f---february-18th",level:2},{value:"Week 8 (February 18th - February 28th)",id:"week-8-february-18th---february-28th",level:2},{value:"Week 9 (March 1st - March 7th)",id:"week-9-march-1st---march-7th",level:2},{value:"Week 10 (March 8th - March 14th)",id:"week-10-march-8th---march-14th",level:2},{value:"Week 11 (March 15th - March 21st)",id:"week-11-march-15th---march-21st",level:2},{value:"Week 12 (March 22nd - March 28th)",id:"week-12-march-22nd---march-28th",level:2},{value:"Week 13 (March 29th - April 4th)",id:"week-13-march-29th---april-4th",level:2},{value:"Week 14 (April 5th - April 11th)",id:"week-14-april-5th---april-11th",level:2},{value:"Week 15 (April 12th - April 14th)",id:"week-15-april-12th---april-14th",level:2},{value:"Week 16 (April 19th - April 25th)",id:"week-16-april-19th---april-25th",level:2},{value:"Week 17 (April 26th - May 2th)",id:"week-17-april-26th---may-2th",level:2},{value:"Week 18 (May 3rd - May 9th)",id:"week-18-may-3rd---may-9th",level:2},{value:"Week 19 (May 10th - May 16th)",id:"week-19-may-10th---may-16th",level:2},{value:"Week 20 (May 17th - May 23rd)",id:"week-20-may-17th---may-23rd",level:2},{value:"Week 21 (May 24th - May 30th)",id:"week-21-may-24th---may-30th",level:2},{value:"Week 22 (May 31st - June 6th)",id:"week-22-may-31st---june-6th",level:2},{value:"Week 23 (June 7th - June 13th)",id:"week-23-june-7th---june-13th",level:2},{value:"Week 24 (June 14th - June 21st)",id:"week-24-june-14th---june-21st",level:2},{value:"Week 25 (June 21st - June 27th)",id:"week-25-june-21st---june-27th",level:2},{value:"Weeks 26\u201327 (June 27th\u2013July 11th)",id:"weeks-2627-june-27thjuly-11th",level:2},{value:"Week 28 (July 12th\u2013July 18th)",id:"week-28-july-12thjuly-18th",level:2},{value:"Week 29 (July 19th\u2013July 25th)",id:"week-29-july-19thjuly-25th",level:2},{value:"Week 30 (July 26th\u2013August 1st)",id:"week-30-july-26thaugust-1st",level:2},{value:"Week 31 (August 2nd \u2013 August 8th)",id:"week-31-august-2nd--august-8th",level:2},{value:"Week 32 (August 9th \u2013 August 15th)",id:"week-32-august-9th--august-15th",level:2},{value:"Week 33 (August 16th \u2013 August 22nd)",id:"week-33-august-16th--august-22nd",level:2},{value:"Week 34 (August 23rd \u2013 August 29th)",id:"week-34-august-23rd--august-29th",level:2},{value:"Week 35 (August 30th \u2013 September 5th)",id:"week-35-august-30th--september-5th",level:2},{value:"Week 36 (September 6th \u2013 September 12th)",id:"week-36-september-6th--september-12th",level:2},{value:"Week 37 (September 13th \u2013 September 19th)",id:"week-37-september-13th--september-19th",level:2},{value:"Week 38 (September 20th \u2013 September 26th)",id:"week-38-september-20th--september-26th",level:2},{value:"Week 39 (September 27th \u2013 October 3rd)",id:"week-39-september-27th--october-3rd",level:2},{value:"Week 40 (October 4th \u2013 October 10th)",id:"week-40-october-4th--october-10th",level:2},{value:"Week 41 (October 11th \u2013 October 17th)",id:"week-41-october-11th--october-17th",level:2},{value:"Week 42 (October 17th \u2013 October 23rd)",id:"week-42-october-17th--october-23rd",level:2},{value:"Week 43 (October 25th \u2013 October 31th)",id:"week-43-october-25th--october-31th",level:2},{value:"Week 44 (November 1st \u2013 November 7th)",id:"week-44-november-1st--november-7th",level:2},{value:"Week 45 (November 8th \u2013 November 14th)",id:"week-45-november-8th--november-14th",level:2},{value:"Week 46 (November 15th \u2013 November 21st)",id:"week-46-november-15th--november-21st",level:2},{value:"Week 47 (November 22nd \u2013 November 28th)",id:"week-47-november-22nd--november-28th",level:2},{value:"Week 48 (November 29th \u2013 December 5th)",id:"week-48-november-29th--december-5th",level:2},{value:"Week 49 (December 6th \u2013 December 12th)",id:"week-49-december-6th--december-12th",level:2},{value:"Week 50 (December 13th \u2013 December 19th)",id:"week-50-december-13th--december-19th",level:2}],c={toc:s},h="wrapper";function u(e){let{components:t,...a}=e;return(0,n.kt)(h,(0,i.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Let's see what happened in Packit in 2022."),(0,n.kt)("h2",{id:"week-0-december-13th---january-2nd"},"Week 0 (December 13th - January 2nd)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Dashboard shows a message when the SRPM build logs are not present instead of\nan empty page that might suggest logs are being loaded.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/dashboard/pull/158"},"packit/dashboard#158"),")")),(0,n.kt)("h2",{id:"week-1-january-3rd---january-7th"},"Week 1 (January 3rd - January 7th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit service now discards old (currently, this means 3 months) SRPM builds logs.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1315"},"packit/packit-service#1315"),")"),(0,n.kt)("li",{parentName:"ul"},"We have added ",(0,n.kt)("inlineCode",{parentName:"li"},"target_branch_head_commit")," property to the ",(0,n.kt)("inlineCode",{parentName:"li"},"PullRequest")," class in ogr that allows\nyou to get commit hash of the HEAD of the target branch (i.e. base, where the changes are merged to).\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/ogr/pull/671"},"packit/ogr#671"),")"),(0,n.kt)("li",{parentName:"ul"},"Service now passes ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_TARGET_SHA")," variable, which holds commit hash of the HEAD of the target\nbranch where the changes are supposed to be merged, to the Testing Farm environment. This should\nhelp solving the issue of running tests from non-merged codebase on the Testing Farm side.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1319"},"packit/packit-service#1319"),")")),(0,n.kt)("h2",{id:"week-2-january-10th---january-14th"},"Week 2 (January 10th - January 14th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit no longer ignores ",(0,n.kt)("inlineCode",{parentName:"li"},"--no-bump")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"--release-suffix")," options for\nsource-git repos.\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1452"},"packit/packit#1452")),(0,n.kt)("li",{parentName:"ul"},"Packit now names local branch ",(0,n.kt)("inlineCode",{parentName:"li"},"pr/{pr_id}")," when checking out a PR, even when\nit's not being merged with the target branch. This results into NVR of the\nbuild containing ",(0,n.kt)("inlineCode",{parentName:"li"},"pr{pr_id}")," instead of ",(0,n.kt)("inlineCode",{parentName:"li"},"pr.changes{pr_id}"),".\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1445"},"packit/packit#1445"))),(0,n.kt)("h2",{id:"week-3-january-17th---january-21st"},"Week 3 (January 17th - January 21st)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"%changelog")," sections in dist-git using the ",(0,n.kt)("inlineCode",{parentName:"li"},"%autochangelog")," macro ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1453"},"are\npreserved")," when running\n",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream"),", except when ",(0,n.kt)("inlineCode",{parentName:"li"},"sync_changelog")," is set to ",(0,n.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,n.kt)("li",{parentName:"ul"},"When checking if directories hold a Git-tree, Packit now also allows ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1458"},(0,n.kt)("inlineCode",{parentName:"a"},".git"),"\nto be a file with a ",(0,n.kt)("inlineCode",{parentName:"a"},"gitdir")),"\nreference, not only a directory.")),(0,n.kt)("h2",{id:"week-4-january-25th---january-28th"},"Week 4 (January 25th - January 28th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"SRPM build view contains info about build start and finished time.\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/dashboard/pull/163"},"packit/dashboard#163")),(0,n.kt)("li",{parentName:"ul"},"When submitting a distgit PR during ",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream")," job, we create\na ",(0,n.kt)("inlineCode",{parentName:"li"},"README.packit")," file with some info about the sync the packit version used.\nTo avoid this you can add ",(0,n.kt)("inlineCode",{parentName:"li"},"create_sync_note: false")," to conig file.\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1465"},"packit/packit#1465"))),(0,n.kt)("h2",{id:"week-5-january-31th---february-7th"},"Week 5 (January 31th - February 7th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A new option ",(0,n.kt)("inlineCode",{parentName:"li"},"--no-require-autosetup")," for ",(0,n.kt)("inlineCode",{parentName:"li"},"source-git init")," command has been\nintroduced. Please note that source-git repositories not using ",(0,n.kt)("inlineCode",{parentName:"li"},"%autosetup")," may\nnot be properly initialized. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1470"},"packit#1470"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit-service now supports re-triggering against failed task using comment on\npull request ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit rebuild-failed")," and similarly for testing farm: ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit retest-failed"),".\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1303"},"packit-service#1303"),")")),(0,n.kt)("h2",{id:"week-6-february-8th---february-14th"},"Week 6 (February 8th - February 14th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now correctly handles colons in git trailer values in source-git commits.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1478"},"packit#1478"),")")),(0,n.kt)("h2",{id:"week-7-february-14th\ufe0f---february-18th"},"Week 7 (February 14th\u2764\ufe0f - February 18th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Synchronization of default files can now be disabled using a new config\n",(0,n.kt)("inlineCode",{parentName:"li"},"files_to_sync"),". Key ",(0,n.kt)("inlineCode",{parentName:"li"},"sync_files")," is now deprecated.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1483"},"packit#1483"),")\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit.dev/pull/390"},"packit.dev#390"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"python3-setuptools_scm")," is now available by default in the sandbox.")),(0,n.kt)("h2",{id:"week-8-february-18th---february-28th"},"Week 8 (February 18th - February 28th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now allows specifying more test distros for one build target\nto test on in Testing Farm in the configuration. The checks for the\ntest job will also contain the name of the actual test distro\n(and not the build target as previously)."),(0,n.kt)("li",{parentName:"ul"},"A new option, ",(0,n.kt)("inlineCode",{parentName:"li"},"srpm_build_deps"),", in the packit configuration file",(0,n.kt)("br",{parentName:"li"}),"can be used. Which is a list of RPM dependencies that are needed for\nthe actions to be run when building SRPM and is an indicator to build\nthe SRPMs in Copr.")),(0,n.kt)("h2",{id:"week-9-march-1st---march-7th"},"Week 9 (March 1st - March 7th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"When a specfile is being generated, and both ",(0,n.kt)("inlineCode",{parentName:"li"},"specfile_path")," and\n",(0,n.kt)("inlineCode",{parentName:"li"},"downstream_package_name")," are not set, Packit now correctly resolves this\nsituation and sets ",(0,n.kt)("inlineCode",{parentName:"li"},"specfile_path")," to the name of the upstream repo suffixed\nwith ",(0,n.kt)("inlineCode",{parentName:"li"},'".spec"'),".\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1499"},"packit#1499"),")"),(0,n.kt)("li",{parentName:"ul"},"A new command ",(0,n.kt)("inlineCode",{parentName:"li"},"packit source-git status")," has been introduced for checking\nthe synchronization of a source-git and a dist-git repository based on the\nused git trailers. The command outputs a range of commits which need to be\nsynchronized from dist-git to source-git or the other way around. If possible,\nthe command also provides instructions on how to synchronize the repositories.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1500"},"packit#1500"),")"),(0,n.kt)("li",{parentName:"ul"},"We have added a new ",(0,n.kt)("inlineCode",{parentName:"li"},"enable_net")," configuration option for Copr builds that\nallows you to disable network access during Copr builds. It is also complemented\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"--enable-net"),"/",(0,n.kt)("inlineCode",{parentName:"li"},"--disable-net")," CLI options if you use Packit locally.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1504"},"packit#1504"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now adds \ud83d\udc40 instead of \ud83d\udc4d as a reaction to ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit command"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1372"},"packit-service#1372"),")"),(0,n.kt)("li",{parentName:"ul"},"Progress of propose-downstream is now saved in the database and is available\nvia API. Visualization in the dashboard is to follow next week, stay tuned.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1292"},"packit-service#1292"),")"),(0,n.kt)("li",{parentName:"ul"},"When running tests for the pull-request job, we now expose environment\nvariables for commit hash, branch and URL both for pull-request source and\ntarget. In the test environment, you can use the following variables:\n",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_SOURCE_SHA"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_TARGET_SHA"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_SOURCE_BRANCH"),",\n",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_TARGET_BRANCH"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_SOURCE_URL")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_TARGET_URL"),".\nThese variables are not set for test runs of releases and branch pushes.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1382"},"packit-service#1382"),")")),(0,n.kt)("h2",{id:"week-10-march-8th---march-14th"},"Week 10 (March 8th - March 14th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You can view information about ongoing propose-downstream jobs via our dashboard.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/dashboard/pull/168"},"dashboard#168"),")"),(0,n.kt)("li",{parentName:"ul"},"We have switched the cache for dist-git branches and Copr targets to TTL cache\nthat gets discarded once in 12 hours, in case there is a change in targets, the\nchanges shall propagate to both of our deployments without the need to redeploy\nwithin 12 hours. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1513"},"packit#1513"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now comments when it fails to find Copr project specified in the config.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1395"},"packit#1395"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now reacts to dist-git pushes to either ",(0,n.kt)("inlineCode",{parentName:"li"},"rawhide")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"main")," when configured\nto do Koji builds for ",(0,n.kt)("inlineCode",{parentName:"li"},"rawhide"),".\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1393"},"packit#1393"),")"),(0,n.kt)("li",{parentName:"ul"},"You can specify an identifier for your job to be able to configure one job multiple times.\nFor example, you can build multiple projects from one repository (known as monorepo concept)\nor try multiple build options. Using identifiers allows Packit to avoid naming collisions\nin commit statuses and default Copr project names.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1385"},"packit-service#1385"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit no longer provides a misleading comment when it fails to update a set of\ntargets on its own Copr projects.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1397"},"packit-service#1397"),")")),(0,n.kt)("h2",{id:"week-11-march-15th---march-21st"},"Week 11 (March 15th - March 21st)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"When using Packit CLI for creating Bodhi updates,\nyou can now set ",(0,n.kt)("inlineCode",{parentName:"li"},"fas_username")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"fas_password")," in your Packit user config\nto not be asked about that when the command is executed.\nAlso, this allows Packit GitHub application to use this as well\nso you can look forward to Bodhi updates created by Packit\n(will be announced and described in a dedicated post).\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1517"},"packit#1517"),")")),(0,n.kt)("h2",{id:"week-12-march-22nd---march-28th"},"Week 12 (March 22nd - March 28th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have updated contact information to ",(0,n.kt)("inlineCode",{parentName:"li"},"Packit <hello@packit.dev>"),".\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1410"},"packit-service#1410"),")"),(0,n.kt)("li",{parentName:"ul"},"Interactions with Bodhi should be now more reliable when creating Bodhi updates.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1528"},"packit#1528"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit will no longer error out when trying to create a new Copr repository\nwhen it is already present.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1527"},"packit#1527"),")"),(0,n.kt)("li",{parentName:"ul"},"There is a new ",(0,n.kt)("inlineCode",{parentName:"li"},"packit_instances")," key that you can use to specify the Packit\ninstances you want to use for working on your jobs. Nothing will change for our\nproduction users, but users of our stage instance need to use this key to\npreserve the support of the stage instance -- they can set both stg and prod in\nthe ",(0,n.kt)("inlineCode",{parentName:"li"},"packit_instances")," list to use both, or use just one. Just be careful with\nthe downstream jobs where both instances work with the same services.\nThis new option works like other Packit options so you can set it on the top\nlevel and/or (re)define it on the job level.\nMore information about our staging instance can be found here:\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/discussions/1530"},"packit#1530"),".\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1417"},"packit#1417"),")")),(0,n.kt)("h2",{id:"week-13-march-29th---april-4th"},"Week 13 (March 29th - April 4th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have implemented ",(0,n.kt)("inlineCode",{parentName:"li"},"get_contributors")," function in ogr that can be used for getting contributors to the project on GitHub (set of logins) and GitLab (set of authors).\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/ogr/pull/692"},"ogr#692"),")"),(0,n.kt)("li",{parentName:"ul"},"When multiple propose downstream attempts for the same PR fail, the error messages are sent to to the same issue (as comments), instead of creating multiple new issues.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1427"},"packit#1427"),")"),(0,n.kt)("li",{parentName:"ul"},"Downstream synchronization of the Packit configuration file (aka ",(0,n.kt)("inlineCode",{parentName:"li"},"packit.yaml"),") is now working properly again.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1532"},"packit#1532"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"packit source-git update-dist-git")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"packit source-git update-source-git")," now check the synchronization of source-git and dist-git repositories prior to doing the update. If the update can't be done, for example, because the histories have diverged, the command provides instructions on how to synchronize the repositories.\nA ",(0,n.kt)("inlineCode",{parentName:"li"},"--force")," option is available to try to update the destination repository anyway.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1534"},"packit#1534"),")"),(0,n.kt)("li",{parentName:"ul"},"When using ",(0,n.kt)("inlineCode",{parentName:"li"},"post_upstream_clone")," to generate your spec-file,\nPackit now correctly checks out a release before the action is run.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1542"},"packit#1542"),")")),(0,n.kt)("h2",{id:"week-14-april-5th---april-11th"},"Week 14 (April 5th - April 11th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have introduced two new build and test target aliases: ",(0,n.kt)("inlineCode",{parentName:"li"},"fedora-latest-stable")," resolves to the latest stable Fedora\nLinux release, while ",(0,n.kt)("inlineCode",{parentName:"li"},"fedora-branched")," resolves to all branched releases (all Fedora Linux release, except ",(0,n.kt)("inlineCode",{parentName:"li"},"rawhide"),").\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1546"},"packit#1546"),")"),(0,n.kt)("li",{parentName:"ul"},"We have reverted the functionality of Packit that allowed you to have set ",(0,n.kt)("strong",{parentName:"li"},"only")," specific targets for Copr repositories.\nThis functionality was introduced a while ago and was found to be not very beneficial in cases of differently\nconfigured Copr jobs building in parallel in the same Copr repository. This is an implementation detail in the end,\nbut Copr project chroots are now only added and never subtracted\n(every build has precisely specified targets based on the copr_build job definition).\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1551"},"packit#1551"),")"),(0,n.kt)("li",{parentName:"ul"},"If you are using our stage instance, we make it listen only on ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit-stg")," comment commands so you can now differentiate\nbetween the instances when commanding Packit via pull-request or issue comments.\nFor the production instance, you can continue using ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit")," prefix as you are used to.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1432"},"packit-service#1432"),")"),(0,n.kt)("li",{parentName:"ul"},"A new configuration option ",(0,n.kt)("inlineCode",{parentName:"li"},"downstream_branch_name")," has been added, which is meant to be used in source-git projects\nand allows users to customize the name of the branch in dist-git which corresponds to the current source-git branch.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1555"},"packit#1555"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"revision-range")," argument of the source-git ",(0,n.kt)("inlineCode",{parentName:"li"},"update-source-git")," command is now optional. If not specified,\ndist-git commits with no counterpart in source-git are synchronized.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1547"},"packit#1547"),")")),(0,n.kt)("h2",{id:"week-15-april-12th---april-14th"},"Week 15 (April 12th - April 14th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have implemented reporting of status for the propose-downstream job which means that you can now\nsee the progress of the job via check runs/commit statuses on the particular release commits.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1435"},"packit-service#1435"),")")),(0,n.kt)("h2",{id:"week-16-april-19th---april-25th"},"Week 16 (April 19th - April 25th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The bug in our service about not setting GitHub and Gitlab statuses in case of lack of permissions was fixed.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1457"},"packit/packit-service#1457"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit's CLI ",(0,n.kt)("inlineCode",{parentName:"li"},"source-git update-*")," commands now check whether the target repository is pristine and in case not raise an error.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1562"},"packit/packit#1562"),")")),(0,n.kt)("h2",{id:"week-17-april-26th---may-2th"},"Week 17 (April 26th - May 2th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have fixed an issue affecting Pipelines view on Dashboard. Currently you should be able to see pipelines again; we are also working on fixing empty rows for ",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream")," jobs.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1461"},"packit-service#1461"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now shows the specific info when it does not have permissions to create a Bodhi update of your package.\nWhen you configure ",(0,n.kt)("inlineCode",{parentName:"li"},"issue_repository")," in your Packit config file, Packit will create an issue in that project and link the dist-git page where you can give ",(0,n.kt)("em",{parentName:"li"},"Packit FAS user")," the correct permissions.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1465"},"packit-service#1465"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now exports ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_PR_ID")," environment variable to the Testing Farm.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1467"},"packit-service#1467"),")"),(0,n.kt)("li",{parentName:"ul"},"The bug in the Copr permission request is now fixed. (After the release of a new Copr client, Packit didn't catch that permission problem and didn't request the permissions to build in a custom Copr project.)\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1472"},"packit-service#1472"),")"),(0,n.kt)("li",{parentName:"ul"},"We have fixed a bug that caused Packit to fail when submitting Testing Farm on ",(0,n.kt)("inlineCode",{parentName:"li"},"commit")," trigger.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1472"},"packit-service#1474"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now builds RPMs in Copr triggered by ",(0,n.kt)("inlineCode",{parentName:"li"},"release")," event with correct NVR (without the artificial release suffix). You can use it for distributing RPM packages via Copr.",(0,n.kt)("br",{parentName:"li"}),"(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1478"},"packit-service#1478"),")"),(0,n.kt)("li",{parentName:"ul"},"From the security perspective, we have decided to disable the ",(0,n.kt)("inlineCode",{parentName:"li"},"create_pr")," option for our service, from now on Packit will unconditionally create PRs when running ",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream"),".\nWe have also updated the ",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream")," CLI such that it is possible to use ",(0,n.kt)("inlineCode",{parentName:"li"},"create_pr")," from configuration ",(0,n.kt)("strong",{parentName:"li"},"or")," override it via ",(0,n.kt)("inlineCode",{parentName:"li"},"--pr/--no-pr")," options.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1563"},"packit#1563"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now supports ",(0,n.kt)("inlineCode",{parentName:"li"},"release_suffix")," configuration option that allows you to override the long release string provided by Packit that is used to ensure correct ordering and uniqueness of RPMs built in Copr.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1568"},"packit#1568"),")")),(0,n.kt)("h2",{id:"week-18-may-3rd---may-9th"},"Week 18 (May 3rd - May 9th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"packit source-git")," commands learnt to replace ",(0,n.kt)("a",{parentName:"li",href:"https://packit.dev/source-git/work-with-source-git/control-patch-generation/"},"Git-trailers in commit messages")," if they already exist. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1577"},"packit#1577"),")"),(0,n.kt)("li",{parentName:"ul"},"When initializing source-git repos, the author of downstream commits created from patch files which are not in a git-am format is set to the original author of the patch-file in dist-git, instead of using the locally configured Git author. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1575"},"packit#1575"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now correctly inform users about downstream errors only on the last try. (Previously, Packit informed for all tries even the last try succeded.) (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1485"},"packit-service#1485"),")"),(0,n.kt)("li",{parentName:"ul"},"Dashboard now also shows propose-downstream jobs in pipelines view. We have also merged all jobs to one column to minimize dead space on the page. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/dashboard/pull/178"},"dashboard#178"),")")),(0,n.kt)("h2",{id:"week-19-may-10th---may-16th"},"Week 19 (May 10th - May 16th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Metadata dictionary is no longer required when specifying a job. Keys which used to belong to the yaml metadata dictionary are now keys of the job dictionary itself. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1569"},"packit#1569"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now correctly removes patches during ",(0,n.kt)("inlineCode",{parentName:"li"},"packit source-git init")," when the preamble does not contain blank lines. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1582"},"packit#1582"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now supports ",(0,n.kt)("inlineCode",{parentName:"li"},"--release-suffix")," parameter in all of the related CLI commands. Also we have added a support for the ",(0,n.kt)("inlineCode",{parentName:"li"},"release_suffix")," option from configuration to the CLI. With regards to that we have introduced a new CLI switch ",(0,n.kt)("inlineCode",{parentName:"li"},"--default-release-suffix")," that allows you to override the configuration option to Packit-generated default option that ensures correct NVR ordering of the RPMs. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1586"},"packit#1586"),")"),(0,n.kt)("li",{parentName:"ul"},"Resolved an SRPM build problem caused by a new version of git that refuses to fetch in a git repo when it's owned on the OS level by someone else. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1497"},"packit#1497"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now passes ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_COPR_PROJECT")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_COPR_RPMS")," variables to the Testing Farm. ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_COPR_PROJECT")," holds Copr project in format owner/project and ",(0,n.kt)("inlineCode",{parentName:"li"},"PACKIT_COPR_RPMS")," space-separated RPMs that were built in Copr. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1486"},"packit-service#1486"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now builds only its own dist-git commits. Other commits are not being acted upon. For reasoning, see ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/issues/1490"},"packit-service#1490"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1498"},"packit-service#1498"),")"),(0,n.kt)("li",{parentName:"ul"},"We have automated our allowlisting process via a new Packit comment command ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit verify-fas"),". You can find more info in ",(0,n.kt)("a",{parentName:"li",href:"https://packit.dev/docs/guide/#2-approval"},"our requirements"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1487"},"packit-service#1487"),")")),(0,n.kt)("h2",{id:"week-20-may-17th---may-23rd"},"Week 20 (May 17th - May 23rd)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have fixed an issue with the handling of messages from Copr on release builds, which has resulted in not setting the correct statuses on commits. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1513"},"packit-service#1513"),")"),(0,n.kt)("li",{parentName:"ul"},"When doing an automatic FAS account verification, Packit now suggests the URL where the GitHub account needs to be set. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1508"},"packit-service#1508"),")")),(0,n.kt)("h2",{id:"week-21-may-24th---may-30th"},"Week 21 (May 24th - May 30th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit will not raise an exception anymore when creating a SRPM with dangling symlinks. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1592"},"packit#1592"),")"),(0,n.kt)("li",{parentName:"ul"},"You can now override which dist-git commits will be built in Koji by specifying FAS accounts of authors and committers using\n",(0,n.kt)("inlineCode",{parentName:"li"},"allowed_pr_authors")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"allowed_committers")," in the job metadata (see ",(0,n.kt)("a",{parentName:"li",href:"https://packit.dev/docs/configuration/#koji_build"},"the documentation"),"). (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1520"},"packit-service#1520"),")")),(0,n.kt)("h2",{id:"week-22-may-31st---june-6th"},"Week 22 (May 31st - June 6th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit shows basic information about allowlisting in the status description\nwhen your namespace is not allowed.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1533"},"packit-service#1533"),")")),(0,n.kt)("h2",{id:"week-23-june-7th---june-13th"},"Week 23 (June 7th - June 13th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The creation of Bodhi updates should not time out anymore, because we no longer get the latest build of a package via Bodhi.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1612"},"packit#1612"),")"),(0,n.kt)("li",{parentName:"ul"},"We have fixed a regression where string values for the ",(0,n.kt)("inlineCode",{parentName:"li"},"targets")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"dist_git_branches")," configuration keys were not accepted.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1608"},"packit#1608"),")"),(0,n.kt)("li",{parentName:"ul"},"We improved the reporting for the test job if we are not able to find any FMF metadata and the ",(0,n.kt)("inlineCode",{parentName:"li"},"skip_build")," option is enabled.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1539"},"packit-service#1539"),")")),(0,n.kt)("h2",{id:"week-24-june-14th---june-21st"},"Week 24 (June 14th - June 21st)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Git ref name that Packit works with during ",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream")," is now made more obvious in logs.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1626"},"packit#1626"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now correctly handles creation of custom archives in root while a specfile is in a subdirectory.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1622"},"packit#1622"),")"),(0,n.kt)("li",{parentName:"ul"},"There is a new check for git projects that are allowed to use a custom Copr project.\nThere will be a better integration in the form of a new config field in Copr settings that Packit can use.\nIn the meantime, the mapping is defined and maintained by the Packit team.\nLet us know if you need a project to be allowed.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1556"},"packit-service#1556"),")"),(0,n.kt)("li",{parentName:"ul"},"A link to Copr build logs was updated: it now points to a place where logs are available once a build starts.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1554"},"packit-service#1554"),")")),(0,n.kt)("h2",{id:"week-25-june-21st---june-27th"},"Week 25 (June 21st - June 27th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit Bash completion file is no longer needlessly executable. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1634"},"packit#1634"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now works with Bodhi 5 and Bodhi 6 authentication mechanism. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1629"},"packit#1629"),")"),(0,n.kt)("li",{parentName:"ul"},"Git ref name that Packit works with during ",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream")," is now made more obvious in logs. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1626"},"packit#1626"),")"),(0,n.kt)("li",{parentName:"ul"},"We have fixed the incorrect displaying of ",(0,n.kt)("inlineCode",{parentName:"li"},"propose downstream")," results in our dashboard. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1553"},"packit-service#1553"),")")),(0,n.kt)("h2",{id:"weeks-2627-june-27thjuly-11th"},"Weeks 26\u201327 (June 27th\u2013July 11th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We adjusted the way we check the author of the PR for PRs related to\ndist-git commits that trigger Koji build jobs. This should fix the race\ncondition causing not creating Koji builds in some cases.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1573"},"packit-service#1573"),")"),(0,n.kt)("li",{parentName:"ul"},"Results from Testing Farm are now correctly reported when multiple jobs with\ndifferent identifier are defined.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1565"},"packit-service#1565"),")"),(0,n.kt)("li",{parentName:"ul"},"On a Bodhi authentication error, Packit will retry the task multiple times\nin ten-minute intervals to be able to fix the issue in the meantime.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1564"},"packit-service#1564"),")")),(0,n.kt)("h2",{id:"week-28-july-12thjuly-18th"},"Week 28 (July 12th\u2013July 18th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now guides everyone better when a FAS account is private\nand updates the internal information about installations correctly\nwhen the app is reinstalled.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1575"},"packit-service#1575"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit can now correctly create Bodhi updates using the new Bodhi 6 client.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1651"},"packit#1651"),")"),(0,n.kt)("li",{parentName:"ul"},"RPM build commands of Packit CLI have been merged into one build subcommand,\nfor more information see the updated ",(0,n.kt)("a",{parentName:"li",href:"https://packit.dev/docs/cli/build/"},"documentation"),".\nWe have also introduced a new --srpm option to the new build subcommand\nthat can be used to trigger local, Copr or Koji build from an already built\nSRPM rather than the one implicitly created by Packit.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1611"},"packit#1611"),")")),(0,n.kt)("h2",{id:"week-29-july-19thjuly-25th"},"Week 29 (July 19th\u2013July 25th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now correctly supports ",(0,n.kt)("inlineCode",{parentName:"li"},"tmt_plan")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"tf_post_install_script")," in the\nconfiguration. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1659"},"packit#1659"),")"),(0,n.kt)("li",{parentName:"ul"},"We have reverted to Bodhi 5 client since Packit couldn't create bodhi updates\nwith the new version 6 client: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/fedora-infra/bodhi/issues/4660"},"fedora-infra/bodhi#4660"),"\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1590"},"packit-service#1590"),").\nPackit also provides a more helpful error message when it hits this.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1660"},"packit#1660"),")"),(0,n.kt)("li",{parentName:"ul"},"During creating Copr builds, on Copr errors, Packit will retry the task\nmultiple times in case there is a Copr outage.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1579"},"packit-service#1579"),")")),(0,n.kt)("h2",{id:"week-30-july-26thaugust-1st"},"Week 30 (July 26th\u2013August 1st)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit has switched to ",(0,n.kt)("inlineCode",{parentName:"li"},"python-specfile")," library for handling spec files. This may cause some issues to pop up. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1588"},"packit#1588"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit CLI can now build RPMs in mock. For more information see ",(0,n.kt)("a",{parentName:"li",href:"https://packit.dev/docs/cli/build/mock"},"https://packit.dev/docs/cli/build/mock")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1662"},"packit#1662"),")"),(0,n.kt)("li",{parentName:"ul"},"When using Packit before being allowed, Packit newly links an approval issue where the self-approval can be performed. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1596"},"packit-service#1596"),")"),(0,n.kt)("li",{parentName:"ul"},"A downstream koji-build can now be re-triggered by adding a comment containing ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit koji-build")," into a dist-git pull request with target branch corresponding to the branch the build should be acted upon. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1586"},"packit-service#1586"),")")),(0,n.kt)("h2",{id:"week-31-august-2nd--august-8th"},"Week 31 (August 2nd \u2013 August 8th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Action ",(0,n.kt)("inlineCode",{parentName:"li"},"fix_spec_file")," can change a spec file - Packit now preserves that change.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1679"},"packit#1679"),")"),(0,n.kt)("li",{parentName:"ul"},"BREAKING CHANGE: fixed an issue where the repo was searched for the specfile\nbefore checking if ",(0,n.kt)("inlineCode",{parentName:"li"},"downstream_package_name")," is set, and\n",(0,n.kt)("inlineCode",{parentName:"li"},"<downstream_package_name>.spec")," can be used as the ",(0,n.kt)("inlineCode",{parentName:"li"},"specfile_path"),".\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1663"},"packit#1663"),")")),(0,n.kt)("h2",{id:"week-32-august-9th--august-15th"},"Week 32 (August 9th \u2013 August 15th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have fixed an issue when propose downstream didn't retry to download sources that were not yet available at the time of the first attempt. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1609"},"packit-service#1609"),")"),(0,n.kt)("li",{parentName:"ul"},"When creating Copr builds, Packit will now retry multiple times in case there is a GitHub outage or an internal error. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1589"},"packit-service#1589"),")")),(0,n.kt)("h2",{id:"week-33-august-16th--august-22nd"},"Week 33 (August 16th \u2013 August 22nd)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit CLI can now submit VM images in ",(0,n.kt)("a",{parentName:"li",href:"https://console.redhat.com/insights/image-builder"},"Red Hat Image Builder"),".\nAll build-related commands have now consistent ",(0,n.kt)("inlineCode",{parentName:"li"},"--wait")," / ",(0,n.kt)("inlineCode",{parentName:"li"},"--no-wait")," options.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1666"},"packit#1666"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit ",(0,n.kt)("inlineCode",{parentName:"li"},"prepare-sources")," command now has a ",(0,n.kt)("inlineCode",{parentName:"li"},"--create-symlinks")," / ",(0,n.kt)("inlineCode",{parentName:"li"},"--no-create-symlinks")," option,\nwhich enables copying the archive instead of symlinking. This will be used in the Copr environment,\nwhere symlinking the archive previously caused issues.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1682"},"packit#1682"),")"),(0,n.kt)("li",{parentName:"ul"},"We have fixed the handling of the situation when Packit lacks permission to update a Copr project.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1684"},"packit#1684"),")"),(0,n.kt)("li",{parentName:"ul"},"Dashboard should now load data for ",(0,n.kt)("a",{parentName:"li",href:"https://dashboard.packit.dev/jobs"},"jobs")," faster because\nthe database querying has been improved and also queries are done only when needed.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1617"},"packit-service#1617"),",\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/dashboard/pull/189"},"dashboard#189"),")")),(0,n.kt)("h2",{id:"week-34-august-23rd--august-29th"},"Week 34 (August 23rd \u2013 August 29th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"packit propose-downstream")," is now more informative when sources cannot be\ndownloaded. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1698"},"packit#1698"),")"),(0,n.kt)("li",{parentName:"ul"},"No more annoying issues will be created after a successful ",(0,n.kt)("em",{parentName:"li"},"propose\ndownstream"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1693"},"packit#1693"),")"),(0,n.kt)("li",{parentName:"ul"},"We have fixed an issue with reporting results when multiple Testing Farm\njobs with identifiers are configured.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1634"},"packit-service#1634"),")")),(0,n.kt)("h2",{id:"week-35-august-30th--september-5th"},"Week 35 (August 30th \u2013 September 5th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"SRPMs for Copr builds are built in Copr by default for Packit GitHub app installations since September 6, 2022.\nFor older installations, you can set the ",(0,n.kt)("inlineCode",{parentName:"li"},"srpm_build_deps")," config option to use Copr as a builder.\nLet us know if you hit any issue with the new implementation. We are going to slowly decommission the old implementation\nand are happy to help with the transition. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1636"},"packit-service#1636"),")"),(0,n.kt)("li",{parentName:"ul"},"More indexes added to the database have further improved API/dashboard response times. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1639"},"packit-service#1639"),")"),(0,n.kt)("li",{parentName:"ul"},"When submitting Testing Farm tests, Packit will now retry multiple times in case there is a failure.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1605"},"packit-service#1605"),")"),(0,n.kt)("li",{parentName:"ul"},"We have implemented checking the available composes before submitting the tests for both internal and public Testing\nFarm. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1628"},"packit-service#1628"),")")),(0,n.kt)("h2",{id:"week-36-september-6th--september-12th"},"Week 36 (September 6th \u2013 September 12th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"When querying Bodhi for information about Fedora/EPEL releases to resolve aliases,\npackit now correctly handles pagination of API results. This resolves an issue that caused\nFedora 37 not to be pointed to from any alias.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1704"},"packit#1704"),")")),(0,n.kt)("h2",{id:"week-37-september-13th--september-19th"},"Week 37 (September 13th \u2013 September 19th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added support for filenames specified in source URL fragments, for example: ",(0,n.kt)("inlineCode",{parentName:"li"},"https://example.com/foo/1.0/download.cgi#/%{name}-%{version}.tar.gz")," (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/100"},"specfile#100"),")"),(0,n.kt)("li",{parentName:"ul"},"Some more underlying improvements to our libraries and deployment.")),(0,n.kt)("h2",{id:"week-38-september-20th--september-26th"},"Week 38 (September 20th \u2013 September 26th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Propose downstream job now pushes changes even when it's not creating a new pull request. This allows updating existing pull requests. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1725"},"packit#1725"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now deduces Copr targets for Copr builds when you have set your custom Copr project to be used. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1673"},"packit-service#1673"),")"),(0,n.kt)("li",{parentName:"ul"},"Retriggering tasks via re-run button in Github commit checks when there are configured identifiers for jobs should now work correctly. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1671"},"packit-service#1671"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now reports a pending state rather than an error on Testing Farm runs in case the related copr build has not finished yet. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1669"},"packit-service#1669"),")"),(0,n.kt)("li",{parentName:"ul"},"Users can now ",(0,n.kt)("strong",{parentName:"li"},"allow")," building in a custom Copr project from a ",(0,n.kt)("em",{parentName:"li"},"git-forge")," project.\nUser has to add manually the ",(0,n.kt)("em",{parentName:"li"},"git-forge")," project reference to the Copr project settings.\nAs an example, we should add ",(0,n.kt)("em",{parentName:"li"},"github.com/packit/ogr")," to the list named ",(0,n.kt)("em",{parentName:"li"},"Packit forge project allowed")," in our ",(0,n.kt)("em",{parentName:"li"},"packit-dev")," Copr project settings: ",(0,n.kt)("a",{parentName:"li",href:"https://copr.fedorainfracloud.org/coprs/packit/packit-dev/edit#packit_forge_projects_allowed"},"https://copr.fedorainfracloud.org/coprs/packit/packit-dev/edit#packit_forge_projects_allowed"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1638"},"packit-service#1638"),")")),(0,n.kt)("h2",{id:"week-39-september-27th--october-3rd"},"Week 39 (September 27th \u2013 October 3rd)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have improved mapping of Testing Farm Composes, if you have set your own custom mapping and the TF Compose is available, it will be used as is without any additional modifications we do (version, etc.). (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1675"},"packit-service#1675"),")"),(0,n.kt)("li",{parentName:"ul"},"We have added support for running the tests with Copr builds built by Packit in another pull request (in a different repository). You can read more about this feature in ",(0,n.kt)("a",{parentName:"li",href:"https://packit.dev/docs/testing-farm/#running-tests-with-builds-from-another-pull-request"},"our documentation"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1658"},"packit-service#1658"),")")),(0,n.kt)("h2",{id:"week-40-october-4th--october-10th"},"Week 40 (October 4th \u2013 October 10th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now correctly selects a Testing Farm compose when it's specified correctly in the configuration without an architecture suffix. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1689"},"packit-service#1689"),")"),(0,n.kt)("li",{parentName:"ul"},"We have fixed an issue that prevented Packit to work correctly on merge requests on GitLab instances. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1683"},"packit-service#1683"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit Service will now replace invalid characters for the Copr projects using the default naming scheme. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1684"},"packit-service#1684"),")"),(0,n.kt)("li",{parentName:"ul"},"When we report to set ",(0,n.kt)("inlineCode",{parentName:"li"},"Packit allowed forge projects")," in the Copr projects, the link for the group projects is now correct. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1680"},"packit-service#1680"),")"),(0,n.kt)("li",{parentName:"ul"},"It is now possible to filter changelog entries by specifying lower bound EVR, upper bound EVR or both. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/104"},"specfile#104"),")")),(0,n.kt)("h2",{id:"week-41-october-11th--october-17th"},"Week 41 (October 11th \u2013 October 17th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now correctly authenticates with Bodhi 6 and therefore creates Bodhi updates. \ud83d\ude80 (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1746"},"packit#1746"),", ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1704"},"packit-service#1704"),")"),(0,n.kt)("li",{parentName:"ul"},"There are two changes in the naming of the service jobs:\nThe ",(0,n.kt)("inlineCode",{parentName:"li"},"build")," job type name has been deprecated. It aimed to be an alias when Packit supported just one build type.\nThere are currently more types of builds and just ",(0,n.kt)("inlineCode",{parentName:"li"},"build")," can be misleading. Please, be explicit and use ",(0,n.kt)("inlineCode",{parentName:"li"},"copr_build")," instead.\nThe ",(0,n.kt)("inlineCode",{parentName:"li"},"production_build")," name for upstream Koji build is misleading because it is not used to run production/non-scratch\nbuilds and because it can be confused with the ",(0,n.kt)("inlineCode",{parentName:"li"},"koji_build")," job that is triggered for dist-git commits.\n(The ",(0,n.kt)("inlineCode",{parentName:"li"},"koji_build")," job can trigger both scratch and non-scratch/production builds.)\nTo be explicit, use ",(0,n.kt)("inlineCode",{parentName:"li"},"upstream_koji_build")," for builds triggered in upstream and ",(0,n.kt)("inlineCode",{parentName:"li"},"koji_build")," for builds triggered in downstream.\nUsers will get a neutral status describing the change when the old names are in use. The status will become a warning\nstarting in November and the old names will be removed by the end of the year. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1656"},"packit-service#1656"),")"),(0,n.kt)("li",{parentName:"ul"},"We've fixed the Markdown table format in the GitHub checks page, which was broken when the user's repo was not allowed to use Packit. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1688"},"packit-service#1688"),")")),(0,n.kt)("h2",{id:"week-42-october-17th--october-23rd"},"Week 42 (October 17th \u2013 October 23rd)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now won't repeatedly comment in pull requests about the need to migrate configuration of allowed forge projects to Copr. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1716"},"packit-service#1716"),")")),(0,n.kt)("h2",{id:"week-43-october-25th--october-31th"},"Week 43 (October 25th \u2013 October 31th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed an issue with version and release in a spec file being updated even if ",(0,n.kt)("inlineCode",{parentName:"li"},"--no-bump")," flag was specified.\nAlso fixed an issue when ",(0,n.kt)("inlineCode",{parentName:"li"},"None")," appeared in release instead of a number.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1753"},"packit#1753"),")"),(0,n.kt)("li",{parentName:"ul"},"We have improved the handling of test jobs which should fix related issues with reporting and triggering\nthat occurred when multiple test jobs were configured.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1717"},"packit-service#1717"),")")),(0,n.kt)("h2",{id:"week-44-november-1st--november-7th"},"Week 44 (November 1st \u2013 November 7th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed an issue due to which the repository was never searched for a specfile if ",(0,n.kt)("inlineCode",{parentName:"li"},"specfile_path")," was not specified, and ",(0,n.kt)("inlineCode",{parentName:"li"},"specfile_path")," was always set to ",(0,n.kt)("inlineCode",{parentName:"li"},"<repo_name>.spec"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1758"},"packit#1758"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit is now able to generate automatic Bodhi update notes including a changelog diff since the latest stable build of a package. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1747"},"packit#1747"),")"),(0,n.kt)("li",{parentName:"ul"},"Description of Bodhi updates now contains a changelog diff. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1713"},"packit-service#1713"),")")),(0,n.kt)("h2",{id:"week-45-november-8th--november-14th"},"Week 45 (November 8th \u2013 November 14th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You can re-trigger a Bodhi update via dist-git PR comment ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit create-update"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1729"},"packit-service#1729"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now correctly finds an SRPM when rpmbuild reports warnings while it parses a spec file. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1772"},"packit#1772"),")"),(0,n.kt)("li",{parentName:"ul"},"When packit.yaml is present in the repo but is empty, Packit now produces a better error message instead of an internal Python exception. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1769"},"packit#1769"),")"),(0,n.kt)("li",{parentName:"ul"},"Retriggering of tests when there is a build job and a test job with an identifier configured was fixed. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1731"},"packit-service#1731"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit GitHub app will not modify a package version when ",(0,n.kt)("inlineCode",{parentName:"li"},"release_suffix")," configuration option is empty. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1738"},"packit-service#1738"),")"),(0,n.kt)("li",{parentName:"ul"},"Our ",(0,n.kt)("inlineCode",{parentName:"li"},"specfile")," parser now supports localized tags (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"Summary(fr)"),") and tags with qualifiers (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"Requires(post)"),"). (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/132"},"specfile#132"),")"),(0,n.kt)("li",{parentName:"ul"},"SRPM build logs are now deleted after 30 days instead of 90 days. This doesn't apply to SRPM builds done in Copr, which deletes the logs after 14 days. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1745"},"packit/packit-service#1745"),")")),(0,n.kt)("h2",{id:"week-46-november-15th--november-21st"},"Week 46 (November 15th \u2013 November 21st)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"srpm_build_deps")," can be now configured also on the job configuration level. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1757"},"packit-service#1757"),")")),(0,n.kt)("h2",{id:"week-47-november-22nd--november-28th"},"Week 47 (November 22nd \u2013 November 28th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"We have changed the limit for our ",(0,n.kt)("a",{parentName:"li",href:"https://packit.dev/docs/service-level-objectives/#slo1-changes-to-github-prs-receive-a-status-update-within-15-seconds-in-99-of-cases"},"SLO1"),": it was increased from 15s to 30s to account for setting all statuses. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1776"},"packit-service#1776"),")"),(0,n.kt)("li",{parentName:"ul"},"The job names deprecated in October (",(0,n.kt)("inlineCode",{parentName:"li"},"build")," alias of ",(0,n.kt)("inlineCode",{parentName:"li"},"copr_build")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"production_build")," replaced by ",(0,n.kt)("inlineCode",{parentName:"li"},"upstream_koji_build"),") newly lead to an error state (was ",(0,n.kt)("inlineCode",{parentName:"li"},"neutral")," ) of the deprecated status created by Packit.\nThe old names will be removed by the end of the year. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1777"},"packit-service#1777"),")"),(0,n.kt)("li",{parentName:"ul"},"The Copr build logs URL now points to logs that are available even while building. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1767"},"packit-service#1767"),")"),(0,n.kt)("li",{parentName:"ul"},"Fixed an issue that caused empty lines originally inside changelog entries to appear at the end. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/140"},"specfile#140"),")")),(0,n.kt)("h2",{id:"week-48-november-29th--december-5th"},"Week 48 (November 29th \u2013 December 5th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"packit propose-downstream")," now uploads all remote sources (those specified as URLs) and the\nsource specified by ",(0,n.kt)("inlineCode",{parentName:"li"},"spec_source_id")," (whether remote or not) to lookaside. Previously, only Source0\nwas uploaded. Source0 is no longer treated specially, but as ",(0,n.kt)("inlineCode",{parentName:"li"},"spec_source_id")," is ",(0,n.kt)("inlineCode",{parentName:"li"},"Source0")," by default,\nSource0 is still being uploaded by default unless ",(0,n.kt)("inlineCode",{parentName:"li"},"spec_source_id")," is overriden.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1778"},"packit#1778"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/configuration/upstream/vm_image_build"},"A VM image build")," can be triggered inside a PR via a comment\ncommand ",(0,n.kt)("inlineCode",{parentName:"li"},"/packit vm-image-build")," (the job needs to be defined in the configuration).\nThis feature is experimental and is still being tested.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1761"},"packit-service#1761"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Section")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"Tag")," objects in ",(0,n.kt)("inlineCode",{parentName:"li"},"specfile")," library now have ",(0,n.kt)("inlineCode",{parentName:"li"},"normalized_name")," property for more convenient comparison.\nThere is a new method, ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.get_active_macros()"),", to get active macros in the context of the spec file.\nThe underlying ",(0,n.kt)("inlineCode",{parentName:"li"},"rpm.spec")," instance is now exposed as ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.rpm_spec")," property.\nThere is a new utility class for parsing NEVRA strings. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/141"},"specfile#141"),")")),(0,n.kt)("h2",{id:"week-49-december-6th--december-12th"},"Week 49 (December 6th \u2013 December 12th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Packit now correctly handles a race condition when it tries to create bodhi\nupdates for builds that are not yet tagged properly. CLI exprience was also\nimproved for this case.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1803"},"packit#1803"),")"),(0,n.kt)("li",{parentName:"ul"},"Packit now resets the ",(0,n.kt)("inlineCode",{parentName:"li"},"Release")," tag during ",(0,n.kt)("inlineCode",{parentName:"li"},"propose-downstream")," if the version\nis updated and the ",(0,n.kt)("inlineCode",{parentName:"li"},"Release")," tag has not explicitly been overridden in the\nupstream specfile.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1801"},"packit#1801"),")"),(0,n.kt)("li",{parentName:"ul"},"If you still don't build SRPMs in Copr you'll get a warning status that you\nshould use ",(0,n.kt)("inlineCode",{parentName:"li"},"srpm_build_deps")," to be sure that we don't break your workflow once\nwe switch to building all SRPMs in Copr in January.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1804"},"packit-service#1804"),")"),(0,n.kt)("li",{parentName:"ul"},"We've increased internal task retry backoff time in Packit GitHub app from 3 to\n7 seconds. We hope this will increase success for network flakes and ",(0,n.kt)("em",{parentName:"li"},"random"),"\ninfrastructure issues. Creation of bodhi updates should be now more reliable too\nas Packit will try more times (from 2 to 5).\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1800"},"packit-service#1800"),")"),(0,n.kt)("li",{parentName:"ul"},"Tags enclosed in conditional macro expansions are not ignored anymore.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/156"},"specfile#156"),")"),(0,n.kt)("li",{parentName:"ul"},"Context managers (",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.sections()"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.tags()")," etc.) can now be nested\nand combined together (with one exception - ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.macro_definitions()"),"), and\nit is also possible to use tag properties (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.version"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.license"),")\ninside them. It is also possible to access the data directly, avoiding the ",(0,n.kt)("inlineCode",{parentName:"li"},"with"),"\nstatement, by using the ",(0,n.kt)("inlineCode",{parentName:"li"},"content")," property (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile.tags().content"),"), but\nbe aware that no modifications done to such data will be preserved. You must use\n",(0,n.kt)("inlineCode",{parentName:"li"},"with")," to make changes.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/153"},"specfile#153"),")")),(0,n.kt)("h2",{id:"week-50-december-13th--december-19th"},"Week 50 (December 13th \u2013 December 19th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Context managers are no longer shared between ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile")," instances, making it possible\nto work with more than one ",(0,n.kt)("inlineCode",{parentName:"li"},"Specfile")," instance at a time.\n(",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/157"},"specfile#157"),")")))}u.isMDXComponent=!0}}]);