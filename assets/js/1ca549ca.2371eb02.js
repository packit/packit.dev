"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[93300],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(r),u=a,g=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return r?n.createElement(g,i(i({ref:t},l),{},{components:r})):n.createElement(g,i({ref:t},l))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},69217:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={title:"No more divergent dist-git branches with Packit!",date:new Date("2024-10-28T10:46:18.000Z"),authors:"mmassari",tags:["propose-downstream","pull-from-upstream","downstream","configuration"]},i=void 0,s={permalink:"/posts/non-divergent-dist-git-branches",editUrl:"https://github.com/packit/packit.dev/tree/main/posts/non-divergent-dist-git-branches/index.md",source:"@site/posts/non-divergent-dist-git-branches/index.md",title:"No more divergent dist-git branches with Packit!",description:"Were you annoyed by Packit creating divergent branches in your package's dist-git repository? You'll be happy to know that Packit now supports a new distgitbranches syntax that enables fast-forwarding commits between branches.",date:"2024-10-28T10:46:18.000Z",formattedDate:"October 28, 2024",tags:[{label:"propose-downstream",permalink:"/posts/tags/propose-downstream"},{label:"pull-from-upstream",permalink:"/posts/tags/pull-from-upstream"},{label:"downstream",permalink:"/posts/tags/downstream"},{label:"configuration",permalink:"/posts/tags/configuration"}],readingTime:.555,hasTruncateMarker:!0,authors:[{name:"Maja Massarini",email:"mmassari@redhat.com",url:"https://github.com/majamassarini",imageURL:"https://github.com/majamassarini.png",key:"mmassari"}],frontMatter:{title:"No more divergent dist-git branches with Packit!",date:"2024-10-28T10:46:18.000Z",authors:"mmassari",tags:["propose-downstream","pull-from-upstream","downstream","configuration"]},prevItem:{title:"Packit dashboard and Project Mycorrhiza",permalink:"/posts/project-mycorrhiza"},nextItem:{title:"Non-git upstreams support and simplified configuration for easier onboarding!",permalink:"/posts/non-git-upstreams-support"}},p={authorsImageUrls:[void 0]},c=[{value:"What&#39;s New",id:"whats-new",level:2}],l={toc:c},m="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Were you annoyed by Packit creating divergent branches in your package's dist-git repository? You'll be happy to know that Packit now supports a new ",(0,a.kt)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax that enables fast-forwarding commits between branches."),(0,a.kt)("h2",{id:"whats-new"},"What's New"),(0,a.kt)("p",null,"When defining a ",(0,a.kt)("inlineCode",{parentName:"p"},"propose-downstream")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"pull-from-upstream")," job, you can use the new ",(0,a.kt)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  dist_git_branches:\n    rawhide:\n      fast_forward_merge_into: [fedora-branched]\n    epel-9: {}\n")),(0,a.kt)("p",null,"In this example, Packit runs the downstream synchronization process for the ",(0,a.kt)("inlineCode",{parentName:"p"},"rawhide")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"epel-9")," branches as usual. Additionally, Packit opens a new pull request, reusing the commit from ",(0,a.kt)("inlineCode",{parentName:"p"},"rawhide"),", for every ",(0,a.kt)("inlineCode",{parentName:"p"},"fedora-branched")," branch, allowing it to be fast-forwarded when merging."),(0,a.kt)("p",null,"Do you want to know more? Look at the ",(0,a.kt)("a",{parentName:"p",href:"/docs/fedora-releases-guide/non-divergent-dist-git-branches"},"non-divergent dist-git branches guide")))}d.isMDXComponent=!0}}]);