"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[75773],{15680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>y});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,y=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(y,i(i({ref:t},s),{},{components:n})):r.createElement(y,i({ref:t},s))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},90945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(58168),a=(n(96540),n(15680));const o={title:"Onboard automation scripts",authors:["dhodovsk","phracek","ttomecek","flachman",null]},i=void 0,l={unversionedId:"internal-automation/onboard/index",id:"internal-automation/onboard/index",title:"Onboard automation scripts",description:"input_packages.yml",source:"@site/research/internal-automation/onboard/index.md",sourceDirName:"internal-automation/onboard",slug:"/internal-automation/onboard/",permalink:"/research/internal-automation/onboard/",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/internal-automation/onboard/index.md",tags:[],version:"current",frontMatter:{title:"Onboard automation scripts",authors:["dhodovsk","phracek","ttomecek","flachman",null]},sidebar:"autogenerated",previous:{title:"Automation of the certificate renewal",permalink:"/research/internal-automation/cert-management"},next:{title:"Status",permalink:"/research/internal-automation/onboard/status"}},p={},c=[],s={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(u,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"input_packages.yml")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Input for ",(0,a.yg)("inlineCode",{parentName:"li"},"onboard.py")," script. List of packages that are going to be onboarded with the script.")),(0,a.yg)("p",null,"Accepted format is list of YAML dicts:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'-\n  downstream_name: ogr\n  upstream_url: "git@github.com:packit-service/ogr.git"\n-\n  downstream_name: packit\n  upstream_url: "https://github.com/packit-service/packit"\n')),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"onboard.py")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"For every package in ",(0,a.yg)("inlineCode",{parentName:"li"},"input_packages.yml"),", the script:")),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Clones upstream repository"),(0,a.yg)("li",{parentName:"ol"},"Makes sure packit configuration is present. If it is not,\ngenerates it using ",(0,a.yg)("inlineCode",{parentName:"li"},"packit generate")),(0,a.yg)("li",{parentName:"ol"},"Runs ",(0,a.yg)("inlineCode",{parentName:"li"},"packit status")),(0,a.yg)("li",{parentName:"ol"},"Tries building srpm with upstream specfile"),(0,a.yg)("li",{parentName:"ol"},"Tries building srpm with downstream specfile")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Script stores all the log output in the ",(0,a.yg)("inlineCode",{parentName:"li"},"./output")," directory, where every instance\nof run is stored in separate directory marked by date."),(0,a.yg)("li",{parentName:"ul"},"The directory contains logs separated by package name and results.yml file with the results for all packages."),(0,a.yg)("li",{parentName:"ul"},"Run the script using:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"python3 onboard.py\n")))}m.isMDXComponent=!0}}]);