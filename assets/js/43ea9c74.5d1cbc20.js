"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[25511],{15680:(e,t,i)=>{i.d(t,{xA:()=>s,yg:()=>f});var n=i(96540);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function p(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var c=n.createContext({}),l=function(e){var t=n.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(i),d=r,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return i?n.createElement(f,a(a({ref:t},s),{},{components:i})):n.createElement(f,a({ref:t},s))}));function f(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[m]="string"==typeof e?e:r,a[1]=p;for(var l=2;l<o;l++)a[l]=i[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},17776:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=i(58168),r=(i(96540),i(15680));const o={title:"init",sidebar_position:3},a="packit init",p={unversionedId:"cli/init",id:"cli/init",title:"init",description:"Initiate a repository to start using packit. By default this command adds",source:"@site/docs/cli/init.md",sourceDirName:"cli",slug:"/cli/init",permalink:"/docs/cli/init",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/cli/init.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"init",sidebar_position:3},sidebar:"autogenerated",previous:{title:"Packit CLI",permalink:"/docs/cli/"},next:{title:"create-update",permalink:"/docs/cli/create-update"}},c={},l=[{value:"Help",id:"help",level:2}],s={toc:l},m="wrapper";function u(e){let{components:t,...i}=e;return(0,r.yg)(m,(0,n.A)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"packit-init"},(0,r.yg)("inlineCode",{parentName:"h1"},"packit init")),(0,r.yg)("p",null,"Initiate a repository to start using packit. By default this command adds\n",(0,r.yg)("inlineCode",{parentName:"p"},".packit.yaml")," config file to the git repository in the current working\ndirectory."),(0,r.yg)("p",null,"If a ",(0,r.yg)("inlineCode",{parentName:"p"},".pre-commit-config.yaml")," file is found at the root of the git repository, ",(0,r.yg)("inlineCode",{parentName:"p"},"init")," will add a pre-commit hook, which automatically runs ",(0,r.yg)("inlineCode",{parentName:"p"},"packit config validate")," to check the validity of ",(0,r.yg)("inlineCode",{parentName:"p"},".packit.yaml")," upon pre-commit. Before adding this hook, ",(0,r.yg)("inlineCode",{parentName:"p"},"init")," also checks for the presence of a ",(0,r.yg)("inlineCode",{parentName:"p"},".git")," repo. This behavior can be disabled using the ",(0,r.yg)("inlineCode",{parentName:"p"},"--without-precommit")," flag."),(0,r.yg)("p",null,"In case ",(0,r.yg)("inlineCode",{parentName:"p"},".pre-commit-config.yaml")," is not found at the root of the repository, this behavior is skipped and can be forced using the ",(0,r.yg)("inlineCode",{parentName:"p"},"--force-precommit")," flag. Please note that the\ntwo listed flags ",(0,r.yg)("inlineCode",{parentName:"p"},"--without-precommit")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"--force-precommit")," are mutually exclusive."),(0,r.yg)("p",null,"If a spec file is found in the git repository, ",(0,r.yg)("inlineCode",{parentName:"p"},"init")," will set\n",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/#specfile_path"},"specfile_path")," to point to it in ",(0,r.yg)("inlineCode",{parentName:"p"},".packit.yaml"),".\nOtherwise, ",(0,r.yg)("inlineCode",{parentName:"p"},"specfile_path")," is set to ",(0,r.yg)("inlineCode",{parentName:"p"},"<the name of the repository>.spec"),"."),(0,r.yg)("p",null,"See ",(0,r.yg)("a",{parentName:"p",href:"/docs/cli/source-git/init"},(0,r.yg)("inlineCode",{parentName:"a"},"source-git init"))," if you want to\ninitialize a ",(0,r.yg)("a",{parentName:"p",href:"/source-git"},"source-git repo"),"."),(0,r.yg)("h2",{id:"help"},"Help"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"Usage: packit init [OPTIONS] [PATH_OR_URL]\n\n  Create the initial Packit configuration in a repository\n\n  See 'packit source-git init', if you want to initialize a repository as a\n  source-git repo.\n\nOptions:\n  --force-precommit    Automatically create an empty pre-commit configuration file if missing.\n  --without-precommit  Skip adding pre-commit hook to pre-commit configuration file.\n  -f, --force          Reset config to default if already exists.\n  -h, --help           Show this message and exit.\n")))}u.isMDXComponent=!0}}]);