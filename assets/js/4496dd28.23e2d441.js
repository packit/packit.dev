"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[7844],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),g=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=g(e.components);return r.createElement(d.Provider,{value:n},e.children)},p="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=g(t),u=a,m=p["".concat(d,".").concat(u)]||p[u]||l[u]||i;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var g=2;g<i;g++)o[g]=t[g];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},33940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>g});var r=t(58168),a=(t(96540),t(15680));const i={title:"Non-divergent dist-git branches",sidebar_position:7},o="Non-divergent dist-git branches",s={unversionedId:"fedora-releases-guide/non-divergent-dist-git-branches",id:"fedora-releases-guide/non-divergent-dist-git-branches",title:"Non-divergent dist-git branches",description:"To prevent your dist-git branches from diverging, you can use the following distgitbranches syntax:",source:"@site/docs/fedora-releases-guide/non-divergent-dist-git-branches.md",sourceDirName:"fedora-releases-guide",slug:"/fedora-releases-guide/non-divergent-dist-git-branches",permalink:"/docs/fedora-releases-guide/non-divergent-dist-git-branches",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/fedora-releases-guide/non-divergent-dist-git-branches.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Non-divergent dist-git branches",sidebar_position:7},sidebar:"autogenerated",previous:{title:"Dist-git repository onboarding",permalink:"/docs/fedora-releases-guide/dist-git-onboarding"},next:{title:"Releasing multiple packages in a single update",permalink:"/docs/fedora-releases-guide/releasing-multiple-packages"}},d={},g=[],c={toc:g},p="wrapper";function l(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"non-divergent-dist-git-branches"},"Non-divergent dist-git branches"),(0,a.yg)("p",null,"To prevent your dist-git branches from diverging, you can use the following ",(0,a.yg)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},"  dist_git_branches:\n    rawhide:\n      fast_forward_merge_into: [fedora-branched]\n    epel-9: {}    \n")),(0,a.yg)("p",null,"In this example, Packit runs the downstream synchronization process for the ",(0,a.yg)("inlineCode",{parentName:"p"},"rawhide")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"epel-9")," branches as usual. Additionally, Packit opens a new pull request reusing the commit from ",(0,a.yg)("inlineCode",{parentName:"p"},"rawhide")," for every ",(0,a.yg)("inlineCode",{parentName:"p"},"fedora-branched")," branch, allowing it to be fast-forwarded when merging."),(0,a.yg)("p",null,"You can learn more about the ",(0,a.yg)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax for ",(0,a.yg)("inlineCode",{parentName:"p"},"propose_downstream")," ",(0,a.yg)("a",{parentName:"p",href:"docs/configuration/upstream/propose_downstream#optional-parameters"},"here")," and for ",(0,a.yg)("inlineCode",{parentName:"p"},"pull_of_upstream")," ",(0,a.yg)("a",{parentName:"p",href:"docs/configuration/downstream/pull_from_upstream#optional-parameters"},"here"),"."),(0,a.yg)("admonition",{title:"How to Reconcile Divergent Branches",type:"warning"},(0,a.yg)("p",{parentName:"admonition"},"If you are already using Packit, your branches may have diverged. You need to reconcile them before using the new ",(0,a.yg)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax. For the configuration example above and the current state of the branched Fedora releases, you need to:"),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre"},"git checkout rawhide\ngit merge f39\ngit merge f40\ngit merge f41\n")),(0,a.yg)("p",{parentName:"admonition"},"You shouldn't encounter any conflicts. However, if you have a conflict in the ",(0,a.yg)("inlineCode",{parentName:"p"},".gitignore")," file, it is safe to keep changes from both ",(0,a.yg)("inlineCode",{parentName:"p"},"rawhide")," and the incoming branch. If you have a conflict in the changelog section of the specfile, ensure you ",(0,a.yg)("strong",{parentName:"p"},"merge all the missing changelogs")," into ",(0,a.yg)("inlineCode",{parentName:"p"},"rawhide")," and list them ",(0,a.yg)("strong",{parentName:"p"},"in the correct order")," (newest changelogs first). Once ",(0,a.yg)("inlineCode",{parentName:"p"},"rawhide")," is ready, you can proceed with:"),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre"},"# [TODO] Adjust the releases, if needed.\ngit checkout f39; git merge --ff-only rawhide\ngit checkout f40; git merge --ff-only rawhide\ngit checkout f41; git merge --ff-only rawhide\n"))),(0,a.yg)("admonition",{title:"Fast Forwarding multiple commits does not automatically trigger a Koji build (Yet)",type:"warning"},(0,a.yg)("p",{parentName:"admonition"},"Unfortunately, there is a ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/issues/2537"},"bug")," that prevents Packit from triggering the ",(0,a.yg)("strong",{parentName:"p"},"Koji build")," when more than one commit has been forwarded in a branch."),(0,a.yg)("p",{parentName:"admonition"},"You can work around this bug by manually retriggering the Koji build by commenting on the downstream merged pull request with ",(0,a.yg)("inlineCode",{parentName:"p"},"/packit koji-build"),".")))}l.isMDXComponent=!0}}]);