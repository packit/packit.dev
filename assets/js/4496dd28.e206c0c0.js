"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[56080],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},l="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=c(n),u=a,m=l["".concat(d,".").concat(u)]||l[u]||g[u]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[l]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},77570:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={title:"Non-divergent dist-git branches",sidebar_position:7},o="Non-divergent dist-git branches",s={unversionedId:"fedora-releases-guide/non-divergent-dist-git-branches",id:"fedora-releases-guide/non-divergent-dist-git-branches",title:"Non-divergent dist-git branches",description:"To prevent your dist-git branches from diverging, you can use the following distgitbranches syntax:",source:"@site/docs/fedora-releases-guide/non-divergent-dist-git-branches.md",sourceDirName:"fedora-releases-guide",slug:"/fedora-releases-guide/non-divergent-dist-git-branches",permalink:"/docs/fedora-releases-guide/non-divergent-dist-git-branches",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/fedora-releases-guide/non-divergent-dist-git-branches.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Non-divergent dist-git branches",sidebar_position:7},sidebar:"autogenerated",previous:{title:"Dist-git repository onboarding",permalink:"/docs/fedora-releases-guide/dist-git-onboarding"},next:{title:"Releasing multiple packages in a single update",permalink:"/docs/fedora-releases-guide/releasing-multiple-packages"}},d={},c=[],p={toc:c},l="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"non-divergent-dist-git-branches"},"Non-divergent dist-git branches"),(0,a.kt)("p",null,"To prevent your dist-git branches from diverging, you can use the following ",(0,a.kt)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"  dist_git_branches:\n    rawhide:\n      fast_forward_merge_into: [fedora-branched]\n    epel-9: {}    \n")),(0,a.kt)("p",null,"In this example, Packit runs the downstream synchronization process for the ",(0,a.kt)("inlineCode",{parentName:"p"},"rawhide")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"epel-9")," branches as usual. Additionally, Packit opens a new pull request reusing the commit from ",(0,a.kt)("inlineCode",{parentName:"p"},"rawhide")," for every ",(0,a.kt)("inlineCode",{parentName:"p"},"fedora-branched")," branch, allowing it to be fast-forwarded when merging."),(0,a.kt)("p",null,"You can learn more about the ",(0,a.kt)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax for ",(0,a.kt)("inlineCode",{parentName:"p"},"propose_downstream")," ",(0,a.kt)("a",{parentName:"p",href:"docs/configuration/upstream/propose_downstream#optional-parameters"},"here")," and for ",(0,a.kt)("inlineCode",{parentName:"p"},"pull_of_upstream")," ",(0,a.kt)("a",{parentName:"p",href:"docs/configuration/downstream/pull_from_upstream#optional-parameters"},"here"),"."),(0,a.kt)("admonition",{title:"How to Reconcile Divergent Branches",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"If you are already using Packit, your branches may have diverged. You need to reconcile them before using the new ",(0,a.kt)("inlineCode",{parentName:"p"},"dist_git_branches")," syntax. For the configuration example above and the current state of the branched Fedora releases, you need to:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"git checkout rawhide\ngit merge f39\ngit merge f40\ngit merge f41\n")),(0,a.kt)("p",{parentName:"admonition"},"You shouldn't encounter any conflicts. However, if you have a conflict in the ",(0,a.kt)("inlineCode",{parentName:"p"},".gitignore")," file, it is safe to keep changes from both ",(0,a.kt)("inlineCode",{parentName:"p"},"rawhide")," and the incoming branch. If you have a conflict in the changelog section of the specfile, ensure you ",(0,a.kt)("strong",{parentName:"p"},"merge all the missing changelogs")," into ",(0,a.kt)("inlineCode",{parentName:"p"},"rawhide")," and list them ",(0,a.kt)("strong",{parentName:"p"},"in the correct order")," (newest changelogs first). Once ",(0,a.kt)("inlineCode",{parentName:"p"},"rawhide")," is ready, you can proceed with:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"# [TODO] Adjust the releases, if needed.\ngit checkout f39; git merge --ff-only rawhide\ngit checkout f40; git merge --ff-only rawhide\ngit checkout f41; git merge --ff-only rawhide\n"))),(0,a.kt)("admonition",{title:"Fast Forwarding multiple commits does not automatically trigger a Koji build (Yet)",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Unfortunately, there is a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/packit/packit-service/issues/2537"},"bug")," that prevents Packit from triggering the ",(0,a.kt)("strong",{parentName:"p"},"Koji build")," when more than one commit has been forwarded in a branch."),(0,a.kt)("p",{parentName:"admonition"},"You can work around this bug by manually retriggering the Koji build by commenting on the downstream merged pull request with ",(0,a.kt)("inlineCode",{parentName:"p"},"/packit koji-build"),".")))}g.isMDXComponent=!0}}]);