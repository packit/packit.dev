"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[56362],{15680:(e,t,r)=>{r.d(t,{xA:()=>a,yg:()=>d});var i=r(96540);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function n(e,t){if(null==e)return{};var r,i,s=function(e,t){if(null==e)return{};var r,i,s={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var _=i.createContext({}),c=function(e){var t=i.useContext(_),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},a=function(e){var t=c(e.components);return i.createElement(_.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,_=e.parentName,a=n(e,["components","mdxType","originalType","parentName"]),l=c(r),g=s,d=l["".concat(_,".").concat(g)]||l[g]||u[g]||o;return r?i.createElement(d,p(p({ref:t},a),{},{components:r})):i.createElement(d,p({ref:t},a))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,p=new Array(o);p[0]=g;var n={};for(var _ in t)hasOwnProperty.call(t,_)&&(n[_]=t[_]);n.originalType=e,n[l]="string"==typeof e?e:s,p[1]=n;for(var c=2;c<o;c++)p[c]=r[c];return i.createElement.apply(null,p)}return i.createElement.apply(null,r)}g.displayName="MDXCreateElement"},34496:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>_,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>c});var i=r(58168),s=(r(96540),r(15680));const o={title:"Postgres views",authors:"mmassari"},p=void 0,n={unversionedId:"database/postgres-views/index",id:"database/postgres-views/index",title:"Postgres views",description:"Why this research",source:"@site/research/database/postgres-views/index.md",sourceDirName:"database/postgres-views",slug:"/database/postgres-views/",permalink:"/research/database/postgres-views/",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/database/postgres-views/index.md",tags:[],version:"current",frontMatter:{title:"Postgres views",authors:"mmassari"},sidebar:"autogenerated",previous:{title:"Data stores",permalink:"/research/database/data-stores"},next:{title:"\u2039commit_sha\u203a refactor follow-up",permalink:"/research/database/refactoring_project_events_and_commit_sha"}},_={},c=[{value:"Why this research",id:"why-this-research",level:2},{value:"Materialized views",id:"materialized-views",level:2},{value:"Normal views",id:"normal-views",level:2}],a={toc:c},l="wrapper";function u(e){let{components:t,...r}=e;return(0,s.yg)(l,(0,i.A)({},a,r,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("h2",{id:"why-this-research"},"Why this research"),(0,s.yg)("p",null,"While working on ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/issues/1328"},"this card")," I thought that a ",(0,s.yg)("inlineCode",{parentName:"p"},"sql view")," could have been usefull to speed up queries and simplify the code.\nI took as a reference the code for the ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/blob/01cbaf4fc3eb1898a1bb9d73a638d218b7a9c8d0/packit_service/models.py#L812-L869"},"usage statistics"),".\nMy goal was to avoid duplicating a field (as requested by step 3 in ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/issues/1328"},"this card"),"), speeding up the query and make the code more simple using ",(0,s.yg)("inlineCode",{parentName:"p"},"sql views"),".\nImplicitly I was working also on ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/issues/1986"},"this card"),"."),(0,s.yg)("h2",{id:"materialized-views"},"Materialized views"),(0,s.yg)("p",null,"My first thought was that ",(0,s.yg)("inlineCode",{parentName:"p"},"materialized views")," could improve queries' performance."),(0,s.yg)("p",null,"To create a ",(0,s.yg)("inlineCode",{parentName:"p"},"materialized view")," -> ",(0,s.yg)("strong",{parentName:"p"},"4097.513 ms"),"."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE MATERIALIZED VIEW copr_target_builds_for_pull_requests AS\n    SELECT git_projects.project_url, git_projects.repo_name, copr_build_targets.build_id, pipelines.datetime\n    FROM git_projects\n    JOIN pull_requests ON git_projects.id = pull_requests.project_id\n    JOIN job_triggers ON job_triggers.trigger_id = pull_requests.id\n    JOIN pipelines ON pipelines.job_trigger_id = job_triggers.id\n    JOIN copr_build_groups ON copr_build_groups.id = pipelines.copr_build_group_id\n    JOIN copr_build_targets ON copr_build_targets.copr_build_group_id = copr_build_groups.id\n    ORDER BY git_projects.project_url, git_projects.instance_url;\n")),(0,s.yg)("hr",null),(0,s.yg)("p",null,"To refresh the ",(0,s.yg)("inlineCode",{parentName:"p"},"materialized view")," -> ",(0,s.yg)("strong",{parentName:"p"},"5526.618 ms")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"SELECT * FROM copr_target_builds_for_pull_requests;\n")),(0,s.yg)("hr",null),(0,s.yg)("p",null,"To query the ",(0,s.yg)("inlineCode",{parentName:"p"},"materialized view")," -> ",(0,s.yg)("strong",{parentName:"p"},"904.686 ms")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"SELECT * FROM copr_target_builds_for_pull_requests;\n")),(0,s.yg)("hr",null),(0,s.yg)("p",null,"To create a ",(0,s.yg)("inlineCode",{parentName:"p"},"normal view")," -> ",(0,s.yg)("strong",{parentName:"p"},"25.266 ms")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE VIEW copr_target_builds_for_pull_requests AS\n    SELECT git_projects.project_url, git_projects.repo_name, copr_build_targets.build_id, pipelines.datetime\n    FROM git_projects\n    JOIN pull_requests ON git_projects.id = pull_requests.project_id\n    JOIN job_triggers ON job_triggers.trigger_id = pull_requests.id\n    JOIN pipelines ON pipelines.job_trigger_id = job_triggers.id\n    JOIN copr_build_groups ON copr_build_groups.id = pipelines.copr_build_group_id\n    JOIN copr_build_targets ON copr_build_targets.copr_build_group_id = copr_build_groups.id\n    ORDER BY git_projects.project_url, git_projects.instance_url;\n")),(0,s.yg)("hr",null),(0,s.yg)("p",null,"To query the ",(0,s.yg)("inlineCode",{parentName:"p"},"normal view")," -> ",(0,s.yg)("strong",{parentName:"p"},"2616.131 ms")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"SELECT * FROM copr_target_builds_for_pull_requests;\n")),(0,s.yg)("hr",null),(0,s.yg)("p",null,"Since we have to refresh a ",(0,s.yg)("inlineCode",{parentName:"p"},"materialized view"),", like this, every time we use it (the data it contains change too often) sadly ",(0,s.yg)("strong",{parentName:"p"},"there is no improvement"),"."),(0,s.yg)("h2",{id:"normal-views"},"Normal views"),(0,s.yg)("p",null,"Normal views, ",(0,s.yg)("em",{parentName:"p"},"once created, are easy to work with")," but I can not really say that they save us time."),(0,s.yg)("p",null,"To get the usage statistics page from the service api (",(0,s.yg)("a",{parentName:"p",href:"https://service.localhost/api/"},"https://service.localhost/api/"),") it tooks me ",(0,s.yg)("strong",{parentName:"p"},"4 seconds")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-logs"},"service             | [Fri May 19 12:57:34.145012 2023] [wsgi:error] [pid 6:tid 39] [remote 10.89.0.4:39636] 2023-05-19 12:57:34,144 INFO sqlalchemy.engine.Engine [cached since 1.482e+04s ago] {'type_1': 'issue'}\nservice             | 10.89.0.4 - - [19/May/2023:12:57:30 +0000] \"GET /api/usage HTTP/1.1\" 200 120160\n")),(0,s.yg)("p",null,"To get all the data we need with a single query (saved as a view named ",(0,s.yg)("inlineCode",{parentName:"p"},"jobs_count"),") it tooks me ",(0,s.yg)("strong",{parentName:"p"},"3277.724 ms"),"."),(0,s.yg)("p",null,"We can move the complexity below at sql level and simplify our code, this is all."),(0,s.yg)("p",null,"The views are not really supported in sqlalchemy, there are two projects that implement them somehow (",(0,s.yg)("inlineCode",{parentName:"p"},"sqlalchemy-utils")," and ",(0,s.yg)("inlineCode",{parentName:"p"},"sqlalchemy-views"),') but this are "young projects" I would not count on them for the ',(0,s.yg)("inlineCode",{parentName:"p"},"packit-service")," code."),(0,s.yg)("p",null,"There is a page in the sqlalchemy documentation that shows how to implement support for views in a ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/sqlalchemy/sqlalchemy/wiki/Views"},"tricky way"),"."),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"But in neither of this cases alembic will be supported"),"."),(0,s.yg)("p",null,"I think that the most effective way to use ",(0,s.yg)("inlineCode",{parentName:"p"},"views"),", at the moment, is just create them in a migration (with pure sql) and simply map them in our sqlalchemy models.\nIn this way we can not create or delete them through sqlalchemy but we can easily query them as normal tables. I have tried this and seems to be working."),(0,s.yg)("p",null,"I have created some views that can remove the loops inside the code for the ",(0,s.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/blob/01cbaf4fc3eb1898a1bb9d73a638d218b7a9c8d0/packit_service/models.py#L812-L869"},"usage statistics"),".\nIf we want to move the complexity from the python code to the sql level this can be useful.\nHowever we agreed that ",(0,s.yg)("em",{parentName:"p"},"we prefer to read more complex python code than more complex sql code"),"."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE VIEW projects_for_triggers AS\nSELECT temporary.project_url, temporary.instance_url, temporary.trigger_id, job_triggers.id AS job_trigger_id, job_triggers.type FROM\n    (SELECT git_projects.project_url, git_projects.instance_url, pull_requests.id AS trigger_id FROM git_projects\n        JOIN pull_requests ON git_projects.id = pull_requests.project_id UNION\n        (SELECT git_projects.project_url, git_projects.instance_url, git_branches.id AS trigger_id FROM git_projects\n            JOIN git_branches ON git_projects.id = git_branches.project_id UNION\n            (SELECT git_projects.project_url, git_projects.instance_url, project_releases.id AS trigger_id FROM git_projects\n                JOIN project_releases ON git_projects.id = project_releases.project_id UNION\n                    (SELECT git_projects.project_url, git_projects.instance_url, project_issues.id AS trigger_id FROM git_projects\n                        JOIN project_issues ON git_projects.id = project_issues.project_id)))) temporary\n    JOIN job_triggers ON job_triggers.trigger_id = temporary.trigger_id;\n\nEXPLAIN ANALYZE [...] -> 17ms\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"                           project_url                           |      instance_url      | trigger_id | job_trigger_id |     type\n-----------------------------------------------------------------+------------------------+------------+----------------+--------------\n https://github.com/cockpit-project/cockpit                      | github.com             |      48233 |          27750 | pull_request\n https://github.com/RedHat-SP-Security/keylime-tests             | github.com             |      51015 |          30088 | pull_request\n https://github.com/cockpit-project/cockpit                      | github.com             |      53514 |          32279 | pull_request\n https://github.com/systemd/systemd                              | github.com             |      49850 |          29120 | pull_request\n https://github.com/systemd/systemd                              | github.com             |      49745 |          29029 | pull_request\n https://github.com/systemd/systemd                              | github.com             |      57009 |          35291 | pull_request\n https://github.com/systemd/systemd                              | github.com             |      56241 |          34633 | pull_request\n https://github.com/storaged-project/blivet                      | github.com             |      58353 |          36386 | pull_request\n https://github.com/ComplianceAsCode/content                     | github.com             |      56362 |          34737 | pull_request\n https://github.com/cockpit-project/cockpit                      | github.com             |      62372 |          40035 | pull_request\n https://github.com/fedora-infra/fedora-messaging                | github.com             |       1372 |          27932 | release\n...\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE VIEW triggers_count AS\nSELECT DISTINCT projects_for_triggers.project_url, projects_for_triggers.type, COUNT(projects_for_triggers.trigger_id) OVER (PARTITION BY projects_for_triggers.project_url, projects_for_triggers.type) FROM projects_for_triggers WHERE projects_for_triggers.instance_url != 'src.fedoraproject.org' GROUP BY projects_for_triggers.project_url, projects_for_triggers.type, projects_for_triggers.trigger_id ORDER BY projects_for_triggers.type, COUNT(projects_for_triggers.trigger_id) OVER (PARTITION BY projects_for_triggers.project_url, projects_for_triggers.type) DESC;\n\nEXPLAIN ANALYZE [...] -> 55ms\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"                           project_url                           |     type     | count\n-----------------------------------------------------------------+--------------+-------\n https://github.com/systemd/systemd                              | pull_request |  3055\n https://github.com/ComplianceAsCode/content                     | pull_request |  1499\n https://github.com/cockpit-project/cockpit                      | pull_request |  1067\n https://github.com/osbuild/osbuild-composer                     | pull_request |   757\n https://github.com/teemtee/tmt                                  | pull_request |   605\n https://github.com/rhinstaller/anaconda                         | pull_request |   568\n https://github.com/packit/hello-world                           | pull_request |   452\n https://github.com/ansible/ansible-lint                         | pull_request |   447\n https://github.com/nmstate/nmstate                              | pull_request |   438\n https://github.com/keylime/keylime                              | pull_request |   317\n https://github.com/cockpit-project/cockpit-machines             | pull_request |   305\n https://github.com/fedora-infra/noggin                          | pull_request |   295\n https://github.com/oamg/convert2rhel                            | pull_request |   290\n https://github.com/cockpit-project/cockpit-podman               | pull_request |   287\n...\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE VIEW pipelines_for_projects AS\nSELECT projects_for_triggers.project_url, projects_for_triggers.instance_url, projects_for_triggers.type, pipelines.datetime, pipelines.srpm_build_id, pipelines.sync_release_run_id, pipelines.vm_image_build_id, pipelines.test_run_group_id, pipelines.copr_build_group_id, pipelines.koji_build_group_id FROM projects_for_triggers JOIN pipelines ON projects_for_triggers.job_trigger_id = pipelines.job_trigger_id;\n\nCREATE VIEW jobs_for_projects AS\nSELECT pipelines_for_projects.project_url, pipelines_for_projects.instance_url, pipelines_for_projects.type AS trigger_type, pipelines_for_projects.datetime, srpm_builds.build_submitted_time AS submitted_time, srpm_builds.id AS job_id, 'srpm_build' AS job_type FROM pipelines_for_projects\n    JOIN srpm_builds ON pipelines_for_projects.srpm_build_id = srpm_builds.id\n    UNION (SELECT pipelines_for_projects.project_url, pipelines_for_projects.instance_url, pipelines_for_projects.type AS trigger_type, pipelines_for_projects.datetime, sync_release_runs.submitted_time, sync_release_runs.id AS job_id, 'sync_release_run' AS job_type  FROM pipelines_for_projects\n        JOIN sync_release_runs ON pipelines_for_projects.sync_release_run_id = sync_release_runs.id\n        UNION (SELECT pipelines_for_projects.project_url, pipelines_for_projects.instance_url, pipelines_for_projects.type AS trigger_type, pipelines_for_projects.datetime, koji_build_groups.submitted_time, koji_build_groups.id AS job_id, 'koji_build' AS job_type  FROM pipelines_for_projects\n            JOIN koji_build_groups ON pipelines_for_projects.koji_build_group_id = koji_build_groups.id\n            UNION (SELECT pipelines_for_projects.project_url, pipelines_for_projects.instance_url, pipelines_for_projects.type AS trigger_type, pipelines_for_projects.datetime, copr_build_groups.submitted_time, copr_build_groups.id AS job_id, 'copr_build' AS job_type  FROM pipelines_for_projects\n                JOIN copr_build_groups ON pipelines_for_projects.copr_build_group_id = copr_build_groups.id\n                UNION (SELECT pipelines_for_projects.project_url, pipelines_for_projects.instance_url, pipelines_for_projects.type AS trigger_type, pipelines_for_projects.datetime, tft_test_run_groups.submitted_time, tft_test_run_groups.id AS job_id, 'test_run' AS job_type  FROM pipelines_for_projects\n                    JOIN tft_test_run_groups ON pipelines_for_projects.test_run_group_id = tft_test_run_groups.id\n                    UNION (SELECT pipelines_for_projects.project_url, pipelines_for_projects.instance_url, pipelines_for_projects.type AS trigger_type, pipelines_for_projects.datetime, vm_image_build_targets.build_submitted_time AS submitted_time, vm_image_build_targets.id AS job_id, 'vm_image_build' AS job_type  FROM pipelines_for_projects\n                        JOIN vm_image_build_targets ON pipelines_for_projects.vm_image_build_id = vm_image_build_targets.id)))));\n\nEXPLAIN ANALYZE [...] -> 2337.092 ms\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"                           project_url                           |      instance_url      | trigger_type |          datetime          |       submitted_time       | job_id |     job_type\n-----------------------------------------------------------------+------------------------+--------------+----------------------------+----------------------------+--------+------------------\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:42:57.065564 | 2022-09-19 07:42:57.060558 |  88793 | srpm_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:42:57.065564 | 2023-02-14 02:27:54.598528 |   2876 | copr_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:43:31.062927 | 2022-09-19 07:42:57.060558 |  88793 | srpm_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:43:31.062927 | 2023-02-14 02:27:54.598528 |   2876 | copr_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:43:31.690265 | 2022-09-19 07:42:57.060558 |  88793 | srpm_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:43:31.690265 | 2023-02-14 02:27:54.598528 |   2876 | copr_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:43:32.33272  | 2022-09-19 07:42:57.060558 |  88793 | srpm_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-09-19 07:43:32.33272  | 2023-02-14 02:27:54.598528 |   2876 | copr_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-11-29 20:36:10.322812 | 2022-11-29 20:36:10.3174   | 101186 | srpm_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-11-29 20:36:10.322812 | 2023-02-14 02:55:59.35493  |  96222 | copr_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-11-29 20:36:45.713206 | 2022-11-29 20:36:10.3174   | 101186 | srpm_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-11-29 20:36:45.713206 | 2023-02-14 02:55:59.35493  |  96222 | copr_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-11-29 20:36:46.305243 | 2022-11-29 20:36:10.3174   | 101186 | srpm_build\n https://github.com/abrt/abrt-java-connector                     | github.com             | pull_request | 2022-11-29 20:36:46.305243 | 2023-02-14 02:55:59.35493  |  96222 | copr_build\n...\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE VIEW jobs_count AS\nSELECT DISTINCT jobs_for_projects.project_url, jobs_for_projects.trigger_type, jobs_for_projects.job_type, COUNT(jobs_for_projects.job_id) OVER (PARTITION BY jobs_for_projects.project_url, jobs_for_projects.trigger_type, jobs_for_projects.job_type) FROM jobs_for_projects WHERE jobs_for_projects.instance_url != 'src.fedoraproject.org' GROUP BY jobs_for_projects.project_url, jobs_for_projects.trigger_type, jobs_for_projects.job_type, jobs_for_projects.job_id ORDER BY jobs_for_projects.trigger_type, jobs_for_projects.job_type, COUNT(jobs_for_projects.job_id) OVER (PARTITION BY jobs_for_projects.project_url, jobs_for_projects.trigger_type, jobs_for_projects.job_type) DESC;\n\nEXPLAIN ANALYZE [...] -> 3277.724 ms\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"                           project_url                           | trigger_type |     job_type     | count\n-----------------------------------------------------------------+--------------+------------------+-------\n https://github.com/systemd/systemd                              | pull_request | copr_build       |  9523\n https://github.com/teemtee/tmt                                  | pull_request | copr_build       |  6099\n https://github.com/packit/hello-world                           | pull_request | copr_build       |  5129\n https://github.com/osbuild/osbuild-composer                     | pull_request | copr_build       |  4322\n https://github.com/cockpit-project/cockpit                      | pull_request | copr_build       |  4133\n https://github.com/ComplianceAsCode/content                     | pull_request | copr_build       |  3948\n https://github.com/oamg/convert2rhel                            | pull_request | copr_build       |  2591\n https://github.com/nmstate/nmstate                              | pull_request | copr_build       |  1539\n https://github.com/rhinstaller/anaconda                         | pull_request | copr_build       |  1454\n https://github.com/cockpit-project/cockpit-machines             | pull_request | copr_build       |  1266\n https://github.com/ansible/ansible-lint                         | pull_request | copr_build       |  1247\n https://github.com/oamg/leapp-repository                        | pull_request | copr_build       |  1185\n...\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"CREATE VIEW job_triggers_commit_sha AS\nSELECT job_triggers.id, job_triggers.type, srpm_builds.commit_sha FROM pipelines\n        JOIN job_triggers ON pipelines.job_trigger_id = job_triggers.id\n    JOIN srpm_builds ON pipelines.srpm_build_id = srpm_builds.id\n    UNION (SELECT job_triggers.id, job_triggers.type, koji_build_targets.commit_sha FROM pipelines\n        JOIN job_triggers ON pipelines.job_trigger_id = job_triggers.id\n        JOIN koji_build_groups ON pipelines.koji_build_group_id = koji_build_groups.id\n        JOIN koji_build_targets ON koji_build_groups.id = koji_build_targets.koji_build_group_id\n        UNION (SELECT job_triggers.id, job_triggers.type, copr_build_targets.commit_sha FROM pipelines\n            JOIN job_triggers ON pipelines.job_trigger_id = job_triggers.id\n            JOIN copr_build_groups ON pipelines.copr_build_group_id = copr_build_groups.id\n            JOIN copr_build_targets ON copr_build_groups.id = copr_build_targets.copr_build_group_id\n            UNION (SELECT job_triggers.id, job_triggers.type, tft_test_run_targets.commit_sha FROM pipelines\n                JOIN job_triggers ON pipelines.job_trigger_id = job_triggers.id\n                JOIN tft_test_run_groups ON pipelines.test_run_group_id = tft_test_run_groups.id\n                JOIN tft_test_run_targets ON tft_test_run_groups.id = tft_test_run_targets.tft_test_run_group_id\n                UNION (SELECT job_triggers.id, job_triggers.type, vm_image_build_targets.commit_sha FROM pipelines\n                    JOIN job_triggers ON pipelines.job_trigger_id = job_triggers.id\n                    JOIN vm_image_build_targets ON pipelines.vm_image_build_id = vm_image_build_targets.id))));\n\nEXPLAIN ANALYZE [...] -> 3369.211 ms\n")),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre"},"  id   |     type     |                commit_sha\n-------+--------------+------------------------------------------\n  4641 | pull_request | 3854797abbbf445a8190b46f6471bff0bfcac8fb\n  5887 | branch_push  | 01462368e03f0e9705a6ee6ca146dc666e13ac27\n  5887 | branch_push  | 035759ba734efcd08b1d23666d29efe963e909e7\n  5887 | branch_push  | 060b82ccd5739c87494453110886a1663409886f\n  5887 | branch_push  | 0f9759f0bd1fc237558db8b3cf2037016a292de7\n  5887 | branch_push  | 1099056a5a04ab0e12278cf910f655bd3cc7835c\n  5887 | branch_push  | 1374cc11cdcf08080bf16aaef704ec010eafbcb7\n  5887 | branch_push  | 1b5611cd822602c265ab73c2f8f5246a721e4b9d\n  5887 | branch_push  | 213c789c5ec496e4471dbdb7279d9d7d61b4ed44\n  5887 | branch_push  | 281a5acbdbc8358405bc75e72f568cb7fd7a8a84\n  5887 | branch_push  | 2e316980c3a00156fa7d3ac313dc53304e1dcf95\n  5887 | branch_push  | 33fd64ac44b22c4da8a40cea7c817d8b8178f4ec\n  5887 | branch_push  | 3c699c5077f6803ca8054350c51cb5d2fc7436e1\n  5887 | branch_push  | 3cf8b476ecf9482ba1dc5fa24155ea8be9dab141\n ...\n")))}u.isMDXComponent=!0}}]);