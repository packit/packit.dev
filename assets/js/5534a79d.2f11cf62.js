"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[787],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),c=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=c(r),k=n,g=s["".concat(u,".").concat(k)]||s[k]||m[k]||i;return r?a.createElement(g,o(o({ref:t},p),{},{components:r})):a.createElement(g,o({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=k;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[s]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}k.displayName="MDXCreateElement"},88908:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const i={title:"Week 32 in Packit",date:new Date("2023-08-14T00:00:00.000Z"),authors:"flachman",tags:["2023-August",2023,"August"]},o=void 0,l={permalink:"/posts/weekly/2023/week-32",editUrl:"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-32.md",source:"@site/weekly/2023/week-32.md",title:"Week 32 in Packit",description:"Week 32 (August 8th \u2013 August 14th)",date:"2023-08-14T00:00:00.000Z",formattedDate:"August 14, 2023",tags:[{label:"2023-August",permalink:"/posts/weekly/tags/2023-august"},{label:"2023",permalink:"/posts/weekly/tags/2023"},{label:"August",permalink:"/posts/weekly/tags/august"}],readingTime:.42,hasTruncateMarker:!1,authors:[{name:"Franti\u0161ek Lachman",email:"flachman@redhat.com",url:"https://github.com/lachmanfrantisek",imageURL:"https://github.com/lachmanfrantisek.png",key:"flachman"}],frontMatter:{title:"Week 32 in Packit",date:"2023-08-14T00:00:00.000Z",authors:"flachman",tags:["2023-August","2023","August"]},prevItem:{title:"Week 34 in Packit",permalink:"/posts/weekly/2023/week-34"},nextItem:{title:"Week 31 in Packit",permalink:"/posts/weekly/2023/week-31"}},u={authorsImageUrls:[void 0]},c=[{value:"Week 32 (August 8th \u2013 August 14th)",id:"week-32-august-8th--august-14th",level:2}],p={toc:c},s="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(s,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"week-32-august-8th--august-14th"},"Week 32 (August 8th \u2013 August 14th)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Two new configuration options for filtering when getting latest upstream release tag were introduced: ",(0,n.kt)("inlineCode",{parentName:"li"},"upstream_tag_include")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"upstream_tag_exclude"),". They should contain a Python regex that can be used as an argument in ",(0,n.kt)("inlineCode",{parentName:"li"},"re.match"),". (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2030"},"packit#2030"),", ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2138"},"packit-service#2138"),")"),(0,n.kt)("li",{parentName:"ul"},"Retriggering of ",(0,n.kt)("inlineCode",{parentName:"li"},"pull-from-upstream")," via a comment will now use the correct configuration file from the default dist-git branch. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2140"},"packit-service#2140"),")"),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"pull-from-upstream")," job can now be used with upstream repos that are not hosted on a supported git forge. (",(0,n.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2137"},"packit-service#2137"),")")))}m.isMDXComponent=!0}}]);