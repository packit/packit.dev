"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[97135],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=u(t),d=a,m=g["".concat(s,".").concat(d)]||g[d]||p[d]||i;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[g]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},29863:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(58168),a=(t(96540),t(15680));const i={title:"Running operations in target-matching environments",authors:"lbarczio"},o=void 0,l={unversionedId:"target-matching-env/index",id:"target-matching-env/index",title:"Running operations in target-matching environments",description:"For some of the operations run in our service, it would be beneficial",source:"@site/research/target-matching-env/index.md",sourceDirName:"target-matching-env",slug:"/target-matching-env/",permalink:"/research/target-matching-env/",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/target-matching-env/index.md",tags:[],version:"current",frontMatter:{title:"Running operations in target-matching environments",authors:"lbarczio"},sidebar:"autogenerated",previous:{title:"Counting patches in specfiles",permalink:"/research/specfiles/packages-with-patches/"},next:{title:"Testing",permalink:"/research/category/testing"}},s={},u=[{value:"Use cases",id:"use-cases",level:2},{value:"Possible solutions",id:"possible-solutions",level:2},{value:"container-based solutions",id:"container-based-solutions",level:3},{value:"dedicated workers for each Fedora version",id:"dedicated-workers-for-each-fedora-version",level:4},{value:"sandcastle adjustments",id:"sandcastle-adjustments",level:4},{value:"Copr resalloc",id:"copr-resalloc",level:3},{value:"Testing Farm reservations",id:"testing-farm-reservations",level:3},{value:"mock",id:"mock",level:3},{value:"Next steps",id:"next-steps",level:2}],c={toc:u},g="wrapper";function p(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"For some of the operations run in our service, it would be beneficial\nto run them in target-matching environment, e.g. parsing the specfile placed\nin F41 branch should happen on F41. Currently, we base our images\non Fedora 41."),(0,a.yg)("h2",{id:"use-cases"},"Use cases"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"user-configured commands (",(0,a.yg)("inlineCode",{parentName:"li"},"actions")," in config)",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"affected jobs: ",(0,a.yg)("inlineCode",{parentName:"li"},"copr_build"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"propose_downstream"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"pull_from_upstream")),(0,a.yg)("li",{parentName:"ul"},"run in on demand pods in ",(0,a.yg)("inlineCode",{parentName:"li"},"sandbox")," (dedicated Openshift project)"))),(0,a.yg)("li",{parentName:"ul"},"building SRPM",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"affected jobs:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"upstream_koji_build")," - in ",(0,a.yg)("inlineCode",{parentName:"li"},"long-running")," workers"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"copr_build")," - in Copr, we just pass the required env as an argument for the API call"))))),(0,a.yg)("li",{parentName:"ul"},"specfile parsing",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"for getting version, manipulating changelog, etc. during release syncing"),(0,a.yg)("li",{parentName:"ul"},"affected jobs: ",(0,a.yg)("inlineCode",{parentName:"li"},"pull_from_upstream"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"propose_downstream")),(0,a.yg)("li",{parentName:"ul"},"run in ",(0,a.yg)("inlineCode",{parentName:"li"},"long-running")," workers"))),(0,a.yg)("li",{parentName:"ul"},"potentially new use cases if Packit runs as Fedora dist-git CI")),(0,a.yg)("h2",{id:"possible-solutions"},"Possible solutions"),(0,a.yg)("h3",{id:"container-based-solutions"},"container-based solutions"),(0,a.yg)("h4",{id:"dedicated-workers-for-each-fedora-version"},"dedicated workers for each Fedora version"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"for building SRPM, running release syncing (=> specfile parsing)"),(0,a.yg)("li",{parentName:"ul"},"build separate images for each Fedora version"),(0,a.yg)("li",{parentName:"ul"},"use Celery for task routing; tasks requiring specific environments would be routed accordingly"),(0,a.yg)("li",{parentName:"ul"},'by default, tasks could run on the "main" worker (e.g. currently F41-based).'),(0,a.yg)("li",{parentName:"ul"},"tasks requiring target-matching environments would be refactored (e.g. release syncing for\nall branches (currently one task) will need to be split)"),(0,a.yg)("li",{parentName:"ul"},"suggestion from review: for better load balancing, we could consider running all the tasks except ",(0,a.yg)("inlineCode",{parentName:"li"},"process_message")," utilising\nthis routing logic, i.e. the tasks would be refactored so that one task runs for specific target and is always routed accordingly from ",(0,a.yg)("inlineCode",{parentName:"li"},"process_message")),(0,a.yg)("li",{parentName:"ul"},"potential waste of resources"),(0,a.yg)("li",{parentName:"ul"},"shouldn't introduce any delays")),(0,a.yg)("h4",{id:"sandcastle-adjustments"},"sandcastle adjustments"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"for running ",(0,a.yg)("inlineCode",{parentName:"li"},"actions")),(0,a.yg)("li",{parentName:"ul"},"build separate images for each Fedora version"),(0,a.yg)("li",{parentName:"ul"},"adjust the code running sandcastle to dynamically pass the image reference"),(0,a.yg)("li",{parentName:"ul"},"for commands not specified by users, e.g. ",(0,a.yg)("inlineCode",{parentName:"li"},"rpmbuild"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"fedpkg"),", we could also utilise\nsandcastle, without the need of deploying the pod in different project, but this would lead\nto slower execution (overhead of scheduling the pods)")),(0,a.yg)("h3",{id:"copr-resalloc"},"Copr resalloc"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"set up a custom resalloc instance, most of the tooling would need to be implemented"),(0,a.yg)("li",{parentName:"ul"},"communication via SSH"),(0,a.yg)("li",{parentName:"ul"},"relying on external infra, might be slow")),(0,a.yg)("h3",{id:"testing-farm-reservations"},"Testing Farm reservations"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://docs.testing-farm.io/Testing%20Farm/0.1/cli.html#reserve"},"docs")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"testing-farm reserve")," to get a chosen OS"),(0,a.yg)("li",{parentName:"ul"},"communication via SSH"),(0,a.yg)("li",{parentName:"ul"},"there are already users using it in CI for provisioning systems for Ansible Molecule"),(0,a.yg)("li",{parentName:"ul"},"not yet a proper API, a proper supported use case in plan"),(0,a.yg)("li",{parentName:"ul"},"in the future a target machine could be obtained in <30s"),(0,a.yg)("li",{parentName:"ul"},"still relying on external infra"),(0,a.yg)("li",{parentName:"ul"},"could be considered for running actions")),(0,a.yg)("h3",{id:"mock"},"mock"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://rpm-software-management.github.io/mock/#mock-inside-podman-fedora-toolbox-or-docker-container"},"mock in a container"),"\nrequires privileged mode which is not possible in our current OpenShift instance")),(0,a.yg)("h2",{id:"next-steps"},"Next steps"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"with switching to F41 based image, we have unblocked users needing the latest RPM macros"),(0,a.yg)("li",{parentName:"ul"},"once there is more user demand for any of the use cases, we can consider the options above, depending on\nthe particular use-case",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"the container-based solution with dedicated workers looks like the best fit for running the whole tasks to me"),(0,a.yg)("li",{parentName:"ul"},"for the ",(0,a.yg)("inlineCode",{parentName:"li"},"actions"),", the ",(0,a.yg)("inlineCode",{parentName:"li"},"sandcastle")," adjustments could be enough,\nbut for the future I could see using TF reservations as a complete replacement")))))}p.isMDXComponent=!0}}]);