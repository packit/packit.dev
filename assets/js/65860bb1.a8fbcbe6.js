"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[13425],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},28574:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const i={title:"Running operations in target-matching environments",authors:"lbarczio"},o=void 0,l={unversionedId:"target-matching-env/index",id:"target-matching-env/index",title:"Running operations in target-matching environments",description:"For some of the operations run in our service, it would be beneficial",source:"@site/research/target-matching-env/index.md",sourceDirName:"target-matching-env",slug:"/target-matching-env/",permalink:"/research/target-matching-env/",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/target-matching-env/index.md",tags:[],version:"current",frontMatter:{title:"Running operations in target-matching environments",authors:"lbarczio"},sidebar:"autogenerated",previous:{title:"Counting patches in specfiles",permalink:"/research/specfiles/packages-with-patches/"},next:{title:"Testing",permalink:"/research/category/testing"}},s={},u=[{value:"Use cases",id:"use-cases",level:2},{value:"Possible solutions",id:"possible-solutions",level:2},{value:"container-based solutions",id:"container-based-solutions",level:3},{value:"dedicated workers for each Fedora version",id:"dedicated-workers-for-each-fedora-version",level:4},{value:"sandcastle adjustments",id:"sandcastle-adjustments",level:4},{value:"Copr resalloc",id:"copr-resalloc",level:3},{value:"Testing Farm reservations",id:"testing-farm-reservations",level:3},{value:"mock",id:"mock",level:3},{value:"Next steps",id:"next-steps",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"For some of the operations run in our service, it would be beneficial\nto run them in target-matching environment, e.g. parsing the specfile placed\nin F41 branch should happen on F41. Currently, we base our images\non Fedora 41."),(0,a.kt)("h2",{id:"use-cases"},"Use cases"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"user-configured commands (",(0,a.kt)("inlineCode",{parentName:"li"},"actions")," in config)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"affected jobs: ",(0,a.kt)("inlineCode",{parentName:"li"},"copr_build"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"propose_downstream"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"pull_from_upstream")),(0,a.kt)("li",{parentName:"ul"},"run in on demand pods in ",(0,a.kt)("inlineCode",{parentName:"li"},"sandbox")," (dedicated Openshift project)"))),(0,a.kt)("li",{parentName:"ul"},"building SRPM",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"affected jobs:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"upstream_koji_build")," - in ",(0,a.kt)("inlineCode",{parentName:"li"},"long-running")," workers"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"copr_build")," - in Copr, we just pass the required env as an argument for the API call"))))),(0,a.kt)("li",{parentName:"ul"},"specfile parsing",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"for getting version, manipulating changelog, etc. during release syncing"),(0,a.kt)("li",{parentName:"ul"},"affected jobs: ",(0,a.kt)("inlineCode",{parentName:"li"},"pull_from_upstream"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"propose_downstream")),(0,a.kt)("li",{parentName:"ul"},"run in ",(0,a.kt)("inlineCode",{parentName:"li"},"long-running")," workers"))),(0,a.kt)("li",{parentName:"ul"},"potentially new use cases if Packit runs as Fedora dist-git CI")),(0,a.kt)("h2",{id:"possible-solutions"},"Possible solutions"),(0,a.kt)("h3",{id:"container-based-solutions"},"container-based solutions"),(0,a.kt)("h4",{id:"dedicated-workers-for-each-fedora-version"},"dedicated workers for each Fedora version"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"for building SRPM, running release syncing (=> specfile parsing)"),(0,a.kt)("li",{parentName:"ul"},"build separate images for each Fedora version"),(0,a.kt)("li",{parentName:"ul"},"use Celery for task routing; tasks requiring specific environments would be routed accordingly"),(0,a.kt)("li",{parentName:"ul"},'by default, tasks could run on the "main" worker (e.g. currently F41-based).'),(0,a.kt)("li",{parentName:"ul"},"tasks requiring target-matching environments would be refactored (e.g. release syncing for\nall branches (currently one task) will need to be split)"),(0,a.kt)("li",{parentName:"ul"},"suggestion from review: for better load balancing, we could consider running all the tasks except ",(0,a.kt)("inlineCode",{parentName:"li"},"process_message")," utilising\nthis routing logic, i.e. the tasks would be refactored so that one task runs for specific target and is always routed accordingly from ",(0,a.kt)("inlineCode",{parentName:"li"},"process_message")),(0,a.kt)("li",{parentName:"ul"},"potential waste of resources"),(0,a.kt)("li",{parentName:"ul"},"shouldn't introduce any delays")),(0,a.kt)("h4",{id:"sandcastle-adjustments"},"sandcastle adjustments"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"for running ",(0,a.kt)("inlineCode",{parentName:"li"},"actions")),(0,a.kt)("li",{parentName:"ul"},"build separate images for each Fedora version"),(0,a.kt)("li",{parentName:"ul"},"adjust the code running sandcastle to dynamically pass the image reference"),(0,a.kt)("li",{parentName:"ul"},"for commands not specified by users, e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"rpmbuild"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"fedpkg"),", we could also utilise\nsandcastle, without the need of deploying the pod in different project, but this would lead\nto slower execution (overhead of scheduling the pods)")),(0,a.kt)("h3",{id:"copr-resalloc"},"Copr resalloc"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"set up a custom resalloc instance, most of the tooling would need to be implemented"),(0,a.kt)("li",{parentName:"ul"},"communication via SSH"),(0,a.kt)("li",{parentName:"ul"},"relying on external infra, might be slow")),(0,a.kt)("h3",{id:"testing-farm-reservations"},"Testing Farm reservations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.testing-farm.io/Testing%20Farm/0.1/cli.html#reserve"},"docs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"testing-farm reserve")," to get a chosen OS"),(0,a.kt)("li",{parentName:"ul"},"communication via SSH"),(0,a.kt)("li",{parentName:"ul"},"there are already users using it in CI for provisioning systems for Ansible Molecule"),(0,a.kt)("li",{parentName:"ul"},"not yet a proper API, a proper supported use case in plan"),(0,a.kt)("li",{parentName:"ul"},"in the future a target machine could be obtained in <30s"),(0,a.kt)("li",{parentName:"ul"},"still relying on external infra"),(0,a.kt)("li",{parentName:"ul"},"could be considered for running actions")),(0,a.kt)("h3",{id:"mock"},"mock"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://rpm-software-management.github.io/mock/#mock-inside-podman-fedora-toolbox-or-docker-container"},"mock in a container"),"\nrequires privileged mode which is not possible in our current OpenShift instance")),(0,a.kt)("h2",{id:"next-steps"},"Next steps"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"with switching to F41 based image, we have unblocked users needing the latest RPM macros"),(0,a.kt)("li",{parentName:"ul"},"once there is more user demand for any of the use cases, we can consider the options above, depending on\nthe particular use-case",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"the container-based solution with dedicated workers looks like the best fit for running the whole tasks to me"),(0,a.kt)("li",{parentName:"ul"},"for the ",(0,a.kt)("inlineCode",{parentName:"li"},"actions"),", the ",(0,a.kt)("inlineCode",{parentName:"li"},"sandcastle")," adjustments could be enough,\nbut for the future I could see using TF reservations as a complete replacement")))))}d.isMDXComponent=!0}}]);