"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[35187],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>g});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||s;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},97365:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=t(58168),r=(t(96540),t(15680));const s={title:"Deploy Packit Service on Openshift Local Cluster"},i="Openshift Local",o={unversionedId:"openshift_local_cluster",id:"openshift_local_cluster",title:"Deploy Packit Service on Openshift Local Cluster",description:"Get it",source:"@site/deployment/openshift_local_cluster.md",sourceDirName:".",slug:"/openshift_local_cluster",permalink:"/deployment/openshift_local_cluster",draft:!1,editUrl:"https://github.com/packit/deployment/tree/main/docs/deployment/openshift_local_cluster.md",tags:[],version:"current",frontMatter:{title:"Deploy Packit Service on Openshift Local Cluster"},sidebar:"autogenerated",previous:{title:"Logs",permalink:"/deployment/monitoring/logs"},next:{title:"PostgreSQL",permalink:"/deployment/postgresql"}},l={},c=[{value:"Get it",id:"get-it",level:3},{value:"Install it",id:"install-it",level:3},{value:"View credentials",id:"view-credentials",level:3},{value:"Setup and start the cluster",id:"setup-and-start-the-cluster",level:3},{value:"Web console",id:"web-console",level:3},{value:"Tweak memory and disk size setup",id:"tweak-memory-and-disk-size-setup",level:3},{value:"Verify a route to the registry exist",id:"verify-a-route-to-the-registry-exist",level:2},{value:"Access the registry using port forwarding",id:"access-the-registry-using-port-forwarding",level:2},{value:"Push local images to the registry",id:"push-local-images-to-the-registry",level:2},{value:"How to patch and configure the projects (just an example)",id:"how-to-patch-and-configure-the-projects-just-an-example",level:2},{value:"Deployment project patches",id:"deployment-project-patches",level:3},{value:"Deployment configuration file: vars/packit/dev.yaml",id:"deployment-configuration-file-varspackitdevyaml",level:3},{value:"Deployment configuration file: secrets/packit/dev/packit-service.yaml.j2",id:"deployment-configuration-file-secretspackitdevpackit-serviceyamlj2",level:3},{value:"packit-service project patches",id:"packit-service-project-patches",level:3},{value:"Debug the worker with port forwarding",id:"debug-the-worker-with-port-forwarding",level:2},{value:"Debug sandcastle",id:"debug-sandcastle",level:2},{value:"Create sandcastle volumes manually",id:"create-sandcastle-volumes-manually",level:3},{value:"Create PersistentVolume1",id:"create-persistentvolume1",level:4},{value:"Create PersistentVolume2 (and manually adjust the claimRef name once the sandcastle pod is running...)",id:"create-persistentvolume2-and-manually-adjust-the-claimref-name-once-the-sandcastle-pod-is-running",level:4}],p={toc:c},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.yg)(d,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"openshift-local"},"Openshift Local"),(0,r.yg)("h3",{id:"get-it"},"Get it"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://console.redhat.com/openshift/create/local"},"https://console.redhat.com/openshift/create/local")),(0,r.yg)("h3",{id:"install-it"},"Install it"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads\ntar xvf crc-linux-amd64.tar.xz\ncp ~/Downloads/crc-linux-*-amd64/crc ~/bin\n")),(0,r.yg)("h3",{id:"view-credentials"},"View credentials"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"crc console --credentials\n")),(0,r.yg)("p",null,"This command will print out the commands you can use to login into the cluster:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"To login as a regular user, run 'oc login -u developer -p developer https://api.crc.testing:6443'.\nTo login as an admin, run 'oc login -u kubeadmin -p fkjhskjhks https://api.crc.testing:6443'\n")),(0,r.yg)("h3",{id:"setup-and-start-the-cluster"},"Setup and start the cluster"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"crc setup\ncrc start\n")),(0,r.yg)("h3",{id:"web-console"},"Web console"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"crc console url\n")),(0,r.yg)("h3",{id:"tweak-memory-and-disk-size-setup"},"Tweak memory and disk size setup"),(0,r.yg)("p",null,"The cluster is using 9GiB of memory and 30GiB of disk-size by default. Both need to be increased to run packit-service."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"crc config set memory 11264 MiB\ncrc config set disk-size 41 Gi\n")),(0,r.yg)("p",null,"if the cluster is already running then"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"crc stop\ncrc start\n")),(0,r.yg)("h1",{id:"use-openshift-local-internal-registry"},"Use Openshift Local internal registry"),(0,r.yg)("h2",{id:"verify-a-route-to-the-registry-exist"},"Verify a route to the registry exist"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"oc get route -n openshift-image-registry\n")),(0,r.yg)("h2",{id:"access-the-registry-using-port-forwarding"},"Access the registry using port forwarding"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'oc port-forward pod/$(oc get pods -n openshift-image-registry | awk \'/^image-registry/{print $1}\') -n openshift-image-registry 5000 &\nexport REGISTRY_SERVICE="localhost:5000/myproject"\npodman login --tls-verify=false -u unused -p $(oc whoami -t)  ${REGISTRY_SERVICE}\nexport REGISTRY_SANDBOX="localhost:5000/packit-dev-sandbox"\npodman login --tls-verify=false -u unused -p $(oc whoami -t)  ${REGISTRY_SANDBOX}\n')),(0,r.yg)("h2",{id:"push-local-images-to-the-registry"},"Push local images to the registry"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"podman push 3c0d620f8caf ${REGISTRY_SERVICE}/packit-service:dev\npodman push 4a087c98c604 ${REGISTRY_SERVICE}/packit-worker:dev\npodman push ab2209c59df0 ${REGISTRY_SANDBOX}/sandcastle:dev\n")),(0,r.yg)("p",null,"To be able to successfully deploy images, ",(0,r.yg)("inlineCode",{parentName:"p"},"myproject")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"packit-dev-sandbox")," projects have to exist in the cluster."),(0,r.yg)("h1",{id:"deploy-packit-service"},"Deploy packit-service"),(0,r.yg)("p",null,"Be sure to login with the same token you have in your deployment configuration"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"cd where-this-repo-is\noc login --token=taken-from-webapp --server=https://api.crc.testing:6443\nDEPLOYMENT=dev make deploy\n")),(0,r.yg)("h2",{id:"how-to-patch-and-configure-the-projects-just-an-example"},"How to patch and configure the projects (just an example)"),(0,r.yg)("h3",{id:"deployment-project-patches"},"Deployment project patches"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'diff --git a/playbooks/deploy.yml b/playbooks/deploy.yml\nindex feb7ef6..442a5c8 100644\n--- a/playbooks/deploy.yml\n+++ b/playbooks/deploy.yml\n@@ -22,12 +22,16 @@\n     push_dev_images: false\n     with_fluentd_sidecar: false\n     postgres_version: 13\n-    image: quay.io/packit/packit-service:{{ deployment }}\n-    image_worker: quay.io/packit/packit-worker:{{ deployment }}\n-    image_fedmsg: quay.io/packit/packit-service-fedmsg:{{ deployment }}\n-    image_dashboard: quay.io/packit/dashboard:{{ deployment }}\n-    image_tokman: quay.io/packit/tokman:{{ deployment }}\n-    image_fluentd: quay.io/packit/fluentd-splunk-hec:latest\n+    # registry: quay.io\n+    registry: image-registry.openshift-image-registry.svc:5000\n+    # registry_project: packit\n+    registry_project: myproject\n+    image: "{{ registry }}/{{ registry_project }}/packit-service:{{ deployment }}"\n+    image_worker: "{{ registry }}/{{ registry_project }}/packit-worker:{{ deployment }}"\n+    image_fedmsg: "{{ registry }}/{{ registry_project }}/packit-service-fedmsg:{{ deployment }}"\n+    image_dashboard: "{{ registry }}/{{ registry_project }}/dashboard:{{ deployment }}"\n+    image_tokman: "{{ registry }}/{{ registry_project }}/tokman:{{ deployment }}"\n+    image_fluentd: "{{ registry }}/{{ registry_project }}/fluentd:{{ deployment }}"\n     # project_dir is set in tasks/project-dir.yml\n     path_to_secrets: "{{ project_dir }}/secrets/{{ service }}/{{ deployment }}"\n     # to be used in Image streams as importPolicy:scheduled value\n@@ -35,7 +39,7 @@\n     # used in dev/zuul deployment to tag & push images to cluster\n     # https://github.com/packit/deployment/issues/112#issuecomment-673343049\n     # container_engine: "{{ lookup(\'pipe\', \'command -v podman 2> /dev/null || echo docker\') }}"\n-    container_engine: docker\n+    container_engine: podman\n     celery_app: packit_service.worker.tasks\n     celery_retry_limit: 2\n     celery_retry_backoff: 3\ndiff --git a/playbooks/import-images.yml b/playbooks/import-images.yml\nindex 959bc78..7c0be12 100644\n--- a/playbooks/import-images.yml\n+++ b/playbooks/import-images.yml\n@@ -10,7 +10,7 @@\n     with_fedmsg: true\n     with_dashboard: true\n     with_tokman: true\n-    with_fluentd_sidecar: true\n+    with_fluentd_sidecar: false\n   tasks:\n     - name: Include variables\n       ansible.builtin.include_vars: ../vars/{{ service }}/{{ deployment }}.yml\n')),(0,r.yg)("h3",{id:"deployment-configuration-file-varspackitdevyaml"},"Deployment configuration file: vars/packit/dev.yaml"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},'# Copyright Contributors to the Packit project.\n# SPDX-License-Identifier: MIT\n\n# -------------------------------------------------------------------\n# Variables needed by Ansible playbooks in playbooks/\n# -------------------------------------------------------------------\n\n# Openshift project/namespace name\nproject: myproject\n\n# Openshift cluster url\nhost: https://api.crc.testing:6443\n\n# oc login <the above host value>, oc whoami -t\n# OR via Openshift web GUI: click on your login in top right corner, \'Copy Login Command\', take the part after --token=\napi_key: ""\nvalidate_certs: false\ncheck_up_to_date: false\npush_dev_images: false # pushing dev images manually!\n\n# Check that the deployment resources are up-to-date\n# check_up_to_date: true\n\n# Check that the current vars file us up to date with the template\n# check_vars_template_diff: true\n\nwith_tokman: false\n\n# if you want to deploy fedmsg, please make sure to\n# edit the queue name in secrets/*/fedora.toml\nwith_fedmsg: false\n\nwith_redis_commander: false\n\nwith_flower: false\n\nwith_beat: false\n\nwith_dashboard: false\n\nwith_pushgateway: false\n\nwith_fluentd_sidecar: false\n\nmanaged_platform: false\n\n# with_repository_cache: true\n# repository_cache_storage: 4Gi\n\n# image to use for service\n# image: quay.io/packit/packit-service:{{ deployment }}\n\n# image to use for worker\n# image_worker: quay.io/packit/packit-worker:{{ deployment }}\n\n# image to use for fedora messaging consumer\n# image_fedmsg: quay.io/packit/packit-service-fedmsg:{{ deployment }}\n\n# image to use for dashboard\n# image_dashboard: "quay.io/packit/dashboard:{{ deployment }}"\n\n# image to use for tokman\n# image_tokman: "quay.io/packit/tokman:{{ deployment }}"\n\n# image to use for fluentd sidecar\n# image_fluentd: quay.io/packit/fluentd-splunk-hec:latest\n\n# Path to secrets (in case you don\'t have it in the root of this project)\n# path_to_secrets: ../secrets\n\n# Used in dev/Zuul deployment to tag & push images to cluster.\n# It\'s set to "/usr/bin/podman" if there\'s podman installed, or to \'docker\' otherwise.\n# If you still want to use docker even when podman is installed, set:\n# container_engine: docker\n\n# postgres_version: 15 # MP+\n\n# Celery retry parameters\n# celery_retry_limit: 2\n# celery_retry_backoff: 3\n\n# Number of worker pods to be deployed to serve the queues\nworkers_all_tasks: 1\nworkers_short_running: 0\nworkers_long_running: 0\n# pushgateway_address: http://pushgateway\n')),(0,r.yg)("h3",{id:"deployment-configuration-file-secretspackitdevpackit-serviceyamlj2"},"Deployment configuration file: secrets/packit/dev/packit-service.yaml.j2"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'--\ndeployment: stg\ndebug: true\nfas_user: packit-stg\nkeytab_path: /secrets/fedora.keytab\ncomment_command_prefix: "/packit-stg"\nvalidate_webhooks: true\n\n{{ vault.packit_service | to_nice_yaml }}\n\ntesting_farm_api_url: https://api.dev.testing-farm.io/v0.1/\nenabled_projects_for_internal_tf:\n  - github.com/packit/hello-world\n\ncommand_handler: sandcastle\ncommand_handler_work_dir: /tmp/sandcastle\ncommand_handler_image_reference: image-registry.openshift-image-registry.svc:5000/packit-dev-sandbox/sandcastle:dev\ncommand_handler_k8s_namespace: {{ sandbox_namespace }}\ncommand_handler_pvc_volume_specs:\n  - path: /repository-cache\n    pvc_from_env: SANDCASTLE_REPOSITORY_CACHE_VOLUME\n    read_only: true\ncommand_handler_storage_class: crc-csi-hostpath-provisioner\n\nrepository_cache: /repository-cache\n# The maintenance of the cache (adding, updating) is done externally,\n# not in the packit/packit-service code.\nadd_repositories_to_repository_cache: false\n\nappcode: PCKT-002\n\nadmins:  # GitHub usernames\n  - jpopelka\n  - lachmanfrantisek\n  - lbarcziova\n  - TomasTomecek\n  - thrix  # Miro Vadkerti\n  - psss  # Petr Splichal\n  - csomh\n  - mfocko\n  - majamassarini\n  - nforro\n\nenabled_private_namespaces:\n  - gitlab.com/redhat/centos-stream\n  - gitlab.com/redhat/centos-stream/src\n\nenabled_projects_for_srpm_in_copr:\n  - github.com/packit/hello-world\n\nserver_name: stg.packit.dev\ndashboard_url: https://dashboard.stg.packit.dev\n\nprojects_to_sync:\n  - forge: https://github.com\n    repo_namespace: packit\n    repo_name: packit\n    branch: main\n    dg_branch: rawhide\n    dg_repo_name: packit\n\n  - forge: https://github.com\n    repo_namespace: packit\n    repo_name: ogr\n    branch: main\n    dg_branch: rawhide\n    dg_repo_name: python-ogr\n\n  - forge: https://github.com\n    repo_namespace: packit\n    repo_name: requre\n    branch: main\n    dg_branch: rawhide\n    dg_repo_name: python-requre\n')),(0,r.yg)("h3",{id:"packit-service-project-patches"},"packit-service project patches"),(0,r.yg)("p",null,"One way for building a debuggable ",(0,r.yg)("inlineCode",{parentName:"p"},"packit-service:dev")," image is running ",(0,r.yg)("inlineCode",{parentName:"p"},"podman-compose"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"podman-compose build --no-cache\n")),(0,r.yg)("p",null,"after applying this patches (and customizing the ",(0,r.yg)("inlineCode",{parentName:"p"},"celerizer.py")," message as you want):"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},'diff --git a/docker-compose.yml b/docker-compose.yml\nindex d1a592dc..8ef9675f 100644\n--- a/docker-compose.yml\n+++ b/docker-compose.yml\n@@ -81,11 +81,14 @@ services:\n       - tokman\n       - redis\n       - postgres\n+    ports:\n+      - 5678:5678\n     environment:\n       DEPLOYMENT: dev\n+      PACKIT_HOME: /home/packit\n       REDIS_SERVICE_HOST: redis\n       APP: packit_service.worker.tasks\n-      KRB5CCNAME: FILE:/tmp/krb5cc_packit\n+      KRB5CCNAME: "DIR:/home/packit/kerberos/"\n       POSTGRESQL_USER: packit\n       POSTGRESQL_PASSWORD: secret-password\n       POSTGRESQL_HOST: postgres\ndiff --git a/files/docker/Dockerfile b/files/docker/Dockerfile\nindex f2a82282..19013b98 100644\n--- a/files/docker/Dockerfile\n+++ b/files/docker/Dockerfile\n@@ -32,6 +32,9 @@ RUN git rev-parse HEAD >/.packit-service.git.commit.hash \\\n COPY alembic.ini ./\n COPY alembic/ ./alembic/\n\n+# Allow remote debugging\n+RUN pip install --upgrade debugpy\n+\n EXPOSE 8443\n\n CMD ["/usr/bin/run_httpd.sh"]\ndiff --git a/files/docker/Dockerfile.worker b/files/docker/Dockerfile.worker\nindex aa06755e..a292ef52 100644\n--- a/files/docker/Dockerfile.worker\n+++ b/files/docker/Dockerfile.worker\n@@ -15,6 +15,9 @@ ENV USER=packit \\\n # Ansible doesn\'t like /tmp\n WORKDIR /src\n\n+# Allow remote debugging\n+RUN pip install --upgrade debugpy\n+\n COPY files/install-deps-worker.yaml ./files/\n COPY files/tasks/ ./files/tasks/\n RUN ansible-playbook -vv -c local -i localhost, files/install-deps-worker.yaml \\\ndiff --git a/files/install-deps-worker.yaml b/files/install-deps-worker.yaml\nindex c348944e..97727a49 100644\n--- a/files/install-deps-worker.yaml\n+++ b/files/install-deps-worker.yaml\n@@ -46,7 +46,7 @@\n     - name: Install pip deps\n       ansible.builtin.pip:\n         name:\n-          - git+https://github.com/packit/sandcastle.git@{{ source_branch }}\n+          - git+https://github.com/majamassarini/sandcastle.git@static-execute-dir-name\n           # The above bodhi-client RPM installs python3-requests-2.25.1 and python3-urllib3-1.26.5\n           # The below sentry_sdk would then install urllib3-2.x because of its urllib3>=1.26.11 requirement\n           # and \'pip check\' would then scream that "requests 2.25.1 has requirement urllib3<1.27"\ndiff --git a/packit_service/celerizer.py b/packit_service/celerizer.py\nindex e9279919..1e0b9710 100644\n--- a/packit_service/celerizer.py\n+++ b/packit_service/celerizer.py\n@@ -42,4 +42,176 @@ def get_celery_application():\n     return app\n\n\n+# Let a remote debugger (Visual Studio Code client)\n+# access this running instance.\n+import debugpy\n+\n+# Allow other computers to attach to debugpy at this IP address and port.\n+try:\n+    debugpy.listen(("0.0.0.0", 5678))\n+\n+    # Uncomment the following lines if you want to\n+    # pause the program until a remote debugger is attached\n+\n+    # print("Waiting for debugger attach")\n+    debugpy.wait_for_client()\n+\n+except RuntimeError as e:\n+    pass\n+\n+\n+\n+import json\n+\n+comment_copr_build_event = """\n+{\n+  "agent": "mmassari",\n+  "pullrequest": {\n+    "assignee": null,\n+    "branch": "rawhide",\n+    "branch_from": "custumized-packit-action",\n+    "cached_merge_status": "FFORWARD",\n+    "closed_at": null,\n+    "closed_by": null,\n+    "comments": [\n+      {\n+        "comment": "/packit-stg pull-from-upstream --with-pr-config",\n+        "commit": null,\n+        "date_created": "1693297834",\n+        "edited_on": null,\n+        "editor": null,\n+        "filename": null,\n+        "id": 155947,\n+        "line": null,\n+        "notification": false,\n+        "parent": null,\n+        "reactions": {},\n+        "tree": null,\n+        "user": {\n+          "full_url": "https://src.fedoraproject.org/user/mmassari",\n+          "fullname": "Maja Massarini",\n+          "name": "mmassari",\n+          "url_path": "user/mmassari"\n+        }\n+      }\n+    ],\n+    "commit_start": "62df8b5ad073d4b299620e7aa81aaafeaee71bb9",\n+    "commit_stop": "62df8b5ad073d4b299620e7aa81aaafeaee71bb9",\n+    "date_created": "1693297764",\n+    "full_url": "https://src.fedoraproject.org/rpms/python-teamcity-messages/pull-request/45",\n+    "id": 45,\n+    "initial_comment": null,\n+    "last_updated": "1693297834",\n+    "project": {\n+      "access_groups": {\n+        "admin": [],\n+        "collaborator": [],\n+        "commit": [],\n+        "ticket": []\n+      },\n+      "access_users": {\n+        "admin": [\n+          "limb"\n+        ],\n+        "collaborator": [],\n+        "commit": [],\n+        "owner": [\n+          "mmassari"\n+        ],\n+        "ticket": []\n+      },\n+      "close_status": [],\n+      "custom_keys": [],\n+      "date_created": "1643654065",\n+      "date_modified": "1675768016",\n+      "description": "The python-teamcity-messages package",\n+      "full_url": "https://src.fedoraproject.org/rpms/python-teamcity-messages",\n+      "fullname": "rpms/python-teamcity-messages",\n+      "id": 54766,\n+      "milestones": {},\n+      "name": "python-teamcity-messages",\n+      "namespace": "rpms",\n+      "parent": null,\n+      "priorities": {},\n+      "tags": [],\n+      "url_path": "rpms/python-teamcity-messages",\n+      "user": {\n+        "full_url": "https://src.fedoraproject.org/user/mmassari",\n+        "fullname": "Maja Massarini",\n+        "name": "mmassari",\n+        "url_path": "user/mmassari"\n+      }\n+    },\n+    "remote_git": null,\n+    "repo_from": {\n+      "access_groups": {\n+        "admin": [],\n+        "collaborator": [],\n+        "commit": [],\n+        "ticket": []\n+      },\n+      "access_users": {\n+        "admin": [\n+          "limb"\n+        ],\n+        "collaborator": [],\n+        "commit": [],\n+        "owner": [\n+          "mmassari"\n+        ],\n+        "ticket": []\n+      },\n+      "close_status": [],\n+      "custom_keys": [],\n+      "date_created": "1643654065",\n+      "date_modified": "1675768016",\n+      "description": "The python-teamcity-messages package",\n+      "full_url": "https://src.fedoraproject.org/rpms/python-teamcity-messages",\n+      "fullname": "rpms/python-teamcity-messages",\n+      "id": 54766,\n+      "milestones": {},\n+      "name": "python-teamcity-messages",\n+      "namespace": "rpms",\n+      "parent": null,\n+      "priorities": {},\n+      "tags": [],\n+      "url_path": "rpms/python-teamcity-messages",\n+      "user": {\n+        "full_url": "https://src.fedoraproject.org/user/mmassari",\n+        "fullname": "Maja Massarini",\n+        "name": "mmassari",\n+        "url_path": "user/mmassari"\n+      }\n+    },\n+    "status": "Open",\n+    "tags": [],\n+    "threshold_reached": null,\n+    "title": "Add actions for testing purpose",\n+    "uid": "139c2b91041b4e939384283169f389d6",\n+    "updated_on": "1693297834",\n+    "user": {\n+      "full_url": "https://src.fedoraproject.org/user/mmassari",\n+      "fullname": "Maja Massarini",\n+      "name": "mmassari",\n+      "url_path": "user/mmassari"\n+    }\n+  },\n+  "headers": {\n+    "fedora_messaging_schema": "pagure.pull-request.comment.added",\n+    "fedora_messaging_severity": 20,\n+    "fedora_messaging_user_mmassari": true,\n+    "sent-at": "2023-08-29T08:30:35+00:00"\n+  },\n+  "topic": "org.fedoraproject.prod.pagure.pull-request.comment.added"\n+}\n+"""\n+\n+event = json.loads(comment_copr_build_event)\n celery_app: Celery = Proxy(get_celery_application)\n+celery_app.send_task(\n+    name="task.steve_jobs.process_message",\n+    kwargs={"event": event},\n+)\n+\n+\ndiff --git a/packit_service/constants.py b/packit_service/constants.py\nindex f5b3e1aa..21707465 100644\n--- a/packit_service/constants.py\n+++ b/packit_service/constants.py\n@@ -18,7 +18,8 @@ DOCS_TESTING_FARM = f"{DOCS_URL}/testing-farm"\n KOJI_PRODUCTION_BUILDS_ISSUE = "https://pagure.io/releng/issue/9801"\n\n SANDCASTLE_WORK_DIR = "/tmp/sandcastle"\n-SANDCASTLE_IMAGE = "quay.io/packit/sandcastle"\n+#SANDCASTLE_IMAGE = "quay.io/packit/sandcastle"\n+SANDCASTLE_IMAGE = "image-registry.openshift-image-registry.svc:5000/packit-dev-sandbox/sandcastle"\n SANDCASTLE_DEFAULT_PROJECT = "myproject"\n SANDCASTLE_PVC = "SANDCASTLE_PVC"\n\ndiff --git a/packit_service/worker/monitoring.py b/packit_service/worker/monitoring.py\nindex 05ce236c..26f189c3 100644\n--- a/packit_service/worker/monitoring.py\n+++ b/packit_service/worker/monitoring.py\n@@ -165,6 +165,8 @@ class Pushgateway:\n             return\n\n         logger.info("Pushing the metrics to pushgateway.")\n-        push_to_gateway(\n-            self.pushgateway_address, job=self.worker_name, registry=self.registry\n-        )\n+        try:\n+            push_to_gateway(\n+                self.pushgateway_address, job=self.worker_name, registry=self.registry\n+            )\n+        except: pass # gaierror in Openshift Local\n')),(0,r.yg)("h2",{id:"debug-the-worker-with-port-forwarding"},"Debug the worker with port forwarding"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"oc port-forward pod/$(oc get pods -n myproject | awk '/^packit-worker/{print $1}') -n myproject 5678\n")),(0,r.yg)("p",null,"If you use the microsoft ",(0,r.yg)("inlineCode",{parentName:"p"},"debugpy")," for debugging probably you need something similar to the following in a file named ",(0,r.yg)("inlineCode",{parentName:"p"},".vscode/launch.json")," for Visual Studio Code to attach the breakpoint"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'        {\n            "name": "Python: Remote Attach packit code remotely",\n            "type": "python",\n            "request": "attach",\n            "connect": {\n                "host": "localhost",\n                "port": 5678\n            },\n            "justMyCode": false,\n            "pathMappings": [\n                {\n                    "localRoot": "/your-packit-source-dir/packit",\n                    "remoteRoot": "/usr/local/lib/python3.9/site-packages"\n                },\n            ]\n        },\n')),(0,r.yg)("h2",{id:"debug-sandcastle"},"Debug sandcastle"),(0,r.yg)("h3",{id:"create-sandcastle-volumes-manually"},"Create sandcastle volumes manually"),(0,r.yg)("h4",{id:"create-persistentvolume1"},"Create PersistentVolume1"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: sandcastle-volume-1\n  namespace: packit-dev-sandbox\n  labels:\n    type: local\nspec:\n  claimRef:\n    name: sandcastle-repository-cache-packit-worker-0\n    namespace: packit-dev-sandbox\n  storageClassName: crc-csi-hostpath-provisioner\n  accessModes:\n    - ReadWriteOnce\n  capacity:\n    storage: 4Gi\n  hostPath:\n    path: "/tmp/sandbox1"\n  volumeMode: Filesystem\n  persistentVolumeReclaimPolicy: Recycle\n')),(0,r.yg)("h4",{id:"create-persistentvolume2-and-manually-adjust-the-claimref-name-once-the-sandcastle-pod-is-running"},"Create PersistentVolume2 (and manually adjust the claimRef name once the sandcastle pod is running...)"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: sandcastle-volume-2\n  namespace: packit-dev-sandbox\n  labels:\n    type: local\nspec:\n  claimRef:\n    name: sandcastle--tmp-sandcastle-20230913-075642340270-pvc\n    namespace: packit-dev-sandbox\n  storageClassName: crc-csi-hostpath-provisioner\n  accessModes:\n    - ReadWriteOnce\n  capacity:\n    storage: 3Gi\n  hostPath:\n    path: "/tmp/sandbox2"\n  volumeMode: Filesystem\n  persistentVolumeReclaimPolicy: Recycle\n')))}m.isMDXComponent=!0}}]);