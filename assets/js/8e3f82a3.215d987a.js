"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[4097],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=c(a),k=r,d=s["".concat(o,".").concat(k)]||s[k]||u[k]||p;return a?n.createElement(d,l(l({ref:t},m),{},{components:a})):n.createElement(d,l({ref:t},m))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,l=new Array(p);l[0]=k;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[s]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<p;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},44850:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>p,metadata:()=>i,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const p={sidebar_label:"prep",title:"specfile.prep"},l=void 0,i={unversionedId:"api/specfile/prep",id:"api/specfile/prep",title:"specfile.prep",description:"PrepMacro",source:"@site/specfile/api/specfile/prep.md",sourceDirName:"api/specfile",slug:"/api/specfile/prep",permalink:"/specfile/api/specfile/prep",draft:!1,editUrl:"https://github.com/packit/specfile/tree/main/docs/specfile/api/specfile/prep.md",tags:[],version:"current",frontMatter:{sidebar_label:"prep",title:"specfile.prep"},sidebar:"autogenerated",previous:{title:"options",permalink:"/specfile/api/specfile/options"},next:{title:"sections",permalink:"/specfile/api/specfile/sections"}},o={},c=[{value:"PrepMacro",id:"prepmacro",level:2},{value:"__init__",id:"__init__",level:4},{value:"SetupMacro",id:"setupmacro",level:2},{value:"PatchMacro",id:"patchmacro",level:2},{value:"number",id:"number",level:4},{value:"AutosetupMacro",id:"autosetupmacro",level:2},{value:"AutopatchMacro",id:"autopatchmacro",level:2},{value:"PrepMacros",id:"prepmacros",level:2},{value:"__init__",id:"__init__-1",level:4},{value:"Prep",id:"prep",level:2},{value:"add_patch_macro",id:"add_patch_macro",level:4},{value:"remove_patch_macro",id:"remove_patch_macro",level:4},{value:"parse",id:"parse",level:4},{value:"get_raw_section_data",id:"get_raw_section_data",level:4}],m={toc:c},s="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"prepmacro"},"PrepMacro"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class PrepMacro(ABC)\n")),(0,r.kt)("p",null,"Class that represents a ",(0,r.kt)("em",{parentName:"p"},"%prep")," macro."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - Literal name of the macro."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," - Options of the macro.")),(0,r.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(name: str,\n             options: Options,\n             delimiter: str,\n             prefix: Optional[str] = None,\n             suffix: Optional[str] = None,\n             preceding_lines: Optional[List[str]] = None) -> None\n")),(0,r.kt)("p",null,"Initializes a prep macro object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," - Literal name of the macro."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," - Options of the macro."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"delimiter")," - Delimiter separating name and option string."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prefix")," - Characters preceding the macro on a line."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"suffix")," - Characters following the macro on a line."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"preceding_lines")," - Lines of the %prep section preceding the macro.")),(0,r.kt)("h2",{id:"setupmacro"},"SetupMacro"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class SetupMacro(PrepMacro)\n")),(0,r.kt)("p",null,"Class that represents a ",(0,r.kt)("em",{parentName:"p"},"%setup")," macro."),(0,r.kt)("h2",{id:"patchmacro"},"PatchMacro"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class PatchMacro(PrepMacro)\n")),(0,r.kt)("p",null,"Class that represents a ",(0,r.kt)("em",{parentName:"p"},"%patch")," macro."),(0,r.kt)("h4",{id:"number"},"number"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef number() -> int\n")),(0,r.kt)("p",null,"Number of the %patch macro."),(0,r.kt)("h2",{id:"autosetupmacro"},"AutosetupMacro"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class AutosetupMacro(PrepMacro)\n")),(0,r.kt)("p",null,"Class that represents an ",(0,r.kt)("em",{parentName:"p"},"%autosetup")," macro."),(0,r.kt)("h2",{id:"autopatchmacro"},"AutopatchMacro"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class AutopatchMacro(PrepMacro)\n")),(0,r.kt)("p",null,"Class that represents an ",(0,r.kt)("em",{parentName:"p"},"%autopatch")," macro."),(0,r.kt)("h2",{id:"prepmacros"},"PrepMacros"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class PrepMacros(UserList[PrepMacro])\n")),(0,r.kt)("p",null,"Class that represents a list of ",(0,r.kt)("em",{parentName:"p"},"%prep")," macros."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data")," - List of individual ",(0,r.kt)("em",{parentName:"li"},"%prep")," macros.")),(0,r.kt)("h4",{id:"__init__-1"},"_","_","init","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(data: Optional[List[PrepMacro]] = None,\n             remainder: Optional[List[str]] = None) -> None\n")),(0,r.kt)("p",null,"Initializes a prep macros object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data")," - List of individual ",(0,r.kt)("em",{parentName:"li"},"%prep")," macros."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"remainder")," - Leftover lines in the section.")),(0,r.kt)("h2",{id:"prep"},"Prep"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class Prep(collections.abc.Container)\n")),(0,r.kt)("p",null,"Class that represents a ",(0,r.kt)("em",{parentName:"p"},"%prep")," section."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"macros")," - List of individual ",(0,r.kt)("em",{parentName:"li"},"%prep")," macros.")),(0,r.kt)("h4",{id:"add_patch_macro"},"add","_","patch","_","macro"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def add_patch_macro(number: int, **kwargs: Any) -> None\n")),(0,r.kt)("p",null,"Adds a new ",(0,r.kt)("em",{parentName:"p"},"%patch")," macro with given number and options."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"number")," - Macro number."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"P")," - The ",(0,r.kt)("em",{parentName:"li"},"-P")," option (patch number)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"p")," - The ",(0,r.kt)("em",{parentName:"li"},"-p")," option (strip number)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"R")," - The ",(0,r.kt)("em",{parentName:"li"},"-R")," option (reverse)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"E")," - The ",(0,r.kt)("em",{parentName:"li"},"-E")," option (remove empty files)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"b")," - The ",(0,r.kt)("em",{parentName:"li"},"-b")," option (backup)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"z")," - The ",(0,r.kt)("em",{parentName:"li"},"-z")," option (suffix)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"F")," - The ",(0,r.kt)("em",{parentName:"li"},"-F")," option (fuzz factor)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"d")," - The ",(0,r.kt)("em",{parentName:"li"},"-d")," option (working directory)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"o")," - The ",(0,r.kt)("em",{parentName:"li"},"-o")," option (output file)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"P"),"0 - The ",(0,r.kt)("em",{parentName:"li"},"-Z")," option (set UTC times).")),(0,r.kt)("h4",{id:"remove_patch_macro"},"remove","_","patch","_","macro"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def remove_patch_macro(number: int) -> None\n")),(0,r.kt)("p",null,"Removes a ",(0,r.kt)("em",{parentName:"p"},"%patch")," macro with given number."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"number")," - Macro number.")),(0,r.kt)("h4",{id:"parse"},"parse"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'@classmethod\ndef parse(cls, section: Section) -> "Prep"\n')),(0,r.kt)("p",null,"Parses a section into a ",(0,r.kt)("inlineCode",{parentName:"p"},"Prep")," object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"section")," - ",(0,r.kt)("em",{parentName:"li"},"%prep")," section.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  New instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"Prep")," class."),(0,r.kt)("h4",{id:"get_raw_section_data"},"get","_","raw","_","section","_","data"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get_raw_section_data() -> List[str]\n")),(0,r.kt)("p",null,"Reconstructs section data from ",(0,r.kt)("inlineCode",{parentName:"p"},"Prep")," object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  List of lines forming the reconstructed section data."))}u.isMDXComponent=!0}}]);