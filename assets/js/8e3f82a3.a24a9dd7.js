"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[27675],{15045:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>p,metadata:()=>i,toc:()=>m});var r=n(58168),t=(n(96540),n(15680));const p={sidebar_label:"prep",title:"specfile.prep"},l=void 0,i={unversionedId:"api/specfile/prep",id:"api/specfile/prep",title:"specfile.prep",description:"PrepMacro",source:"@site/specfile/api/specfile/prep.md",sourceDirName:"api/specfile",slug:"/api/specfile/prep",permalink:"/specfile/api/specfile/prep",draft:!1,editUrl:"https://github.com/packit/specfile/tree/main/docs/specfile/api/specfile/prep.md",tags:[],version:"current",frontMatter:{sidebar_label:"prep",title:"specfile.prep"},sidebar:"autogenerated",previous:{title:"options",permalink:"/specfile/api/specfile/options"},next:{title:"sections",permalink:"/specfile/api/specfile/sections"}},o={},m=[{value:"PrepMacro",id:"prepmacro",level:2},{value:"__init__",id:"__init__",level:4},{value:"SetupMacro",id:"setupmacro",level:2},{value:"PatchMacro",id:"patchmacro",level:2},{value:"number",id:"number",level:4},{value:"AutosetupMacro",id:"autosetupmacro",level:2},{value:"AutopatchMacro",id:"autopatchmacro",level:2},{value:"PrepMacros",id:"prepmacros",level:2},{value:"__init__",id:"__init__-1",level:4},{value:"Prep",id:"prep",level:2},{value:"add_patch_macro",id:"add_patch_macro",level:4},{value:"remove_patch_macro",id:"remove_patch_macro",level:4},{value:"parse",id:"parse",level:4},{value:"get_raw_section_data",id:"get_raw_section_data",level:4}],c={toc:m},s="wrapper";function g(e){let{components:a,...n}=e;return(0,t.yg)(s,(0,r.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h2",{id:"prepmacro"},"PrepMacro"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class PrepMacro(ABC)\n")),(0,t.yg)("p",null,"Class that represents a ",(0,t.yg)("em",{parentName:"p"},"%prep")," macro."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Attributes"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"name")," - Literal name of the macro."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"options")," - Options of the macro.")),(0,t.yg)("h4",{id:"__init__"},"_","_","init","_","_"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def __init__(name: str,\n             options: Options,\n             delimiter: str,\n             prefix: Optional[str] = None,\n             suffix: Optional[str] = None,\n             preceding_lines: Optional[List[str]] = None) -> None\n")),(0,t.yg)("p",null,"Initializes a prep macro object."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"name")," - Literal name of the macro."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"options")," - Options of the macro."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"delimiter")," - Delimiter separating name and option string."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"prefix")," - Characters preceding the macro on a line."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"suffix")," - Characters following the macro on a line."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"preceding_lines")," - Lines of the %prep section preceding the macro.")),(0,t.yg)("h2",{id:"setupmacro"},"SetupMacro"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class SetupMacro(PrepMacro)\n")),(0,t.yg)("p",null,"Class that represents a ",(0,t.yg)("em",{parentName:"p"},"%setup")," macro."),(0,t.yg)("h2",{id:"patchmacro"},"PatchMacro"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class PatchMacro(PrepMacro)\n")),(0,t.yg)("p",null,"Class that represents a ",(0,t.yg)("em",{parentName:"p"},"%patch")," macro."),(0,t.yg)("h4",{id:"number"},"number"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"@property\ndef number() -> int\n")),(0,t.yg)("p",null,"Number of the %patch macro."),(0,t.yg)("h2",{id:"autosetupmacro"},"AutosetupMacro"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class AutosetupMacro(PrepMacro)\n")),(0,t.yg)("p",null,"Class that represents an ",(0,t.yg)("em",{parentName:"p"},"%autosetup")," macro."),(0,t.yg)("h2",{id:"autopatchmacro"},"AutopatchMacro"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class AutopatchMacro(PrepMacro)\n")),(0,t.yg)("p",null,"Class that represents an ",(0,t.yg)("em",{parentName:"p"},"%autopatch")," macro."),(0,t.yg)("h2",{id:"prepmacros"},"PrepMacros"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class PrepMacros(UserList[PrepMacro])\n")),(0,t.yg)("p",null,"Class that represents a list of ",(0,t.yg)("em",{parentName:"p"},"%prep")," macros."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Attributes"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"data")," - List of individual ",(0,t.yg)("em",{parentName:"li"},"%prep")," macros.")),(0,t.yg)("h4",{id:"__init__-1"},"_","_","init","_","_"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def __init__(data: Optional[List[PrepMacro]] = None,\n             remainder: Optional[List[str]] = None) -> None\n")),(0,t.yg)("p",null,"Initializes a prep macros object."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"data")," - List of individual ",(0,t.yg)("em",{parentName:"li"},"%prep")," macros."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"remainder")," - Leftover lines in the section.")),(0,t.yg)("h2",{id:"prep"},"Prep"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"class Prep(collections.abc.Container)\n")),(0,t.yg)("p",null,"Class that represents a ",(0,t.yg)("em",{parentName:"p"},"%prep")," section."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Attributes"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"macros")," - List of individual ",(0,t.yg)("em",{parentName:"li"},"%prep")," macros.")),(0,t.yg)("h4",{id:"add_patch_macro"},"add","_","patch","_","macro"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def add_patch_macro(number: Optional[int] = None,\n                    old_style_number: bool = False,\n                    **kwargs: Any) -> None\n")),(0,t.yg)("p",null,"Adds a new ",(0,t.yg)("em",{parentName:"p"},"%patch")," macro with given number and options."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"number")," - Optional macro number."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"old_style_number")," - Whether the number should be part of macro name."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"P")," - The ",(0,t.yg)("em",{parentName:"li"},"-P")," option (patch number)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"p")," - The ",(0,t.yg)("em",{parentName:"li"},"-p")," option (strip number)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"R")," - The ",(0,t.yg)("em",{parentName:"li"},"-R")," option (reverse)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"E")," - The ",(0,t.yg)("em",{parentName:"li"},"-E")," option (remove empty files)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"b")," - The ",(0,t.yg)("em",{parentName:"li"},"-b")," option (backup)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"z")," - The ",(0,t.yg)("em",{parentName:"li"},"-z")," option (suffix)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"F")," - The ",(0,t.yg)("em",{parentName:"li"},"-F")," option (fuzz factor)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"d")," - The ",(0,t.yg)("em",{parentName:"li"},"-d")," option (working directory)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"old_style_number"),"0 - The ",(0,t.yg)("em",{parentName:"li"},"-o")," option (output file)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"old_style_number"),"1 - The ",(0,t.yg)("em",{parentName:"li"},"-Z")," option (set UTC times).")),(0,t.yg)("h4",{id:"remove_patch_macro"},"remove","_","patch","_","macro"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def remove_patch_macro(number: int) -> None\n")),(0,t.yg)("p",null,"Removes a ",(0,t.yg)("em",{parentName:"p"},"%patch")," macro with given number."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"number")," - Macro number.")),(0,t.yg)("h4",{id:"parse"},"parse"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'@classmethod\ndef parse(cls, section: Section) -> "Prep"\n')),(0,t.yg)("p",null,"Parses a section into a ",(0,t.yg)("inlineCode",{parentName:"p"},"Prep")," object."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"section")," - ",(0,t.yg)("em",{parentName:"li"},"%prep")," section.")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Returns"),":"),(0,t.yg)("p",null,"  New instance of ",(0,t.yg)("inlineCode",{parentName:"p"},"Prep")," class."),(0,t.yg)("h4",{id:"get_raw_section_data"},"get","_","raw","_","section","_","data"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},"def get_raw_section_data() -> List[str]\n")),(0,t.yg)("p",null,"Reconstructs section data from ",(0,t.yg)("inlineCode",{parentName:"p"},"Prep")," object."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Returns"),":"),(0,t.yg)("p",null,"  List of lines forming the reconstructed section data."))}g.isMDXComponent=!0},15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>y});var r=n(96540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function p(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?p(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var o=r.createContext({}),m=function(e){var a=r.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},c=function(e){var a=m(e.components);return r.createElement(o.Provider,{value:a},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,p=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=m(n),u=t,y=s["".concat(o,".").concat(u)]||s[u]||g[u]||p;return n?r.createElement(y,l(l({ref:a},c),{},{components:n})):r.createElement(y,l({ref:a},c))}));function y(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var p=n.length,l=new Array(p);l[0]=u;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i[s]="string"==typeof e?e:t,l[1]=i;for(var m=2;m<p;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);