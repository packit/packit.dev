"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[945],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(g,l(l({ref:t},s),{},{components:n})):r.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3677:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_label:"context_management",title:"specfile.context_management"},l=void 0,i={unversionedId:"api/specfile/context_management",id:"api/specfile/context_management",title:"specfile.context_management",description:"capture\\_stderr",source:"@site/specfile/api/specfile/context_management.md",sourceDirName:"api/specfile",slug:"/api/specfile/context_management",permalink:"/specfile/api/specfile/context_management",draft:!1,editUrl:"https://github.com/packit/specfile/tree/main/docs/specfile/api/specfile/context_management.md",tags:[],version:"current",frontMatter:{sidebar_label:"context_management",title:"specfile.context_management"},sidebar:"autogenerated",previous:{title:"conditions",permalink:"/specfile/api/specfile/conditions"},next:{title:"exceptions",permalink:"/specfile/api/specfile/exceptions"}},p={},c=[{value:"capture_stderr",id:"capture_stderr",level:4},{value:"GeneratorContextManager",id:"generatorcontextmanager",level:2},{value:"content",id:"content",level:4},{value:"ContextManager",id:"contextmanager",level:2}],s={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"capture_stderr"},"capture","_","stderr"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@contextlib.contextmanager\ndef capture_stderr() -> Generator[List[bytes], None, None]\n")),(0,a.kt)("p",null,"Context manager for capturing output to ",(0,a.kt)("em",{parentName:"p"},"stderr"),". A ",(0,a.kt)("em",{parentName:"p"},"stderr")," output\nof anything run in its context will be captured in the target variable\nof the ",(0,a.kt)("strong",{parentName:"p"},"with")," statement."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Yields"),":"),(0,a.kt)("p",null,"  List of captured lines."),(0,a.kt)("h2",{id:"generatorcontextmanager"},"GeneratorContextManager"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class GeneratorContextManager(contextlib._GeneratorContextManager)\n")),(0,a.kt)("p",null,"Extended ",(0,a.kt)("inlineCode",{parentName:"p"},"contextlib._GeneratorContextManager")," that provides ",(0,a.kt)("inlineCode",{parentName:"p"},"content")," property."),(0,a.kt)("h4",{id:"content"},"content"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef content() -> Any\n")),(0,a.kt)("p",null,"Fully consumes the underlying generator and returns the yielded value."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("p",null,"  Value that would normally be the target variable of an associated ",(0,a.kt)("strong",{parentName:"p"},"with")," statement."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Raises"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"StopIteration")," - If the underlying generator is already exhausted.")),(0,a.kt)("h2",{id:"contextmanager"},"ContextManager"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class ContextManager()\n")),(0,a.kt)("p",null,"Class for decorating generator functions that should act as a context manager."),(0,a.kt)("p",null,"Just like with ",(0,a.kt)("inlineCode",{parentName:"p"},"contextlib.contextmanager"),", the generator returned from the decorated function\nmust yield exactly one value that will be used as the target variable of the with statement.\nIf the same function with the same arguments is called again from within previously generated\ncontext, the generator will be ignored and the target variable will be reused."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"function")," - Decorated generator function."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"generators")," - Mapping of serialized function arguments to generators."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"values")," - Mapping of serialized function arguments to yielded values.")))}m.isMDXComponent=!0}}]);