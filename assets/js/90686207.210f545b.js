"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[92433],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),h=n,y=m["".concat(s,".").concat(h)]||m[h]||u[h]||i;return a?r.createElement(y,o(o({ref:t},c),{},{components:a})):r.createElement(y,o({ref:t},c))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},96620:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(58168),n=(a(96540),a(15680));const i={title:"Automation for moving the stable branches",authors:"lbarczio"},o=void 0,l={unversionedId:"deployment/automation-for-stable-branches",id:"deployment/automation-for-stable-branches",title:"Automation for moving the stable branches",description:"Every Friday we move the stable branches of our repositories so that new prod images are rebuilt",source:"@site/research/deployment/automation-for-stable-branches.md",sourceDirName:"deployment",slug:"/deployment/automation-for-stable-branches",permalink:"/research/deployment/automation-for-stable-branches",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/deployment/automation-for-stable-branches.md",tags:[],version:"current",frontMatter:{title:"Automation for moving the stable branches",authors:"lbarczio"},sidebar:"autogenerated",previous:{title:"Deployment",permalink:"/research/category/deployment"},next:{title:"Automotive clusters",permalink:"/research/deployment/automotive-rosa"}},s={},p=[{value:"Solution",id:"solution",level:2},{value:"Determine whether stage works",id:"determine-whether-stage-works",level:3},{value:"Move the stable branches",id:"move-the-stable-branches",level:3},{value:"Possible plan",id:"possible-plan",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...a}=e;return(0,n.yg)(m,(0,r.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Every Friday we move the stable branches of our repositories so that new ",(0,n.yg)("inlineCode",{parentName:"p"},"prod")," images are rebuilt\nfor Packit Service. There are still more and more repositories which\nwe need to move the stable branches for and this work is repetitive and can be done automatically."),(0,n.yg)("p",null,"Repositories which we currently need for Packit Service:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"packit")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"packit-service")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"packit-service-fedmsg")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"packit-service-centosmsg")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"sandcastle")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"dashboard")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"tokman")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"ogr (at the moment we have only master branch for it,\nbut we planned to create a stable branch for it as well)"))),(0,n.yg)("p",null,"Dependencies (order of moving):"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/blob/a1ba5988ce2a2409b4f52f05324587303b52e676/files/install-deps-worker.yaml#L50"},"packit -> packit-service")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/blob/a1ba5988ce2a2409b4f52f05324587303b52e676/files/install-deps-worker.yaml#L52"},"ogr -> packit-service"))),(0,n.yg)("p",null,"AC:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"have a mechanism to determine whether stage works fine (the decision would need to be approved by human)\nand move the stable branches to appropriate commit hashes")),(0,n.yg)("h2",{id:"solution"},"Solution"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"create a script which runs the validation of stage and afterwards moving the branches (in one / 2 different scripts)"),(0,n.yg)("li",{parentName:"ul"},"run the script manually/automatically(job)"),(0,n.yg)("li",{parentName:"ul"},"what to do when validation for stage fails",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"running automatically - notify us - how: e.g.message in Sentry"),(0,n.yg)("li",{parentName:"ul"},"running manually - output failure"))),(0,n.yg)("li",{parentName:"ul"},"specific commit-hashes can be defined (so that not the latest commit-hash is used), e.g.:\n",(0,n.yg)("inlineCode",{parentName:"li"},"python3 ./move-branches.py --packit-service=1787687aba71"),"\nwould move packit-service to the ",(0,n.yg)("inlineCode",{parentName:"li"},"1787687aba71")," and others to the latest commit in ",(0,n.yg)("inlineCode",{parentName:"li"},"master"))),(0,n.yg)("h3",{id:"determine-whether-stage-works"},"Determine whether stage works"),(0,n.yg)("p",null,"Staging app uses images built from master branches, therefore if stage works\nas expected, we should be okay to move all stable branches to the latest commits.\nFor this we could use:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"since the validation script runs on our ",(0,n.yg)("inlineCode",{parentName:"li"},"hello-world")," repository, where the staging instance is enabled,\nwe have the information about results of builds and tests triggered in the morning by the validation script,\nwe can somehow check the results for stage (e.g. Github flags for stage)"),(0,n.yg)("li",{parentName:"ul"},"check new unresolved sentry issues from stage"),(0,n.yg)("li",{parentName:"ul"},"final decision done by us")),(0,n.yg)("h3",{id:"move-the-stable-branches"},"Move the stable branches"),(0,n.yg)("p",null,"For moving the stable branches we can use e.g. Github API.\nFor each repo:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"check whether ",(0,n.yg)("inlineCode",{parentName:"li"},"master")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"stable")," are even, if yes, do nothing"),(0,n.yg)("li",{parentName:"ul"},"know the commit-hash we want to update the stable branch to",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"default, when stage works: get last commit-hash from ",(0,n.yg)("inlineCode",{parentName:"li"},"master")),(0,n.yg)("li",{parentName:"ul"},"specified by us"))),(0,n.yg)("li",{parentName:"ul"},"update the stable branch by this commit-hash"),(0,n.yg)("li",{parentName:"ul"},"if running automatically, we need to use an account with appropriate permissions")),(0,n.yg)("h2",{id:"possible-plan"},"Possible plan"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Create a script for moving the stable branches, run it manually (stage validation done by us)."),(0,n.yg)("li",{parentName:"ol"},"Implement some sort of validation of the stage which would need to be approved by us."),(0,n.yg)("li",{parentName:"ol"},"(optional) Deploy periodic job which would run both.")))}u.isMDXComponent=!0}}]);