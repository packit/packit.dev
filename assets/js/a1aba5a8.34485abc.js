"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[43734],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return n?o.createElement(h,i(i({ref:t},u),{},{components:n})):o.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},31166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(87462),a=(n(67294),n(3905));const r={title:"Downstream configuration template",sidebar_position:2},i=void 0,s={unversionedId:"configuration/downstream_configuration_template",id:"configuration/downstream_configuration_template",title:"Downstream configuration template",description:"This is a template for configuration of Packit's Fedora release automation (dist-git only).",source:"@site/docs/configuration/downstream_configuration_template.md",sourceDirName:"configuration",slug:"/configuration/downstream_configuration_template",permalink:"/docs/configuration/downstream_configuration_template",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/configuration/downstream_configuration_template.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Downstream configuration template",sidebar_position:2},sidebar:"autogenerated",previous:{title:"Bodhi updates",permalink:"/docs/configuration/downstream/bodhi_update"},next:{title:"Actions",permalink:"/docs/configuration/actions"}},c={},l=[{value:"How to use the template",id:"how-to-use-the-template",level:2},{value:"Template",id:"template",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is a template for configuration of Packit's Fedora release automation (dist-git only)."),(0,a.kt)("h2",{id:"how-to-use-the-template"},"How to use the template"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"copy the content"),(0,a.kt)("li",{parentName:"ol"},"create a ",(0,a.kt)("inlineCode",{parentName:"li"},"packit.yaml"),"/",(0,a.kt)("inlineCode",{parentName:"li"},".packit.yaml")," file in root directory of your dist-git repository in your ",(0,a.kt)("inlineCode",{parentName:"li"},"rawhide")," branch\nand paste the content"),(0,a.kt)("li",{parentName:"ol"},"resolve the TODOs"),(0,a.kt)("li",{parentName:"ol"},"(optionally) run ",(0,a.kt)("a",{parentName:"li",href:"/docs/cli/validate-config"},(0,a.kt)("inlineCode",{parentName:"a"},"packit validate-config"))," to make sure the configuration is valid")),(0,a.kt)("h2",{id:"template"},"Template"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# See the documentation for more information:\n# https://packit.dev/docs/configuration/\n\n# TODO fill in the URL to the upstream Git repo (one that can be passed to anonymous `git clone`)\nupstream_project_url: https://github.com/<upstream-repository>\n\n# TODO optionally uncomment and fill in the URL of repository where you want to be notified via issues about errors\n#issue_repository: https://github.com/<my-repo-for-issues>\n\n# TODO unless upstream tags match the version strings, you need to uncomment this and adjust the template to match the upstream tag format\n# https://packit.dev/docs/configuration#upstream_tag_template\n#upstream_tag_template: v{version}\n\n# TODO uncomment and adjust if you want Packit to filter upstream tags that should be reacted upon\n# https://packit.dev/docs/configuration#upstream_tag_include\n# https://packit.dev/docs/configuration#upstream_tag_exclude\n#upstream_tag_include: <python-regex>\n#upstream_tag_exclude: <python-regex>\n\njobs:\n# https://packit.dev/docs/configuration/downstream/pull_from_upstream\n# TODO make sure there is Fedora mapping for the upstream project in https://release-monitoring.org/projects/\n# TODO make sure Monitoring status on the left side at https://src.fedoraproject.org/rpms/<your-package> is set to Monitoring\n- job: pull_from_upstream\n  trigger: release\n  dist_git_branches:\n    # TODO adjust the list of branches for which the release should be synced\n    - fedora-all\n  \n  # TODO customization of changelog entry of the new release and Packit's commit message\n  # default behaviour:\n  # - changelog entry contains '- Update to version <version>' and references the bugzilla about new release\n  # - commit message contains info about the upstream release and references the bugzilla about new release  \n  # you can choose one of the following options below to customize the behaviour:\n  \n  # option 1: generate your custom changelog entry and/or commit message\n  # uncomment and adjust the commands to your needs\n  \n  #actions:\n  #  commit-message:\n  #  - bash -c 'echo \"Update to ${PACKIT_PROJECT_VERSION}\"'\n  #  - bash -c '[ -z \"$PACKIT_RESOLVED_BUGS\" ] || echo ${PACKIT_RESOLVED_BUGS} | tr \" \" \"\\n\" | sed \"s/^/- Resolves /\"'\n  #  - bash -c 'echo \"- Upstream tag - ${PACKIT_UPSTREAM_TAG}\"'\n  #  - bash -c 'echo \"- Upstream commit - ${PACKIT_UPSTREAM_COMMIT}\"'\n  #  changelog-entry:\n  #  - bash -c 'git log --no-merges --pretty=\"format:- %s (%an)\" $(git describe --tags --abbrev=0 ${PACKIT_PROJECT_UPSTREAM_TAG}^)..${PACKIT_PROJECT_UPSTREAM_TAG} --'\n  #  - bash -c '[ -z \"$PACKIT_RESOLVED_BUGS\" ] || echo ${PACKIT_RESOLVED_BUGS} | tr \" \" \"\\n\" | sed \"s/^/- Resolves /\"'\n\n  # option 2: enable copy_upstream_release_description flag so that upstream release description is set as \n  # changelog entry (works for GitHub and GitLab upstreams only)\n  #copy_upstream_release_description: true\n\n# TODO remove if you do not want to have Koji builds automatically triggered by Packit\n# https://packit.dev/docs/configuration/downstream/koji_build\n- job: koji_build\n  trigger: commit\n  # TODO uncomment and adjust if you want to allow Koji builds to be triggered by other events than Packit's merged PRs\n  # https://packit.dev/docs/configuration/downstream/koji_build#optional-parameters\n  #allowed_pr_authors: ['packit', 'all_admins']\n  #allowed_committers: ['all_admins']\n  # TODO adjust the list of branches for which the the builds should be triggered\n  dist_git_branches:\n    - fedora-all\n\n# TODO remove if you do not want to have Bodhi updates automatically triggered by Packit\n# https://packit.dev/docs/configuration/downstream/bodhi_update\n- job: bodhi_update\n  trigger: commit\n  # TODO uncomment and adjust if you want to allow Bodhi updates to be triggered by successful Koji builds of other users than just Packit\n  # https://packit.dev/docs/configuration/downstream/bodhi_update#optional-parameters\n  #allowed_builders: ['packit', 'all_admins']\n  # TODO adjust the list of branches for which the updates should be created\n  dist_git_branches:\n    - fedora-branched\n")))}d.isMDXComponent=!0}}]);