"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[57099],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var r=a.createContext({}),d=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(r.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=i,h=u["".concat(r,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s[u]="string"==typeof e?e:i,l[1]=s;for(var d=2;d<o;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},99691:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));const o={title:"Packit as Fedora dist-git CI",authors:"mfocko"},l=void 0,s={unversionedId:"integrations/fedora-ci/index",id:"integrations/fedora-ci/index",title:"Packit as Fedora dist-git CI",description:"Related links:",source:"@site/research/integrations/fedora-ci/index.md",sourceDirName:"integrations/fedora-ci",slug:"/integrations/fedora-ci/",permalink:"/research/integrations/fedora-ci/",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/integrations/fedora-ci/index.md",tags:[],version:"current",frontMatter:{title:"Packit as Fedora dist-git CI",authors:"mfocko"},sidebar:"autogenerated",previous:{title:"Automation of the downstream part of the workflow",permalink:"/research/integrations/downstream/"},next:{title:"GitLab integration",permalink:"/research/integrations/gitlab/"}},r={},d=[{value:"Current Fedora CI",id:"current-fedora-ci",level:2},{value:"Zuul as a parallel CI",id:"zuul-as-a-parallel-ci",level:3},{value:"Possible implementation",id:"possible-implementation",level:2},{value:"SRPM build",id:"srpm-build",level:3},{value:"Koji scratch build",id:"koji-scratch-build",level:3},{value:"RPM linting, inspect and installability test",id:"rpm-linting-inspect-and-installability-test",level:3},{value:"Installability test",id:"installability-test",level:4},{value:"Testing Farm",id:"testing-farm",level:3},{value:"Technical issues / questions",id:"technical-issues--questions",level:2},{value:"Load balancing",id:"load-balancing",level:3},{value:"Default config",id:"default-config",level:4},{value:"SRPM build",id:"srpm-build-1",level:3},{value:"Propagating Koji build",id:"propagating-koji-build",level:3},{value:"RPM for Testing Farm",id:"rpm-for-testing-farm",level:3},{value:"STI tests",id:"sti-tests",level:3},{value:"Side tags",id:"side-tags",level:3},{value:"Upstream vs Downstream",id:"upstream-vs-downstream",level:3},{value:"User perspective",id:"user-perspective",level:2},{value:"Fedora",id:"fedora",level:3},{value:"Fedora SIGs",id:"fedora-sigs",level:3},{value:"CentOS SIGs",id:"centos-sigs",level:3},{value:"Difficulties depending on the forge",id:"difficulties-depending-on-the-forge",level:2},{value:"Pagure",id:"pagure",level:3},{value:"GitLab",id:"gitlab",level:3},{value:"Upstream vs downstream",id:"upstream-vs-downstream-1",level:4},{value:"Forgejo",id:"forgejo",level:3},{value:"Notes from the arch discussion",id:"notes-from-the-arch-discussion",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Auto-merging / gating",id:"auto-merging--gating",level:3},{value:"Follow-up cards",id:"follow-up-cards",level:2}],p={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Related links:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/issues/2453"},"Epic")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/packit/packit-service/issues/2462"},"Research issue"))),(0,i.kt)("h2",{id:"current-fedora-ci"},"Current Fedora CI"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Koji scratch build"),(0,i.kt)("li",{parentName:"ol"},"Installability"),(0,i.kt)("li",{parentName:"ol"},"tmt (if plans are present)")),(0,i.kt)("h3",{id:"zuul-as-a-parallel-ci"},"Zuul as a parallel CI"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Builts SRPM"),(0,i.kt)("li",{parentName:"ol"},"Submits Koji scratch build"),(0,i.kt)("li",{parentName:"ol"},"Runs RPM linter"),(0,i.kt)("li",{parentName:"ol"},"Runs RPM inspect"),(0,i.kt)("li",{parentName:"ol"},"Tests install"),(0,i.kt)("li",{parentName:"ol"},"Runs tmt")),(0,i.kt)("h2",{id:"possible-implementation"},"Possible implementation"),(0,i.kt)("h3",{id:"srpm-build"},"SRPM build"),(0,i.kt)("p",null,"Ideally kept identical. Packit should not be involved in any way that can affect\nthe results of the SRPM build, i.e., just run ",(0,i.kt)("inlineCode",{parentName:"p"},"fedpkg srpm")," and be done with it."),(0,i.kt)("p",null,"This can be done within the sandbox as we do for non-scratch builds. However it\nmight need some tweaking as Packit has specific worfklow."),(0,i.kt)("admonition",{title:"Questions from review",type:"note"},(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},"This is a very interesting point -- do we want to be consistent as much as\npossible with Packit's upstream implementation or be close to the real Fedora\nbuilds."),(0,i.kt)("p",{parentName:"blockquote"},"I agree the suggested approach ",(0,i.kt)("inlineCode",{parentName:"p"},"fedpkg srpm")," makes more sense from the user\nperspective since this results in the production-like result.")),(0,i.kt)("p",{parentName:"admonition"},"With respect to downstream, I would be definitely voting for avoiding adjusting\nthe SRPM creation. Adjusting the SRPM creation in any way enables the chance of\ninconsistencies, i.e., I have green CI, but once I merge it doesn't build. I\ndon't think many maintainers would like that :D"),(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},"How do we want to handle sources? (Do we want to continue with the current\ntrend of requiring sources in the lookaside cache?)")),(0,i.kt)("p",{parentName:"admonition"},"I'm not really sure, but if we go deep into the possible improvements then it's\nquite possible that most of this initiative will not be achievable :)")),(0,i.kt)("h3",{id:"koji-scratch-build"},"Koji scratch build"),(0,i.kt)("p",null,"We are already submitting scratch builds for merged PRs, if configured. This\nwould just extend the functionality to the non-merged PRs (with need to provide\nthe SRPM)."),(0,i.kt)("admonition",{title:"Review",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"And we have scratch build functionality for upstream PRs available as well if\nthis is anyhow relevant.")),(0,i.kt)("h3",{id:"rpm-linting-inspect-and-installability-test"},"RPM linting, inspect and installability test"),(0,i.kt)("p",null,"There are premade tmt plans that we can run."),(0,i.kt)("admonition",{title:"Question",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Should these be run in parallel or sequentially and fail on first?"),(0,i.kt)("p",{parentName:"admonition"},"Follow-up question from review:"),(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},"Are some of these somehow dependent?")),(0,i.kt)("p",{parentName:"admonition"},"From the excerpt here (linting, installability, tests), it feels like linting\nshould not be a hard blocker. I've seen the installability tests fail (even if\ntests passed) just because of the network flakes and such, so\u2026"),(0,i.kt)("p",{parentName:"admonition"},"In the sense of saving the resources, it definitely makes sense to make ",(0,i.kt)("em",{parentName:"p"},"full"),"\n",(0,i.kt)("em",{parentName:"p"},"test suite")," dependent on the ",(0,i.kt)("em",{parentName:"p"},"installability"),", but if it's flakey, it's just\nannoying.")),(0,i.kt)("h4",{id:"installability-test"},"Installability test"),(0,i.kt)("p",null,"Installability test run by Fedora CI triggers Testing Farm and uses the\nfollowing tmt plan: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/fedora-ci/installability-pipeline"},"https://github.com/fedora-ci/installability-pipeline")),(0,i.kt)("p",null,"Installability test run by Zuul CI is done in the Zuul itself."),(0,i.kt)("h3",{id:"testing-farm"},"Testing Farm"),(0,i.kt)("p",null,"Different form of request than for upstream jobs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "2fdee1a0-0746-45ad-ad0c-d3ec8833630b",\n  "user_id": "c4af7afe-b95e-4cf1-b989-9c458f0eecf0",\n  "token_id": "c4af7afe-b95e-4cf1-b989-9c458f0eecf0",\n  "test": {\n    "fmf": {\n      "url": "https://src.fedoraproject.org/forks/packit-stg/rpms/packit",\n      "ref": "0d4dfcfcc2a708f06c65b80404cc022e7bf6bead",\n      "merge_sha": null,\n      "path": ".",\n      "name": null,\n      "settings": null,\n      "plan_filter": null,\n      "test_name": null,\n      "test_filter": null\n    },\n    "script": null,\n    "sti": null\n  },\n  "state": "complete",\n  "environments_requested": [\n    {\n      "arch": "x86_64",\n      "os": {\n        "compose": "CentOS-Stream-9"\n      },\n      "pool": null,\n      "variables": {\n        "KOJI_TASK_ID": "123014869"\n      },\n      "secrets": null,\n      "artifacts": [\n        {\n          "id": "123014869",\n          "type": "fedora-koji-build",\n          "packages": null,\n          "install": true,\n          "order": 50\n        }\n      ],\n      "settings": null,\n      "tmt": {\n        "context": {\n          "arch": "x86_64",\n          "distro": "centos-stream-9",\n          "initiator": "fedora-ci",\n          "trigger": "commit"\n        },\n        "environment": null\n      },\n      "hardware": null,\n      "kickstart": null\n    }\n  ],\n  "notes": [\n    {\n      "level": "info",\n      "message": "tf-tmt/dispatch-1725615078-80d05f05"\n    }\n  ],\n  "result": {\n    "summary": null,\n    "overall": "passed",\n    "xunit": "\u2026",\n    "xunit_url": "https://artifacts.dev.testing-farm.io/2fdee1a0-0746-45ad-ad0c-d3ec8833630b/results.xml"\n  },\n  "run": {\n    "console": null,\n    "stages": null,\n    "artifacts": "https://artifacts.dev.testing-farm.io/2fdee1a0-0746-45ad-ad0c-d3ec8833630b"\n  },\n  "settings": null,\n  "user": {\n    "webpage": null\n  },\n  "queued_time": 6.892783,\n  "run_time": 1207.608357,\n  "created": "2024-09-06T09:31:17.471815",\n  "updated": "2024-09-06T09:31:17.471844"\n}\n')),(0,i.kt)("p",null,"Most notable differences:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"RPMs are provided from Koji scratch build (following Fedora CI, which is\neasier than self-hosting)"),(0,i.kt)("li",{parentName:"ul"},"chroot is defined by the branch rather than config")),(0,i.kt)("h2",{id:"technical-issues--questions"},"Technical issues / questions"),(0,i.kt)("h3",{id:"load-balancing"},"Load balancing"),(0,i.kt)("p",null,"Preferably it would be ideal to have separate deployment for the \u201cdist-git only\u201d\nservice as handling all Fedora packages would definitely increase traffic and\ncould cause issues with running as both Fedora CI and original Packit Service."),(0,i.kt)("admonition",{title:"Question from review",type:"note"},(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},"Would this mean ",(0,i.kt)("inlineCode",{parentName:"p"},"dist-git CI")," and the current Packit? Or, Packit upstream and\nPackit Fedora automation (including Koji, Bodhi and maybe also propose/pull)?")),(0,i.kt)("p",{parentName:"admonition"},"I've been thinking about a way to split this in some reasonable matter :D Based\non the way Packit operates, the most reasonable would be splitting the\nupstream/downstream parts, i.e.,"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Packit Service (handles upstream ",(0,i.kt)("strong",{parentName:"li"},"and")," ",(0,i.kt)("inlineCode",{parentName:"li"},"propose-downstream")," (as it is\ntriggered by upstream))"),(0,i.kt)("li",{parentName:"ul"},"\u201cPackit as Fedora CI\u201d (handles downstream ",(0,i.kt)("strong",{parentName:"li"},"and")," ",(0,i.kt)("inlineCode",{parentName:"li"},"pull-from-upstream"),")")),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"However")," I rant somewhere about the config in the dist-git and default config\n:D and this complicates things a lot :/ Maybe we could treat PRs in a special\nway for the ",(0,i.kt)("em",{parentName:"p"},"downstream PRs")," (Koji + TF)."),(0,i.kt)("hr",{parentName:"admonition"}),(0,i.kt)("p",{parentName:"admonition"},"feels like whack-a-mole\u2026")),(0,i.kt)("h4",{id:"default-config"},"Default config"),(0,i.kt)("p",null,"Having a separate instance would also open up a door to a potential \u201cdefault\nconfig\u201d which could be different to our current one (SRPM, Copr build, TF) and\nmore tailored to the needs of the Fedora CI."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"TODO"),":"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Maybe have a default config configurable?\nFor context, we have ",(0,i.kt)("a",{parentName:"li",href:"https://packit.dev/docs/guide#jobs"},"default jobs")," on\nthe upstream in case there are no jobs specified. This could be leveraged\nto provide some ",(0,i.kt)("strong",{parentName:"li"},"reasonable")," defaults for Koji builds and Testing Farm\nruns on the downstream part.")),(0,i.kt)("h3",{id:"srpm-build-1"},"SRPM build"),(0,i.kt)("p",null,"For Zuul is run via ",(0,i.kt)("inlineCode",{parentName:"p"},"fedpkg srpm"),". Then it's provided for the Koji build."),(0,i.kt)("p",null,"Packit should not interefere with the way the SRPM gets built."),(0,i.kt)("h3",{id:"propagating-koji-build"},"Propagating Koji build"),(0,i.kt)("p",null,"As of now, the sources need to be already uploaded in the lookaside cache to run\nthe RPM build in general (either Fedora CI or Zuul CI). Given that merges in\ndist-git are handled as fast-forward, it should be possible to just tag the\nbuild from the PR instead of rebuilding again (with the same sources and\nspecfile)."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This is definitely a ",(0,i.kt)("em",{parentName:"p"},"nice-to-have"),", a follow-up.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"TODO"),":"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Does it make sense to open a follow-up already, even if there's no PoC\nyet?")),(0,i.kt)("h3",{id:"rpm-for-testing-farm"},"RPM for Testing Farm"),(0,i.kt)("p",null,"Zuul provides its own (self-hosted) repository. Fedora CI just refers to the\nscratch build."),(0,i.kt)("p",null,"Self-hosting the repository is not preferred, following the Fedora CI approach\nmight be the best."),(0,i.kt)("h3",{id:"sti-tests"},"STI tests"),(0,i.kt)("p",null,"Older format of tests that can be run via Zuul. Based on the TF API, Testing\nFarm supports it too. Requesting STI tests from the Testing Farm should be\npossible, detection of their presence lies on Packit."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"TODO"),":"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Should we support the STI tests?")),(0,i.kt)("h3",{id:"side-tags"},"Side tags"),(0,i.kt)("p",null,"Support for side tags has been requested in the original thread with the\nproposal. This may be required for \u201cpackaging workflows\u201d that are more complex,\ne.g., Rust packaging (dependencies that are built as separate packages)."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"As a maintainer, I should be able to specify the dependencies of my package\nthat need to be verified with any proposed update.")),(0,i.kt)("h3",{id:"upstream-vs-downstream"},"Upstream vs Downstream"),(0,i.kt)("p",null,"By default, we sync the Packit config to the downstream. This can cause a\nconflict when Packit runs as a Fedora CI, since the config would override any\ndefaults that we would've set."),(0,i.kt)("p",null,"Additionally, there needs to be a way to distinguish between upstream/downstream\njobs anyways, cause Testing Farm runs on the downstream install RPMs from the\nKoji rather than Copr."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"It would probably be easier to run stateless as the current CI, utilizing only\ndefaults and ignoring any Packit config that is present."),(0,i.kt)("p",{parentName:"admonition"},"It might be possible to \u201cabuse\u201d the ",(0,i.kt)("inlineCode",{parentName:"p"},"packit_instances")," key in the config to\ndifferentiate the normal deployments (",(0,i.kt)("inlineCode",{parentName:"p"},"prod"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"stg"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"dev"),") from a potential\nFedora CI deployment. OTOH together with syncing the upstream configs to\ndownstream, it may cause an incomprehensible mess.")),(0,i.kt)("h2",{id:"user-perspective"},"User perspective"),(0,i.kt)("h3",{id:"fedora"},"Fedora"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"As a maintainer I'd like to open a PR and have automated RPM build to verify\nthat, whatever I'm submitting, can be"),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},"built,"),(0,i.kt)("li",{parentName:"ul"},"installed, and"),(0,i.kt)("li",{parentName:"ul"},"passes the test suite.")),(0,i.kt)("p",{parentName:"blockquote"},"Adding and configuring the tests in the dist-git should be my responsibility.\nI don't want the CI to be blocking, just annoying\u2026")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"TODO"),":"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Packit should be able to run without any repo-specific configuration, but\nthere should be a way to override, if needed.")),(0,i.kt)("h3",{id:"fedora-sigs"},"Fedora SIGs"),(0,i.kt)("p",null,"AFAIK the repositories are hosted on the Fedora dist-git, therefore they should\nbe handled by the Fedora CI already, the experience should be similar (if not\nthe same) to the regular Fedora packages."),(0,i.kt)("h3",{id:"centos-sigs"},"CentOS SIGs"),(0,i.kt)("p",null,"As there is no streamlined CI for the CentOS SIGs, adoption would allow\nrelatively simple integration with the Testing Farm."),(0,i.kt)("h2",{id:"difficulties-depending-on-the-forge"},"Difficulties depending on the forge"),(0,i.kt)("h3",{id:"pagure"},"Pagure"),(0,i.kt)("p",null,"Mainly reliability, it would require retries. Together with normal Packit CI\nworkflows, considerable overhead."),(0,i.kt)("h3",{id:"gitlab"},"GitLab"),(0,i.kt)("p",null,"ogr has a support for GitLab already, reporting sucks, but it's not a blocking\nissue (due to the lack of upstream users, the priority of improving the UX has\nbeen lowered)."),(0,i.kt)("admonition",{title:"GitLab UX",type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"There are limitations on how Packit can improve the user experience on GitLab."),(0,i.kt)("p",{parentName:"admonition"},"GitLab is focused on providing the best user experience when using their own\nGitLab CI, external services must either just report commit statuses (unlike on\nGitHub that allows Check Suites and Check Runs), or integrate into the GitLab\ncodebase itself."),(0,i.kt)("p",{parentName:"admonition"},"This hinders the user experience significantly."),(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},"Switching from Pagure to GitLab sounds effectively like getting rid of the\nstability issues while maintaining the poor UX."))),(0,i.kt)("h4",{id:"upstream-vs-downstream-1"},"Upstream vs downstream"),(0,i.kt)("p",null,"Difference between upstream and downstream events can be told easily by source\nof the webhooks (downstream come from Fedora Messaging, upstream directly from\nGitLab instances)."),(0,i.kt)("h3",{id:"forgejo"},"Forgejo"),(0,i.kt)("p",null,"Forgejo is an open-source git forge that seems to be a viable alternative to\nboth Pagure and GitLab. There is no support for the forgejo in ogr as of now,\nadditionally to ogr support we would need to adjust parsing of the webhooks, but\nit can completely replace the Pagure (as Fedora dist-git is the only Pagure\ninstance used by Packit)."),(0,i.kt)("h2",{id:"notes-from-the-arch-discussion"},"Notes from the arch discussion"),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"For the beginning we should just handle the packages that are configured."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"This means that we don't want to handle ",(0,i.kt)("em",{parentName:"p"},"all")," Fedora packages for the ",(0,i.kt)("em",{parentName:"p"},"PoC/MVP"),".")),(0,i.kt)("h3",{id:"auto-merging--gating"},"Auto-merging / gating"),(0,i.kt)("p",null,"During the implementation, we should keep in mind the possibility of polishing\nthe process to eventually allow for auto-merging with improved gating (TF is\nhelpful in this case a lot)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"TODO"),":"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Consider this in the design."),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Should not cause any annoyance for ",(0,i.kt)("em",{parentName:"li"},"proven packagers"))),(0,i.kt)("admonition",{title:"Review",type:"note"},(0,i.kt)("p",{parentName:"admonition"},"There's an ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/packit/packit-service/issues/1723"},"RFE")," for\na workflow that involves auto-landing PRs in the Fedora dist-git.")),(0,i.kt)("h2",{id:"follow-up-cards"},"Follow-up cards"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Allow triggering of the Testing Farm with Koji build (instead of the Copr\nbuild)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Try to unify ",(0,i.kt)("em",{parentName:"li"},"installability pipeline")," with the tmt plan for install test\nthat we already have"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Packit needs to be able to deduce the build target based on the branch\nrather than config (i.e., Packit triggered by push to ",(0,i.kt)("inlineCode",{parentName:"li"},"f40")," branch in the\ndist-git should run Testing Farm for the F40; this ",(0,i.kt)("strong",{parentName:"li"},"can't")," be deduced\nfrom the config)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Allow Packit to have customizable default config (more details above)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Allow Packit to run without any config (utilizing the previous point)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","After PoC and final decision, deploy a separate instance to handle only\nFedora CI queue"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Allow triggering of the Testing Farm ",(0,i.kt)("strong",{parentName:"li"},"STI")," tests with Koji build (or in\ngeneral)")))}c.isMDXComponent=!0}}]);