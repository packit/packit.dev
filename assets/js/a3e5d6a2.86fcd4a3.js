"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[2568],{3905:(t,e,i)=>{i.d(e,{Zo:()=>l,kt:()=>f});var n=i(67294);function r(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function o(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function a(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?o(Object(i),!0).forEach((function(e){r(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function s(t,e){if(null==t)return{};var i,n,r=function(t,e){if(null==t)return{};var i,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)i=o[n],e.indexOf(i)>=0||(r[i]=t[i]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)i=o[n],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(r[i]=t[i])}return r}var c=n.createContext({}),p=function(t){var e=n.useContext(c),i=e;return t&&(i="function"==typeof t?t(e):a(a({},e),t)),i},l=function(t){var e=p(t.components);return n.createElement(c.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var i=t.components,r=t.mdxType,o=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),d=p(i),g=r,f=d["".concat(c,".").concat(g)]||d[g]||u[g]||o;return i?n.createElement(f,a(a({ref:e},l),{},{components:i})):n.createElement(f,a({ref:e},l))}));function f(t,e){var i=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=i.length,a=new Array(o);a[0]=g;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s[d]="string"==typeof t?t:r,a[1]=s;for(var p=2;p<o;p++)a[p]=i[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}g.displayName="MDXCreateElement"},60821:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=i(87462),r=(i(67294),i(3905));const o={title:"init",sidebar_position:1},a="packit dist-git init",s={unversionedId:"cli/dist-git/init",id:"cli/dist-git/init",title:"init",description:"Create a Packit's dist-git configuration for release syncing to Fedora.",source:"@site/docs/cli/dist-git/init.md",sourceDirName:"cli/dist-git",slug:"/cli/dist-git/init",permalink:"/docs/cli/dist-git/init",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/cli/dist-git/init.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"init",sidebar_position:1},sidebar:"autogenerated",previous:{title:"dist-git",permalink:"/docs/category/dist-git"},next:{title:"source-git",permalink:"/docs/category/source-git"}},c={},p=[{value:"Help",id:"help",level:2}],l={toc:p},d="wrapper";function u(t){let{components:e,...i}=t;return(0,r.kt)(d,(0,n.Z)({},l,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"packit-dist-git-init"},(0,r.kt)("inlineCode",{parentName:"h1"},"packit dist-git init")),(0,r.kt)("p",null,"Create a Packit's dist-git configuration for release syncing to Fedora."),(0,r.kt)("h2",{id:"help"},"Help"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Usage: packit dist-git init [OPTIONS] [OTHER_ARGS]... [PATH_OR_URL]\n\n  Create the initial Packit dist-git configuration for Fedora release syncing\n  based on the input parameters.\n\n  This command adds `.packit.yaml` file to the dist-git repository either:\n\n  \b 1. specified by path (defaults to current working directory)\n\n  \b 2. specified by URL (`https://src.fedoraproject.org/rpms/<package>`) -\n  clones the repository and adds the config in there. Ideally use this with\n  --clone-path option, otherwise the repository is cloned to a temporary\n  directory that is then removed.\n\n  By default, all 3 jobs (`pull_from_upstream`, `koji_build`, `bodhi_update`)\n  for release syncing are configured. You can use --no-pull, --no-koji-build\n  or --no-bodhi-update  options to not add some of the jobs (at the moment,\n  Bodhi updates are created only for  Koji builds built by Packit, therefore\n  --no-koji-build implies also no Bodhi update job).\n\n  You can either create the Packit config file only locally (default), or\n  create a pull request (using --create-pr option) or push directly to the\n  dist-git's default branch (--push-to-distgit).\n\n  See 'packit init', if you want to initialize a repository as an upstream\n  repo.\n\n  Examples\n\n  Local generation for dist-git repo in current working directory:\n\n      $ packit dist-git init --upstream-git-url https://github.com/packit/packit .\n\n  Local generation for dist-git repo specified by URL that will be cloned to\n  `<my-package>` dir:\n\n      $ packit dist-git init --upstream-git-url https://github.com/packit/packit --clone-path\n      `<my-package>` https://src.fedoraproject.org/rpms/packit\n\n  Using arbitrary configuration options that are not provided as the command\n  options (the working dir needs to be specified in this case):\n\n      $ packit dist-git init --upstream-git-url https://github.com/packit/packit\n      --my-option option-value .\n\nOptions:\n  --upstream-git-url TEXT         URL to the upstream GIT repository\n  --upstream-git-url-command TEXT\n                                  Command to get the URL of the upstream git\n                                  repository\n  --upstream-tag-template TEXT    Template applied for upstream tags if they\n                                  differ from versions. E.g. 'v{version}'\n  --upstream-tag-include TEXT     Python regex used for filtering upstream\n                                  tags to include.\n  --upstream-tag-exclude TEXT     Python regex used for filtering upstream\n                                  tags to exclude.\n  --version-update-mask TEXT      Python regex used for comparison of the old\n                                  and the new version.\n  --issue-repository TEXT         URL of a git repository that can be used for\n                                  reporting errors in form of issues.\n  --no-pull                       Do not include the pull from upstream job in\n                                  the config\n  --no-koji-build                 Do not include the Koji build job in the\n                                  config\n  --allowed-committers TEXT       Comma separated list of allowed_committers\n                                  used for Koji builds\n  --allowed-pr-authors TEXT       Comma separated list of allowed_pr_authors\n                                  used for Koji builds\n  --no-bodhi-update               Do not include the Bodhi update job in the\n                                  config\n  --actions-file FILE             Yaml file with 'actions' that should be used\n                                  for the config\n  --dist-git-branches TEXT        Comma separated list of target branches in\n                                  dist-git to release into. (defaults to\n                                  rawhide)\n  -p, --push-to-distgit           Push the generated Packit config to the\n                                  dist-git repository's rawhide\n  -c, --create-pr                 Create a PR with generated Packit config\n  -f, --force                     Reset config to default if already exists.\n  --clone-path TEXT               Path to clone the dist-git repo into (if\n                                  path_or_url is URL). Otherwise clone the\n                                  repo in a temporary directory.\n  --commit-msg TEXT               Commit message used when creating a PR (also\n                                  for the title) or pushing to dist-git.\n                                  Default: 'Add Packit configuration for\n                                  automating release syncing'\n  -h, --help                      Show this message and exit.\n")))}u.isMDXComponent=!0}}]);