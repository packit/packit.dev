"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[40285],{7632:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var i=n(58168),r=(n(96540),n(15680));const a={title:"Retriggering",sidebar_position:7},o=void 0,s={unversionedId:"retriggering",id:"retriggering",title:"Retriggering",description:"Comments",source:"@site/docs/retriggering.md",sourceDirName:".",slug:"/retriggering",permalink:"/docs/retriggering",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/retriggering.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Retriggering",sidebar_position:7},sidebar:"autogenerated",previous:{title:"Examples",permalink:"/docs/configuration/examples"},next:{title:"Packit CLI",permalink:"/docs/cli/"}},l={},p=[{value:"Comments",id:"comments",level:2},{value:"copr_build",id:"copr_build",level:3},{value:"propose_downstream",id:"propose_downstream",level:3},{value:"tests",id:"tests",level:3},{value:"Running tests with builds from another pull request",id:"running-tests-with-builds-from-another-pull-request",level:4},{value:"Running tests with a specific identifier",id:"running-tests-with-a-specific-identifier",level:4},{value:"Running a group of tests with the same label",id:"running-a-group-of-tests-with-the-same-label",level:4},{value:"Running tests with specific environment variables",id:"running-tests-with-specific-environment-variables",level:4},{value:"upstream_koji_build",id:"upstream_koji_build",level:3},{value:"vm_image_build",id:"vm_image_build",level:3},{value:"pull_from_upstream",id:"pull_from_upstream",level:3},{value:"koji_build",id:"koji_build",level:3},{value:"bodhi_update",id:"bodhi_update",level:3},{value:"GitHub Checks UI",id:"github-checks-ui",level:2}],u={toc:p},g="wrapper";function c(e){let{components:t,...a}=e;return(0,r.yg)(g,(0,i.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"comments"},"Comments"),(0,r.yg)("p",null,"In general, you can put a ",(0,r.yg)("inlineCode",{parentName:"p"},"/packit <job-you-want-to-trigger>")," comment\nto trigger the Packit job manually."),(0,r.yg)("h3",{id:"copr_build"},"copr_build"),(0,r.yg)("p",null,"For retriggering the ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/upstream/copr_build"},(0,r.yg)("inlineCode",{parentName:"a"},"copr_build"))," jobs, Packit is able to trigger new builds based on a pull request comment:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit copr-build\n")),(0,r.yg)("p",null,"or the shorter version"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit build\n")),(0,r.yg)("p",null,"So whenever you run into a flake or feel like you want to retrigger, just type\nthat comment into the PR and enjoy some fine, fresh builds."),(0,r.yg)("p",null,"The same can be used to retrigger jobs configured with either ",(0,r.yg)("inlineCode",{parentName:"p"},"commit")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"release"),"\ntrigger by specifying the respective arguments, using commit comments:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit build --commit <branch-name>\n")),(0,r.yg)("p",null,"or"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit build --release <tag-name>\n")),(0,r.yg)("p",null,"If no additional arguments are provided, Packit defaults to the commit trigger on the repository's\ndefault branch. The job will execute only if a corresponding job configuration exists for the\nspecified branch or release and if the commit is included on the specified branch or tag."),(0,r.yg)("p",null,"It is also possible to re-trigger only the failed builds using a pull request comment"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit rebuild-failed\n")),(0,r.yg)("h3",{id:"propose_downstream"},"propose_downstream"),(0,r.yg)("p",null,"For retriggering the ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/upstream/propose_downstream"},(0,r.yg)("inlineCode",{parentName:"a"},"propose_downstream"))," jobs, users with write or admin permissions to\nthe repository can retrigger an\nupdate via a comment in any open issue in the upstream repository:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit propose-downstream\n")),(0,r.yg)("h3",{id:"tests"},"tests"),(0,r.yg)("p",null,"For retriggering the ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/upstream/tests"},(0,r.yg)("inlineCode",{parentName:"a"},"tests"))," jobs, you can use a pull-request comment:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit test\n")),(0,r.yg)("p",null,"The same can be used to retrigger jobs configured with either ",(0,r.yg)("inlineCode",{parentName:"p"},"commit")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"release"),"\ntrigger by specifying the respective arguments, using commit comments:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit test --commit <branch-name>\n")),(0,r.yg)("p",null,"or"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit test --release <tag-name>\n")),(0,r.yg)("p",null,"If no additional arguments are provided, Packit defaults to the commit trigger on the repository's\ndefault branch. The job will execute only if a corresponding job configuration exists for the\nspecified branch or release and if the commit is included on the specified branch or tag."),(0,r.yg)("p",null,"And to re-trigger only the failed tests in pull request, you can use"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit retest-failed\n")),(0,r.yg)("h4",{id:"running-tests-with-builds-from-another-pull-request"},"Running tests with builds from another pull request"),(0,r.yg)("p",null,"It is also possible to run the tests with Copr builds built by Packit in another pull request\n(in a different repository). This can be useful when you are working on a change that spans\nmultiple projects and needs to be tested together.\nThese tests are possible to trigger only via a comment containing the argument specifying the pull request as:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit test <namespace>/<repo>#<pr_id>\n")),(0,r.yg)("p",null,'The requirement is that in the specified PR, there were recent successful builds created by Packit\nfor the targets configured in the repository with the "main" pull request.\nThis is a new feature, so the behaviour may be adjusted in the future.\nPlease reach out back to us for help or with your suggestions.'),(0,r.yg)("h4",{id:"running-tests-with-a-specific-identifier"},"Running tests with a specific identifier"),(0,r.yg)("p",null,"It is possible to run a specific job via ",(0,r.yg)("inlineCode",{parentName:"p"},"/packit test")," command.\nThe user just needs to specify the argument ",(0,r.yg)("inlineCode",{parentName:"p"},"--identifier <job_identifier>")," and Packit will trigger only the job with this identifier.\nThe whole command should look like this: ",(0,r.yg)("inlineCode",{parentName:"p"},"/packit test --identifier my-job-id"),".\nYou can also configure ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration#default_identifier"},(0,r.yg)("inlineCode",{parentName:"a"},"test_command.default_identifier"))," to allow commonly used jobs\nto be triggered without the need for manual specification."),(0,r.yg)("h4",{id:"running-a-group-of-tests-with-the-same-label"},"Running a group of tests with the same label"),(0,r.yg)("p",null,"Users can trigger a specific group of jobs that has a specific value in the list of ",(0,r.yg)("inlineCode",{parentName:"p"},"labels")," option.\nThe command to pick up these jobs is ",(0,r.yg)("inlineCode",{parentName:"p"},"/packit test --labels regression,upgrade")," where either ",(0,r.yg)("inlineCode",{parentName:"p"},"regression")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"upgrade")," must be present in ",(0,r.yg)("inlineCode",{parentName:"p"},"labels")," option for the job.\nThe labels should be in the format of comma-separated string.\nYou can also configure ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration#default_labels"},(0,r.yg)("inlineCode",{parentName:"a"},"test_command.default_labels"))," to allow commonly used job combinations\nto be triggered without the need for manual specification."),(0,r.yg)("h4",{id:"running-tests-with-specific-environment-variables"},"Running tests with specific environment variables"),(0,r.yg)("p",null,"From time to time, you may need to pass specific environment variables to your jobs.\nTo achieve this, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"--env")," option in the comment command ",(0,r.yg)("inlineCode",{parentName:"p"},"/packit test"),", which passes environment variables to Testing Farm.\nYou can set as many environment variables as you want; you just need to pass ",(0,r.yg)("inlineCode",{parentName:"p"},"--env "),"for each one.\nFor example, you can use the following command ",(0,r.yg)("inlineCode",{parentName:"p"},"/packit test --env MY_ENV=test --env MY_ENV_2=test_2"),".\nThis command allows you to use ",(0,r.yg)("inlineCode",{parentName:"p"},"MY_ENV")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"MY_ENV_2")," in Testing Farm jobs.\nYou can also unset an environment variable by not setting its value like ",(0,r.yg)("inlineCode",{parentName:"p"},"/packit test --env MY_ENV="),"."),(0,r.yg)("h3",{id:"upstream_koji_build"},"upstream_koji_build"),(0,r.yg)("p",null,"For retriggering the ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/upstream/upstream_koji_build"},(0,r.yg)("inlineCode",{parentName:"a"},"upstream_koji_build"))," jobs, you can\nagain use a pull-request comment:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit upstream-koji-build\n")),(0,r.yg)("h3",{id:"vm_image_build"},"vm_image_build"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/upstream/vm_image_build"},"VM Image builds")," are not triggered automatically at all.\nTo trigger them, users with write access to the repository need to post a pull-request comment:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit vm-image-build\n")),(0,r.yg)("p",null,"every time."),(0,r.yg)("h3",{id:"pull_from_upstream"},"pull_from_upstream"),(0,r.yg)("p",null,"For retriggering the ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/downstream/pull_from_upstream"},(0,r.yg)("inlineCode",{parentName:"a"},"pull_from_upstream"))," jobs, packagers can retrigger the job\nvia a comment in any dist-git pull request:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit pull-from-upstream\n")),(0,r.yg)("p",null,"This will take the Packit configuration file from the default branch of the dist-git\nrepository (",(0,r.yg)("inlineCode",{parentName:"p"},"rawhide"),"), same as if the job was triggered by a new release.\nYou can monitor the job in ",(0,r.yg)("a",{parentName:"p",href:"https://dashboard.packit.dev/jobs/pull-from-upstreams"},"Packit Dashboard"),".\nTo use the configuration file from the dist-git pull request you are commenting on, you can add an argument:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit pull-from-upstream --with-pr-config\n")),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"pull-from-upstream")," automatically handles the Bugzilla created by Upstream\nRelease Monitoring (by default adds ",(0,r.yg)("inlineCode",{parentName:"p"},"Resolves")," to changelog/commit and exposes ",(0,r.yg)("inlineCode",{parentName:"p"},"PACKIT_RESOLVED_BUGS")," to the ",(0,r.yg)("inlineCode",{parentName:"p"},"changelog-entry")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"commit-message"),"\nactions). If you want to override the referenced resolved bug set by Packit, you can retrigger ",(0,r.yg)("inlineCode",{parentName:"p"},"pull_from_upstream")," like this:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit pull-from-upstream --resolve-bug rhbz#123,rhbz#124\n")),(0,r.yg)("h3",{id:"koji_build"},"koji_build"),(0,r.yg)("p",null,"For retriggering the ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/downstream/koji_build"},(0,r.yg)("inlineCode",{parentName:"a"},"koji_build"))," jobs, packagers can retrigger a build by a comment in a dist-git pull request:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit koji-build\n")),(0,r.yg)("p",null,"The build will be triggered for the target branch of the pull request using the most recent commit on the target branch\n(NOT the HEAD commit of the pull request). "),(0,r.yg)("p",null,"If Packit created an issue in the configured ",(0,r.yg)("inlineCode",{parentName:"p"},"issue_repository"),", you can place the same comment in that\nissue to retrigger the builds (see ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration#issue_repository"},(0,r.yg)("inlineCode",{parentName:"a"},"issue_repository"))," for details)."),(0,r.yg)("h3",{id:"bodhi_update"},"bodhi_update"),(0,r.yg)("p",null,"For retriggering the ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration/downstream/bodhi_update"},(0,r.yg)("inlineCode",{parentName:"a"},"bodhi_update"))," jobs, packagers with write access to the dist-git repository can retrigger an update by a comment in a dist-git pull request:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"/packit create-update\n")),(0,r.yg)("p",null,"The update will be triggered for the target branch of the pull request. "),(0,r.yg)("p",null,"If Packit created an issue in the configured ",(0,r.yg)("inlineCode",{parentName:"p"},"issue_repository"),", you can place the same comment in that\nissue to retrigger the updates (see ",(0,r.yg)("a",{parentName:"p",href:"/docs/configuration#issue_repository"},(0,r.yg)("inlineCode",{parentName:"a"},"issue_repository"))," for details)."),(0,r.yg)("h2",{id:"github-checks-ui"},"GitHub Checks UI"),(0,r.yg)("p",null,"In GitHub Checks interface, it is also possible to re-trigger a specific task just by clicking on ",(0,r.yg)("inlineCode",{parentName:"p"},"Re-run"),"\nfor the particular check:"),(0,r.yg)("p",null,(0,r.yg)("img",{alt:"Re-run GitHub check",src:n(74601).A,width:"471",height:"198"})),(0,r.yg)("p",null,"The button is available only for users with write permissions to the repository."))}c.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>m});var i=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=p(n),d=r,m=g["".concat(l,".").concat(d)]||g[d]||c[d]||a;return n?i.createElement(m,o(o({ref:t},u),{},{components:n})):i.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[g]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},74601:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/github-check-rerun-c22ca93d7511ad081b60ce628090008a.png"}}]);