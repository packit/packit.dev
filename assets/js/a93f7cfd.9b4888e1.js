"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[1644],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),c=o,h=d["".concat(s,".").concat(c)]||d[c]||m[c]||r;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},32899:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const r={title:"Handling of Release field in propose_downstream job",date:new Date("2023-05-23T12:00:00.000Z"),authors:"nforro",tags:["specfile","propose-downstream"]},i=void 0,l={permalink:"/posts/release-field-handling",editUrl:"https://github.com/packit/packit.dev/tree/main/posts/release-field-handling/index.md",source:"@site/posts/release-field-handling/index.md",title:"Handling of Release field in propose_downstream job",description:"We have recently made some fixes to the process of handling the Release field regarding the %autorelease macro, so let's take that opportunity to explain how it works.",date:"2023-05-23T12:00:00.000Z",formattedDate:"May 23, 2023",tags:[{label:"specfile",permalink:"/posts/tags/specfile"},{label:"propose-downstream",permalink:"/posts/tags/propose-downstream"}],readingTime:1.74,hasTruncateMarker:!0,authors:[{name:"Nikola Forr\xf3",email:"nforro@redhat.com",url:"https://github.com/nforro",imageURL:"https://github.com/nforro.png",key:"nforro"}],frontMatter:{title:"Handling of Release field in propose_downstream job",date:"2023-05-23T12:00:00.000Z",authors:"nforro",tags:["specfile","propose-downstream"]},prevItem:{title:"Introducing monorepository support",permalink:"/posts/monorepos"},nextItem:{title:"Packit's pre-commit hooks",permalink:"/posts/pre-commit-hooks"}},s={authorsImageUrls:[void 0]},p=[{value:"Maintaining <code>Release</code> manually",id:"maintaining-release-manually",level:3},{value:"Using a dummy value",id:"using-a-dummy-value",level:3},{value:"Using <code>%autorelease</code>",id:"using-autorelease",level:3},{value:"<code>%autorelease</code> in dist-git",id:"autorelease-in-dist-git",level:2}],u={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We have recently made some fixes to the process of handling the ",(0,o.kt)("inlineCode",{parentName:"p"},"Release")," field regarding the ",(0,o.kt)("inlineCode",{parentName:"p"},"%autorelease")," macro, so let's take that opportunity to explain how it works."),(0,o.kt)("p",null,"You can maintain the ",(0,o.kt)("inlineCode",{parentName:"p"},"Release")," field manually, you can use a dummy value or you can take advantage of the ",(0,o.kt)("inlineCode",{parentName:"p"},"%autorelease")," macro."),(0,o.kt)("h3",{id:"maintaining-release-manually"},"Maintaining ",(0,o.kt)("inlineCode",{parentName:"h3"},"Release")," manually"),(0,o.kt)("p",null,"You can maintain the ",(0,o.kt)("inlineCode",{parentName:"p"},"Release")," field manually as you would do downstream, for example you could bump the value every time you make changes to the spec file and reset it to ",(0,o.kt)("em",{parentName:"p"},"1")," when you release a new version."),(0,o.kt)("p",null,"Packit will not touch the value unless it detects a change in ",(0,o.kt)("inlineCode",{parentName:"p"},"Version")," and no change in ",(0,o.kt)("inlineCode",{parentName:"p"},"Release"),". In such case it will reset ",(0,o.kt)("inlineCode",{parentName:"p"},"Release")," to ",(0,o.kt)("em",{parentName:"p"},"1")," in the dist-git spec file, to ensure that the resulting NVR is not higher than any existing NVR in dist-git (that could have been already created by ",(0,o.kt)("inlineCode",{parentName:"p"},"propose_downstream")," in a different branch for example)."),(0,o.kt)("p",null,"You most likely want to enable the ",(0,o.kt)("inlineCode",{parentName:"p"},"sync_changelog")," option so that your upstream ",(0,o.kt)("inlineCode",{parentName:"p"},"%changelog")," is synchronized to dist-git as well."),(0,o.kt)("h3",{id:"using-a-dummy-value"},"Using a dummy value"),(0,o.kt)("p",null,"You can use a value like ",(0,o.kt)("em",{parentName:"p"},"0")," or ",(0,o.kt)("em",{parentName:"p"},"1")," and never touch it, Packit will make sure it is set to ",(0,o.kt)("em",{parentName:"p"},"1")," in the dist-git spec file.\nYou can do this if you don't care about upstream ",(0,o.kt)("inlineCode",{parentName:"p"},"%changelog"),", i.e. you have ",(0,o.kt)("inlineCode",{parentName:"p"},"sync_changelog")," disabled and use ",(0,o.kt)("inlineCode",{parentName:"p"},"copy_upstream_release_description")," or the ",(0,o.kt)("inlineCode",{parentName:"p"},"changelog-entry")," action to generate it downstream."),(0,o.kt)("h3",{id:"using-autorelease"},"Using ",(0,o.kt)("inlineCode",{parentName:"h3"},"%autorelease")),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"%autorelease")," macro in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Release")," field and the ",(0,o.kt)("inlineCode",{parentName:"p"},"%autochangelog")," macro in ",(0,o.kt)("inlineCode",{parentName:"p"},"%changelog"),". In this case Packit will not change anything, it will only synchronize changes made to the arguments of the macro (if any)."),(0,o.kt)("p",null,"If you want to start using ",(0,o.kt)("inlineCode",{parentName:"p"},"%autorelease")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"%autochangelog"),", you should ",(0,o.kt)("a",{parentName:"p",href:"https://docs.pagure.org/fedora-infra.rpmautospec/opting-in.html"},"do the change")," in dist-git before releasing a new version upstream and triggering ",(0,o.kt)("inlineCode",{parentName:"p"},"propose_downstream")," job, otherwise Packit will continue to set ",(0,o.kt)("inlineCode",{parentName:"p"},"Release")," to ",(0,o.kt)("em",{parentName:"p"},"1")," in the dist-git spec file."),(0,o.kt)("h2",{id:"autorelease-in-dist-git"},(0,o.kt)("inlineCode",{parentName:"h2"},"%autorelease")," in dist-git"),(0,o.kt)("p",null,"No matter how you maintain the ",(0,o.kt)("inlineCode",{parentName:"p"},"Release")," field in your upstream spec file, Packit will never overwrite the ",(0,o.kt)("inlineCode",{parentName:"p"},"%autorelease")," macro if it is used in the dist-git spec file."))}m.isMDXComponent=!0}}]);