"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[72931],{15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>y});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,y=u["".concat(s,".").concat(m)]||u[m]||f[m]||o;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},59061:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var r=n(58168),a=(n(96540),n(15680));const o={title:"SAST using OpenScanHub is here!",date:new Date("2024-08-05T06:46:18.000Z"),authors:"lbarczio",tags:["copr","srpm","sast","openscanhub","shift left"]},i=void 0,p={permalink:"/posts/openscanhub-prototype",editUrl:"https://github.com/packit/packit.dev/tree/main/posts/openscanhub-prototype/index.md",source:"@site/posts/openscanhub-prototype/index.md",title:"SAST using OpenScanHub is here!",description:"We are excited to announce a new experimental feature in our service: the integration of Static",date:"2024-08-05T06:46:18.000Z",formattedDate:"August 5, 2024",tags:[{label:"copr",permalink:"/posts/tags/copr"},{label:"srpm",permalink:"/posts/tags/srpm"},{label:"sast",permalink:"/posts/tags/sast"},{label:"openscanhub",permalink:"/posts/tags/openscanhub"},{label:"shift left",permalink:"/posts/tags/shift-left"}],readingTime:2.54,hasTruncateMarker:!0,authors:[{name:"Laura Barcziov\xe1",email:"lbarczio@redhat.com",url:"https://github.com/lbarcziova",imageURL:"https://github.com/lbarcziova.png",key:"lbarczio"}],frontMatter:{title:"SAST using OpenScanHub is here!",date:"2024-08-05T06:46:18.000Z",authors:"lbarczio",tags:["copr","srpm","sast","openscanhub","shift left"]},prevItem:{title:"Packit Flock 2024 Diary",permalink:"/posts/flock_2024_diary"},nextItem:{title:"Do you like your changelogs? What DevConf.CZ attendees think",permalink:"/posts/changelogs"}},s={authorsImageUrls:[void 0]},c=[],l={toc:c},u="wrapper";function f(e){let{components:t,...n}=e;return(0,a.yg)(u,(0,r.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"We are excited to announce a new experimental feature in our service: the integration of Static\nApplication Security Testing (SAST) using ",(0,a.yg)("a",{parentName:"p",href:"https://openscanhub.fedoraproject.org/"},"OpenScanHub"),"."),(0,a.yg)("p",null,"OpenScanHub is a service that runs various static analyzers on RPM packages - by default ",(0,a.yg)("inlineCode",{parentName:"p"},"Cppcheck"),",\n",(0,a.yg)("inlineCode",{parentName:"p"},"ShellCheck")," and the static analyzers embedded in ",(0,a.yg)("inlineCode",{parentName:"p"},"GCC"),"."),(0,a.yg)("p",null,"Let's have a look at the details of the prototype!"))}f.isMDXComponent=!0}}]);