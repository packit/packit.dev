"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[23772],{15680:(e,r,n)=>{n.d(r,{xA:()=>c,yg:()=>f});var o=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function t(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?t(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,o,a=function(e,r){if(null==e)return{};var n,o,a={},t=Object.keys(e);for(o=0;o<t.length;o++)n=t[o],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)n=t[o],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var r=o.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},c=function(e){var r=p(e.components);return o.createElement(s.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},g=o.forwardRef((function(e,r){var n=e.components,a=e.mdxType,t=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),g=a,f=u["".concat(s,".").concat(g)]||u[g]||m[g]||t;return n?o.createElement(f,l(l({ref:r},c),{},{components:n})):o.createElement(f,l({ref:r},c))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var t=n.length,l=new Array(t);l[0]=g;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<t;p++)l[p]=n[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},78207:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>p});var o=n(58168),a=(n(96540),n(15680));const t={title:"Argo Workflows",authors:"lbarcziova"},l=void 0,i={unversionedId:"workflow-engines/argo-workflows",id:"workflow-engines/argo-workflows",title:"Argo Workflows",description:"- docs//argoproj.github.io/argo-workflows/",source:"@site/research/workflow-engines/argo-workflows.md",sourceDirName:"workflow-engines",slug:"/workflow-engines/argo-workflows",permalink:"/research/workflow-engines/argo-workflows",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/workflow-engines/argo-workflows.md",tags:[],version:"current",frontMatter:{title:"Argo Workflows",authors:"lbarcziova"},sidebar:"autogenerated",previous:{title:"Airflow",permalink:"/research/workflow-engines/airflow"},next:{title:"Celery Canvas",permalink:"/research/workflow-engines/celery-canvas"}},s={},p=[],c={toc:p},u="wrapper";function m(e){let{components:r,...n}=e;return(0,a.yg)(u,(0,o.A)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"docs: ",(0,a.yg)("a",{parentName:"p",href:"https://argoproj.github.io/argo-workflows/"},"https://argoproj.github.io/argo-workflows/")),(0,a.yg)("blockquote",{parentName:"li"},(0,a.yg)("p",{parentName:"blockquote"},"Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Argo Workflows is implemented as a Kubernetes CRD (Custom Resource Definition)."),(0,a.yg)("ul",{parentName:"blockquote"},(0,a.yg)("li",{parentName:"ul"},"Define workflows where each step in the workflow is a container."),(0,a.yg)("li",{parentName:"ul"},"Model multi-step workflows as a sequence of tasks or capture the dependencies between tasks using a directed acyclic graph (DAG)."),(0,a.yg)("li",{parentName:"ul"},"Easily run compute intensive jobs for machine learning or data processing in a fraction of the time using Argo Workflows on Kubernetes.")))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"example of multi-step workflow config:"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: argoproj.io/v1alpha1\nkind: Workflow\nmetadata:\n  generateName: steps-\nspec:\n  entrypoint: hello-hello-hello\n\n  # This spec contains two templates: hello-hello-hello and whalesay\n  templates:\n    - name: hello-hello-hello\n      # Instead of just running a container\n      # This template has a sequence of steps\n      steps:\n        - - name: hello1 # hello1 is run before the following steps\n            template: whalesay\n            arguments:\n              parameters:\n                - name: message\n                  value: "hello1"\n        - - name: hello2a # double dash => run after previous step\n            template: whalesay\n            arguments:\n              parameters:\n                - name: message\n                  value: "hello2a"\n          - name: hello2b # single dash => run in parallel with previous step\n            template: whalesay\n            arguments:\n              parameters:\n                - name: message\n                  value: "hello2b"\n\n    # This is the same template as from the previous example\n    - name: whalesay\n      inputs:\n        parameters:\n          - name: message\n      container:\n        image: docker/whalesay\n        command: [cowsay]\n        args: ["{{inputs.parameters.message}}"]\n')),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"it can be specified which Role (i.e. which permissions) the ServiceAccount that Argo uses by binding a\nRole to a ServiceAccount using a RoleBinding (by default, ServiceAccount from the namespace from which it is run, which will almost always have insufficient privileges by default)")),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"All pods in a workflow run with the service account specified in workflow.spec.serviceAccountName, or if omitted, the default service account of the workflow's namespace.")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"provides UI"),(0,a.yg)("li",{parentName:"ul"},"workflows can be run using ",(0,a.yg)("inlineCode",{parentName:"li"},"Argo CLI")," or directly ",(0,a.yg)("inlineCode",{parentName:"li"},"kubectl")),(0,a.yg)("li",{parentName:"ul"},"provides an API and client libraries:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"for Python there is an auto-generated one without good documentation: ",(0,a.yg)("a",{parentName:"li",href:"https://github.com/argoproj/argo-workflows/tree/master/sdks/python"},"https://github.com/argoproj/argo-workflows/tree/master/sdks/python")),(0,a.yg)("li",{parentName:"ul"},"example:")))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"# imports\n\nmanifest = IoArgoprojWorkflowV1alpha1Workflow(\n    metadata=ObjectMeta(generate_name='hello-world-'),\n    spec=IoArgoprojWorkflowV1alpha1WorkflowSpec(\n        entrypoint='whalesay',\n        templates=[\n            IoArgoprojWorkflowV1alpha1Template(\n                name='whalesay',\n                container=Container(\n                    image='docker/whalesay:latest', command=['cowsay'], args=['hello world']))]))\n\napi_client = argo_workflows.ApiClient(configuration)\napi_instance = workflow_service_api.WorkflowServiceApi(api_client)\n\nif __name__ == '__main__':\n    api_response = api_instance.create_workflow(\n        namespace='argo',\n        body=IoArgoprojWorkflowV1alpha1WorkflowCreateRequest(workflow=manifest),\n        _check_return_type=False)\n    pprint(api_response)\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"complex architecture: ",(0,a.yg)("a",{parentName:"li",href:"https://github.com/argoproj/argo-workflows/blob/master/docs/architecture.md"},"https://github.com/argoproj/argo-workflows/blob/master/docs/architecture.md")),(0,a.yg)("li",{parentName:"ul"},"doesn't look like a fit for us - not that flexible definition of tasks that we would need")))}m.isMDXComponent=!0}}]);