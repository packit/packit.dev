"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[4773],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>u});var i=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=i.createContext({}),c=function(e){var t=i.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=c(a),g=r,u=m["".concat(p,".").concat(g)]||m[g]||d[g]||n;return a?i.createElement(u,s(s({ref:t},l),{},{components:a})):i.createElement(u,s({ref:t},l))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,s=new Array(n);s[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<n;c++)s[c]=a[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,a)}g.displayName="MDXCreateElement"},41843:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var i=a(87462),r=(a(67294),a(3905));const n={title:"CentOS Stream"},s="CentOS Stream Source-git Bot Deployment Specifics",o={unversionedId:"specifics/centos-stream-source-git",id:"specifics/centos-stream-source-git",title:"CentOS Stream",description:"Production",source:"@site/deployment/specifics/centos-stream-source-git.md",sourceDirName:"specifics",slug:"/specifics/centos-stream-source-git",permalink:"/deployment/specifics/centos-stream-source-git",draft:!1,editUrl:"https://github.com/packit/deployment/tree/main/docs/deployment/specifics/centos-stream-source-git.md",tags:[],version:"current",frontMatter:{title:"CentOS Stream"},sidebar:"autogenerated",previous:{title:"Deployment Specifics",permalink:"/deployment/category/deployment-specifics"},next:{title:"Clusters",permalink:"/deployment/specifics/clusters"}},p={},c=[{value:"Production",id:"production",level:2},{value:"<code>redhat-internal-test-package</code>",id:"redhat-internal-test-package",level:2},{value:"Staging",id:"staging",level:2},{value:"CI @ staging",id:"ci--staging",level:2},{value:"How to add another staging package (to be serviced by staging bot)",id:"how-to-add-another-staging-package-to-be-serviced-by-staging-bot",level:3},{value:"Syncing dist-git MR CI results back to a src-git MR",id:"syncing-dist-git-mr-ci-results-back-to-a-src-git-mr",level:2},{value:"prod",id:"prod",level:3},{value:"staging",id:"staging-1",level:3}],l={toc:c},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,i.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"centos-stream-source-git-bot-deployment-specifics"},"CentOS Stream Source-git Bot Deployment Specifics"),(0,r.kt)("h2",{id:"production"},"Production"),(0,r.kt)("p",null,"Production instance runs in ",(0,r.kt)("inlineCode",{parentName:"p"},"stream-prod")," project @ ",(0,r.kt)("inlineCode",{parentName:"p"},"auto-prod")," cluster.\nIt serves ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/redhat/centos-stream/src/"},"gitlab.com/redhat/centos-stream/src/ repos"),'.\nA group webhook is set to send "Merge request events" to the ',(0,r.kt)("a",{parentName:"p",href:"https://prod.stream.packit.dev/api/webhooks/gitlab"},"API"),"."),(0,r.kt)("h2",{id:"redhat-internal-test-package"},(0,r.kt)("inlineCode",{parentName:"h2"},"redhat-internal-test-package")),(0,r.kt)("p",null,"There's a package called ",(0,r.kt)("inlineCode",{parentName:"p"},"redhat-internal-test-package")," which sole purpose\nof existence is to be used for dist-git / source-git experiments."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/packit/redhat-internal-test-package"},"Upstream repository")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/redhat/centos-stream/rpms/redhat-internal-test-package"},"CentOS Stream Dist-git")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/redhat/centos-stream/src/redhat-internal-test-package"},"CentOS Stream Source-git"))),(0,r.kt)("p",null,"To see how the (production) bot works, fork the\n",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/redhat/centos-stream/src/redhat-internal-test-package"},"source-git repo"),",\ndo some update in code, commit, push to your fork,\nand create a merge request against the repo you forked from."),(0,r.kt)("p",null,"Example: ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/redhat/centos-stream/src/redhat-internal-test-package/-/merge_requests/1"},"https://gitlab.com/redhat/centos-stream/src/redhat-internal-test-package/-/merge_requests/1")),(0,r.kt)("h2",{id:"staging"},"Staging"),(0,r.kt)("p",null,"Staging instance runs in ",(0,r.kt)("inlineCode",{parentName:"p"},"stream-stg")," project @ ",(0,r.kt)("inlineCode",{parentName:"p"},"auto-prod")," cluster\n(",(0,r.kt)("a",{parentName:"p",href:"https://stg.stream.packit.dev/api/"},"API"),") and is used to serve some\nrepos in our ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/packit-service/src"},(0,r.kt)("inlineCode",{parentName:"a"},"packit-service/src/")," namespace"),".\nBecause we can't use ",(0,r.kt)("em",{parentName:"p"},"Group Webhooks")," there to set up the service for whole namespace,\ncurrently only some repos are served, for example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"open-vm-tools"),": ",(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/packit-service/src/open-vm-tools/-/merge_requests/8"},"source-git MR")," \u2192 ",(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/packit-service/rpms/open-vm-tools/-/merge_requests/18"},"dist-git MR")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"luksmeta"),": ",(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/packit-service/src/luksmeta/-/merge_requests/2"},"source-git MR")," \u2192 ",(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/packit-service/rpms/luksmeta/-/merge_requests/2"},"dist-git MR")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"glibc"))),(0,r.kt)("p",null,"There are actually real staging src-git and dist-git repos in ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/redhat/centos-stream/staging"},(0,r.kt)("inlineCode",{parentName:"a"},"redhat/centos-stream/staging")," namespace"),",\nbut we haven't used them yet, because the CI (Pipelines) there don't seem to work the same way as in prod repos,\nso we use repos in our namespace (see above), because we have at least full control over them."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/packit/deployment/blob/main/scripts/gitlab_webhook.py"},(0,r.kt)("inlineCode",{parentName:"a"},"gitlab_webhook.py")),"\ncan be used to generate secret tokens to be used for setting up webhooks."),(0,r.kt)("h2",{id:"ci--staging"},"CI @ staging"),(0,r.kt)("p",null,"In order for us to be able to experiment with syncing CI results from a dist-git MR back to a source-git MR,\nwe have a fake CI setup.\nThere's a ",(0,r.kt)("inlineCode",{parentName:"p"},".gitlab-ci.yml")," stored in both, the source-git and dist-git repos served by the staging service.\nIn a source-git repo it's in ",(0,r.kt)("inlineCode",{parentName:"p"},".distro/")," (",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/packit-service/src/open-vm-tools/-/blob/c9s/.distro/.gitlab-ci.yml"},"example"),")\nand before the service creates a dist-git MR from a source-git MR the file is synced into the dist-git repo.\nOnce the dist-git MR is created the pipeline is run based on the file and the results are seen in the dist-git MR.\nIt's stored also in the dist-git repo (",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/packit-service/rpms/open-vm-tools/-/blob/c9s/.gitlab-ci.yml"},"example"),"),\nso that the file is not in a diff of a newly created dist-git MR as a newly added file."),(0,r.kt)("h3",{id:"how-to-add-another-staging-package-to-be-serviced-by-staging-bot"},"How to add another staging package (to be serviced by staging bot)"),(0,r.kt)("p",null,"This is how I just added ",(0,r.kt)("inlineCode",{parentName:"p"},"cloud-init"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create empty ",(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/packit-service/src/cloud-init"},"https://gitlab.com/packit-service/src/cloud-init")," & ",(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/packit-service/rpms/cloud-init"},"https://gitlab.com/packit-service/rpms/cloud-init")," projects"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git clone https://gitlab.com/redhat/centos-stream/src/cloud-init.git; cd cloud-init")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git remote add stg git@gitlab.com:packit-service/src/cloud-init.git")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git push --tags -u stg")),(0,r.kt)("li",{parentName:"ul"},"in ",(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/packit-service/src/cloud-init/-/hooks"},"https://gitlab.com/packit-service/src/cloud-init/-/hooks")," add a webhook pointing to ",(0,r.kt)("a",{parentName:"li",href:"https://stg.stream.packit.dev/api/webhooks/gitlab"},"https://stg.stream.packit.dev/api/webhooks/gitlab")," with secret generated by ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/packit/deployment/blob/main/scripts/gitlab_webhook.py"},"gitlab_webhook.py")," and 'Merge request events' trigger only."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cd /your-path-to-dist-git-dir/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git clone https://gitlab.com/redhat/centos-stream/rpms/cloud-init.git; cd cloud-init")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git remote add stg git@gitlab.com:packit-service/rpms/cloud-init.git")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git push --tags -u stg")),(0,r.kt)("li",{parentName:"ul"},"login to gitlab.com as ",(0,r.kt)("inlineCode",{parentName:"li"},"packit-as-a-service-stg")," user (I know, but there's AFAIK no easier way since the detached pipeline runs in a fork) and add a webhook pointing to ",(0,r.kt)("a",{parentName:"li",href:"https://stg.stream.packit.dev/api/webhooks/gitlab"},"https://stg.stream.packit.dev/api/webhooks/gitlab")," with secret generated by ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/packit/deployment/blob/main/scripts/gitlab_webhook.py"},"gitlab_webhook.py")," and 'Pipeline events' trigger only."),(0,r.kt)("li",{parentName:"ul"},"add some ",(0,r.kt)("inlineCode",{parentName:"li"},".gitlab-ci.yml")," (see above section for reason) to ",(0,r.kt)("inlineCode",{parentName:"li"},"src/cloud-init/.distro")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"rpms/cloud-init"),", commit and push to ",(0,r.kt)("inlineCode",{parentName:"li"},"stg")," (remote)")),(0,r.kt)("p",null,"Now fork packit-service/src/cloud-init, do a change, create an MR."),(0,r.kt)("h2",{id:"syncing-dist-git-mr-ci-results-back-to-a-src-git-mr"},"Syncing dist-git MR CI results back to a src-git MR"),(0,r.kt)("h3",{id:"prod"},"prod"),(0,r.kt)("p",null,'The notification about a change of a pipeline\'s status is sent to a group webhook (with "Pipeline events" trigger)\nwhich is manually added to the ',(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/redhat/centos-stream/rpms"},"redhat/centos-stream/rpms group"),"."),(0,r.kt)("h3",{id:"staging-1"},"staging"),(0,r.kt)("p",null,"For staging, a project webhook is added to forks in ",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/packit-as-a-service-stg"},"packit-as-a-service-stg namespace"),",\nbecause that's where a pipeline runs in case of non-premium plan (packit-service/rpms/ namespace)."))}d.isMDXComponent=!0}}]);