"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[98401],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>d});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=u(a),c=n,d=g["".concat(s,".").concat(c)]||g[c]||m[c]||o;return a?r.createElement(d,i(i({ref:t},p),{},{components:a})):r.createElement(d,i({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:n,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},41022:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=a(58168),n=(a(96540),a(15680));const o={title:"How to manage outages",authors:"lbarczio"},i=void 0,l={unversionedId:"outages/index",id:"outages/index",title:"How to manage outages",description:"Who is responsible for resolving outages and what should be done",source:"@site/research/outages/index.md",sourceDirName:"outages",slug:"/outages/",permalink:"/research/outages/",draft:!1,editUrl:"https://github.com/packit/research/tree/main/research/outages/index.md",tags:[],version:"current",frontMatter:{title:"How to manage outages",authors:"lbarczio"},sidebar:"autogenerated",previous:{title:"Code refactoring",permalink:"/research/monorepo-support/refactoring"},next:{title:"Reporting",permalink:"/research/outages/reporting"}},s={},u=[{value:"Who is responsible for resolving outages and what should be done",id:"who-is-responsible-for-resolving-outages-and-what-should-be-done",level:2},{value:"How to identify an outage",id:"how-to-identify-an-outage",level:2},{value:"How team members are informed",id:"how-team-members-are-informed",level:2},{value:"How users are informed",id:"how-users-are-informed",level:2},{value:"What should be included",id:"what-should-be-included",level:3}],p={toc:u},g="wrapper";function m(e){let{components:t,...a}=e;return(0,n.yg)(g,(0,r.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"who-is-responsible-for-resolving-outages-and-what-should-be-done"},"Who is responsible for resolving outages and what should be done"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"rotating role - new / incorporate to an existing one (Sentry master, community master)"),(0,n.yg)("li",{parentName:"ul"},"identify an outage"),(0,n.yg)("li",{parentName:"ul"},"inform team"),(0,n.yg)("li",{parentName:"ul"},"inform users"),(0,n.yg)("li",{parentName:"ul"},"be responsible for fixing the issue = try to fix it / ask in the team"),(0,n.yg)("li",{parentName:"ul"},"inform when the outage is resolved")),(0,n.yg)("h2",{id:"how-to-identify-an-outage"},"How to identify an outage"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Sentry",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"mostly info about new exceptions"),(0,n.yg)("li",{parentName:"ul"},"currently we are informed about each new Sentry issue by mail"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://docs.sentry.io/product/alerts-notifications/metric-alerts/"},"alerts"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"alert rules can be set up - threshold, notification,\n",(0,n.yg)("a",{parentName:"li",href:"https://www.sentry.dev/_assets2/static/fca0872133bf0ed54631d4ba44725879/eb1d2/new-alert-rule-all.png"},"example")),(0,n.yg)("li",{parentName:"ul"},"alerting is triggered when a threshold is breached"))))),(0,n.yg)("li",{parentName:"ul"},"Prometheus can provide alerts as well - we would need to collect some metric about failed tasks and create alert rules\nfor that"),(0,n.yg)("li",{parentName:"ul"},"analyze DB info we use in dashboard jobs - periodically check the state of the SRPM builds/ Copr builds/ tests in DB from e.g. the last hour",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"cron job to check this can be set up")))),(0,n.yg)("h2",{id:"how-team-members-are-informed"},"How team members are informed"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"IRC - the messages are mirrored to Telegram, this should be enough")),(0,n.yg)("h2",{id:"how-users-are-informed"},"How users are informed"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"our ",(0,n.yg)("a",{parentName:"li",href:"https://dashboard.packit.dev/status"},"status page")," in dashboard",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"currently we have there only info about API which only checks ",(0,n.yg)("a",{parentName:"li",href:"https://prod.packit.dev/api/healthz"},"https://prod.packit.dev/api/healthz")),(0,n.yg)("li",{parentName:"ul"},"we could provide more info:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"manually added info about current outage, have some template: what and when happened, when it will be fixed"),(0,n.yg)("li",{parentName:"ul"},"history of outages"))),(0,n.yg)("li",{parentName:"ul"},"if Openshift is down, we cannot communicate here"))),(0,n.yg)("li",{parentName:"ul"},"pinned issue in Github about current outage",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"link to dashboard?"))),(0,n.yg)("li",{parentName:"ul"},"IRC - also provide links"),(0,n.yg)("li",{parentName:"ul"},"status page hosted some other place then the actual project, so that it's possible to communicate the status even if OpenShift is down:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/CachetHQ/Cachet"},"Cachet")," - self-hosted status page system"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/juliomrqz/statusfy"},"Statusfy")," - Static Generated or Server Rendered, variety of hosting\n",(0,n.yg)("a",{parentName:"li",href:"https://docs.statusfy.co/guide/deploy/#github-pages"},"services")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/cstate/cstate"},"cState")," - built with Hugo, statically generated, can be hosted for free on Github Pages"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"https://github.com/jayfk/statuspage"},"Corestatus")," - turns GitHub issues into a status page, hosted on GitHub"))),(0,n.yg)("li",{parentName:"ul"},'for certain known failures of Testing Farm or Copr "neutral" status on PRs (instead of an error)',(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"the checks need to be implemented (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/ogr/issues/461"},"opened issue for this"),")"),(0,n.yg)("li",{parentName:"ul"},"could be configurable"),(0,n.yg)("li",{parentName:"ul"},"better UX for users - PRs are not marked as failed")))),(0,n.yg)("h3",{id:"what-should-be-included"},"What should be included"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"scope:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"what functionality is broken"),(0,n.yg)("li",{parentName:"ul"},"what/who is affected"))),(0,n.yg)("li",{parentName:"ul"},"provide alternatives if there are some"),(0,n.yg)("li",{parentName:"ul"},"when can users expect a fix"),(0,n.yg)("li",{parentName:"ul"},"if the outage is caused by other tool/service - provide links (e.g. Copr outage, Testing farm)")))}m.isMDXComponent=!0}}]);