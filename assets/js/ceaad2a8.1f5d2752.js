"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[37048],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>g});var i=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=i.createContext({}),s=function(e){var t=i.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return i.createElement(o.Provider,{value:t},e.children)},h="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),h=s(a),m=n,g=h["".concat(o,".").concat(m)]||h[m]||u[m]||r;return a?i.createElement(g,l(l({ref:t},c),{},{components:a})):i.createElement(g,l({ref:t},c))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[h]="string"==typeof e?e:n,l[1]=p;for(var s=2;s<r;s++)l[s]=a[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}m.displayName="MDXCreateElement"},67874:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var i=a(58168),n=(a(96540),a(15680));const r={title:"2023",date:new Date("2024-01-01T00:00:00.000Z"),tags:[2023]},l=void 0,p={permalink:"/posts/weekly/2023",editUrl:"https://github.com/packit/packit.dev/tree/main/weekly/2023.md",source:"@site/weekly/2023.md",title:"2023",description:"Let's see what happened in Packit in 2023.",date:"2024-01-01T00:00:00.000Z",formattedDate:"January 1, 2024",tags:[{label:"2023",permalink:"/posts/weekly/tags/2023"}],readingTime:19.78,hasTruncateMarker:!0,authors:[],frontMatter:{title:"2023",date:"2024-01-01T00:00:00.000Z",tags:["2023"]},prevItem:{title:"Week 1 in Packit",permalink:"/posts/weekly/2024/week-1"},nextItem:{title:"Packit workshop - Fedora Community Edition",permalink:"/posts/weekly/2023/packit-workshop"}},o={authorsImageUrls:[]},s=[{value:"Week 0 \ud83c\udf04 (December 20th 2022 \u2013 January 2nd 2023)",id:"week-0--december-20th-2022--january-2nd-2023",level:2},{value:"Week 1 (January 3rd \u2013 January 9th)",id:"week-1-january-3rd--january-9th",level:2},{value:"Week 2 (January 10th \u2013 January 16th)",id:"week-2-january-10th--january-16th",level:2},{value:"Week 3-4 (January 17th \u2013 January 30th)",id:"week-3-4-january-17th--january-30th",level:2},{value:"Weeks 5\u20136 (February 1st \u2013 February 13th)",id:"weeks-56-february-1st--february-13th",level:2},{value:"Week 7 (February 14th \u2013 February 20th)",id:"week-7-february-14th--february-20th",level:2},{value:"Week 8 (February 21st \u2013 February 27th)",id:"week-8-february-21st--february-27th",level:2},{value:"Week 9 (February 28th \u2013 March 6th)",id:"week-9-february-28th--march-6th",level:2},{value:"Week 10 (March 7th \u2013 March 13th)",id:"week-10-march-7th--march-13th",level:2},{value:"Week 11 (March 14th \u2013 March 20th)",id:"week-11-march-14th--march-20th",level:2},{value:"Week 12 (March 21st \u2013 March 27th)",id:"week-12-march-21st--march-27th",level:2},{value:"Week 13 (March 28th \u2013 April 3rd)",id:"week-13-march-28th--april-3rd",level:2},{value:"Weeks 14\u201315 (April 3rd \u2013 April 17th)",id:"weeks-1415-april-3rd--april-17th",level:2},{value:"Week 16 (April 18th \u2013 April 24th)",id:"week-16-april-18th--april-24th",level:2},{value:"Week 17-18 (April 25th \u2013 May 3rd)",id:"week-17-18-april-25th--may-3rd",level:2},{value:"Week 18 (May 4th - May 9th)",id:"week-18-may-4th---may-9th",level:2},{value:"Week 19 (May 9th \u2013 May 15th)",id:"week-19-may-9th--may-15th",level:2},{value:"Week 20 (May 16th \u2013 May 22nd)",id:"week-20-may-16th--may-22nd",level:2},{value:"Week 21 (May 23rd \u2013 May 29th)",id:"week-21-may-23rd--may-29th",level:2},{value:"Week 22 (May 30th \u2013 June 5th)",id:"week-22-may-30th--june-5th",level:2},{value:"Week 23 (June 6th \u2013 June 12th)",id:"week-23-june-6th--june-12th",level:2},{value:"Week 24 (June 13th \u2013 June 19th)",id:"week-24-june-13th--june-19th",level:2},{value:"Week 25 (June 21st \u2013 June 27th)",id:"week-25-june-21st--june-27th",level:2},{value:"Week 26 (June 27th \u2013 July 3rd)",id:"week-26-june-27th--july-3rd",level:2},{value:"Week 27 (July 4th \u2013 July 10th)",id:"week-27-july-4th--july-10th",level:2},{value:"Week 28 (July 11th \u2013 July 17th)",id:"week-28-july-11th--july-17th",level:2},{value:"Weeks 29\u201330 (July 18th \u2013 July 31st)",id:"weeks-2930-july-18th--july-31st",level:2},{value:"Week 31 (August 1st \u2013 August 7th)",id:"week-31-august-1st--august-7th",level:2},{value:"Week 32 (August 8th \u2013 August 14th)",id:"week-32-august-8th--august-14th",level:2},{value:"Week 34 (August 22nd \u2013 August 28th)",id:"week-34-august-22nd--august-28th",level:2},{value:"Week 35 (August 29th \u2013 September 4th)",id:"week-35-august-29th--september-4th",level:2},{value:"Week 36 (September 5th \u2013 September 11th)",id:"week-36-september-5th--september-11th",level:2},{value:"Week 37 (September 12th \u2013 September 18th)",id:"week-37-september-12th--september-18th",level:2},{value:"Week 38 (September 19th \u2013 September 25th)",id:"week-38-september-19th--september-25th",level:2},{value:"Week 39 (September 26th \u2013 October 2nd)",id:"week-39-september-26th--october-2nd",level:2},{value:"Week 40 (October 3rd \u2013 October 9th)",id:"week-40-october-3rd--october-9th",level:2},{value:"Week 41 (October 10th \u2013 October 16th)",id:"week-41-october-10th--october-16th",level:2},{value:"Week 43 (October 24th \u2013 October 30th)",id:"week-43-october-24th--october-30th",level:2},{value:"Week 44 (October 31st \u2013 November 6th)",id:"week-44-october-31st--november-6th",level:2},{value:"Week 45 (November 7th \u2013 November 13th)",id:"week-45-november-7th--november-13th",level:2},{value:"Week 46 (November 14th \u2013 November 20th)",id:"week-46-november-14th--november-20th",level:2},{value:"Week 47 (November 21st \u2013 November 27th)",id:"week-47-november-21st--november-27th",level:2},{value:"Week 48 (November 28th \u2013 December 4th)",id:"week-48-november-28th--december-4th",level:2},{value:"Week 49 (December 5th \u2013 December 11th)",id:"week-49-december-5th--december-11th",level:2},{value:"Week 50 (December 12th \u2013 December 18th)",id:"week-50-december-12th--december-18th",level:2},{value:"End of the year in Packit",id:"end-of-the-year-in-packit",level:2}],c={toc:s},h="wrapper";function u(e){let{components:t,...a}=e;return(0,n.yg)(h,(0,i.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"Let's see what happened in Packit in 2023."),(0,n.yg)("h2",{id:"week-0--december-20th-2022--january-2nd-2023"},"Week 0 \ud83c\udf04 (December 20th 2022 \u2013 January 2nd 2023)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"ogr now raises ",(0,n.yg)("inlineCode",{parentName:"li"},"GitForgeInternalError")," rather than ",(0,n.yg)("inlineCode",{parentName:"li"},"PagureAPIException")," when\ngetting 50x response from the Pagure API. This should increase usability as\nthose tasks will be retried.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/ogr/pull/762"},"ogr#762"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now puts the correct release number into the changelog when the\nRelease tag is reset during propose-downstream.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1816"},"packit#1816"),"))")),(0,n.yg)("h2",{id:"week-1-january-3rd--january-9th"},"Week 1 (January 3rd \u2013 January 9th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"SRPMs for projects that installed the GitHub App before September 6th and\ndon't have ",(0,n.yg)("inlineCode",{parentName:"li"},"srpm_build_deps")," defined are now built in Copr as well.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1822"},"packit-service#1822"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug in dashboard that linked ",(0,n.yg)("inlineCode",{parentName:"li"},"null")," as a Copr build for\nTesting Farm runs that do not require any Copr build.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/dashboard/pull/200"},"dashboard#200"),")"),(0,n.yg)("li",{parentName:"ul"},"All classes including ",(0,n.yg)("inlineCode",{parentName:"li"},"Specfile")," itself can now be copied using the standard\n",(0,n.yg)("inlineCode",{parentName:"li"},"copy()")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"deepcopy()")," functions from ",(0,n.yg)("inlineCode",{parentName:"li"},"copy")," module.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/176"},"specfile#176"),")")),(0,n.yg)("h2",{id:"week-2-january-10th--january-16th"},"Week 2 (January 10th \u2013 January 16th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},'When configuring Copr chroot (target in Packit terminology) specific configuration, make sure to specify additional_modules as a string: module names separated with a comma, example: "httpd:2.4,python:4". (',(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1826"},"packit#1826"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug which caused long Copr build end reporting time on a few occurrences. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1838"},"packit-service#1838"),")"),(0,n.yg)("li",{parentName:"ul"},"A few fixes has been implemented to make it possible to use ",(0,n.yg)("a",{parentName:"li",href:"https://packit.dev/docs/configuration/#propose_downstream"},(0,n.yg)("inlineCode",{parentName:"a"},"propose-downstream")," job")," on GitLab. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1842"},"packit-service#1842"),", ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1844"},"packit-service#1844"),", ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1845"},"packit-service#1845"),", ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1846"},"packit-service#1846"),")")),(0,n.yg)("h2",{id:"week-3-4-january-17th--january-30th"},"Week 3-4 (January 17th \u2013 January 30th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Users can now re-trigger ",(0,n.yg)("em",{parentName:"li"},"bodhi_update")," and ",(0,n.yg)("em",{parentName:"li"},"koji_build")," jobs by ",(0,n.yg)("inlineCode",{parentName:"li"},"/packit create-update"),"\nand ",(0,n.yg)("inlineCode",{parentName:"li"},"/packit koji-update")," comments in an issue opened by Packit in the configured ",(0,n.yg)("inlineCode",{parentName:"li"},"issue_repository")," if anything\nwent wrong during these jobs. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1796"},"packit-service#1796"),")"),(0,n.yg)("li",{parentName:"ul"},"All Copr projects created by Packit now default to ",(0,n.yg)("inlineCode",{parentName:"li"},"enable_net=False"),": our documentation stated this, but it\nwasn't the case. This is now corrected. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1825"},"packit#1825"),")"),(0,n.yg)("li",{parentName:"ul"},"You can now specify ",(0,n.yg)("inlineCode",{parentName:"li"},"update_release: false")," in the configuration to tell Packit not to change the Version and\nRelease in the spec file. It works the same as ",(0,n.yg)("inlineCode",{parentName:"li"},"--no-update-release")," (renamed from now deprecated ",(0,n.yg)("inlineCode",{parentName:"li"},"--no-bump"),") in\nthe CLI. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1827"},"packit#1827"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now supports setting ",(0,n.yg)("inlineCode",{parentName:"li"},"module_hotfixes")," for Copr projects.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1829"},"packit#1829"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now also allows passing in free-form parameters to Testing Farm in order to support all of its\noptions immediately once they are added. The parameters can be passed through the ",(0,n.yg)("inlineCode",{parentName:"li"},"tf_extra_params")," config option.\nThe free-form dictionary must follow the structure of Testing Farm POST requests. See ",(0,n.yg)("a",{parentName:"li",href:"https://packit.dev/docs/testing-farm/"},"our documentation"),"\nand examples for more information. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1853"},"packit-service#1853"),")"),(0,n.yg)("li",{parentName:"ul"},"Fixed a bug in section parsing that caused sections to be ignored when there were macro definitions spread\nacross the spec file and not cumulated at the top. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/191"},"specfile#191"),")"),(0,n.yg)("li",{parentName:"ul"},"Also fixed the infinite loop that occurred when section options were followed by whitespace.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/197"},"specfile#197"),")")),(0,n.yg)("h2",{id:"weeks-56-february-1st--february-13th"},"Weeks 5\u20136 (February 1st \u2013 February 13th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"You can now use ",(0,n.yg)("inlineCode",{parentName:"li"},"--srpm")," option with the ",(0,n.yg)("inlineCode",{parentName:"li"},"packit build locally")," CLI command. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1810"},"packit#1810"),")"),(0,n.yg)("li",{parentName:"ul"},"You will newly see news about Packit as a footer of the GitHub check runs summary. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1881"},"packit-service#1881"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now groups related builds and test runs (e.g. triggered by the same event, just different chroots) together. In the future, this will allow better presentation of the overall pipelines (e.g. in the dashboard). We now also create database entries before sending requests to external service (e.g. Testing Farm), therefore failures will be more visible in the dashboard. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1787"},"packit-service#1787"),")")),(0,n.yg)("h2",{id:"week-7-february-14th--february-20th"},"Week 7 (February 14th \u2013 February 20th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now provides ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_PROJECT_VERSION")," environment variable when running ",(0,n.yg)("inlineCode",{parentName:"li"},"changelog-entry")," action. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1853"},"packit#1853"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit CLI now requires bodhi in version 7.0.0 at minimum. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1844"},"packit#1844"),")"),(0,n.yg)("li",{parentName:"ul"},"You can now specify branches for a job triggered by a commit with a regex. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1909"},"packit-service#1909"),")")),(0,n.yg)("h2",{id:"week-8-february-21st--february-27th"},"Week 8 (February 21st \u2013 February 27th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"packit validate-config")," CLI command now provides details about errors when it cannot parse the config file. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1861"},"packit#1861"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"--update-release"),"/",(0,n.yg)("inlineCode",{parentName:"li"},"--no-update-release")," CLI flag now affects only ",(0,n.yg)("inlineCode",{parentName:"li"},"Release"),", not ",(0,n.yg)("inlineCode",{parentName:"li"},"Version"),". (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1857"},"packit#1857"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit does fewer API calls when searching for the package configuration file in remote repositories. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1846"},"packit#1846"),")"),(0,n.yg)("li",{parentName:"ul"},"Commit statuses/check names will now contain the name of the branch or release for the build and test jobs with ",(0,n.yg)("inlineCode",{parentName:"li"},"commit")," or ",(0,n.yg)("inlineCode",{parentName:"li"},"release")," trigger.\nThis will prevent the collision of the names. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1920"},"packit-service#1920"),")")),(0,n.yg)("h2",{id:"week-9-february-28th--march-6th"},"Week 9 (February 28th \u2013 March 6th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Aliases logic was updated to account for the upcoming Fedora release (Bodhi now marks such release as ",(0,n.yg)("inlineCode",{parentName:"li"},"frozen"),"). From now on, Fedora 38 updates will be created even when the release is frozen. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1863"},"packit#1863"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"packit validate-config")," now correctly checks glob-patterns in 'files_to_sync' (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1865"},"packit#1865"),") and provides details about errors when it cannot parse a config file. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1861"},"packit#1861"),")"),(0,n.yg)("li",{parentName:"ul"},"Pull-from-upstream jobs are now displayed on our dashboard \ud83e\udd73 ",(0,n.yg)("a",{parentName:"li",href:"https://dashboard.packit.dev/jobs/pull-from-upstreams"},"https://dashboard.packit.dev/jobs/pull-from-upstreams")," (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1951"},"packit-service#1951"),", ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1939"},"packit-service#1939"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit will no longer automatically request access to the forks on GitLab. This will prevent us from spamming one-time contributors with requesting the access, whereas the regular contributors can add Packit following the instructions from the comments on the MRs, so they can receive the results of Packit pipeline right from the commit statuses. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1946"},"packit-service#1946"),")"),(0,n.yg)("li",{parentName:"ul"},'Packit will retry tasks that are interrupted by a worker shutdown. This should improve throughput and reduce cases where there is no outcome, i.e. "builds should have been done but nothing happened". (',(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1935"},"packit-service#1935"),")"),(0,n.yg)("li",{parentName:"ul"},"OGR now understands a few community-hosted GitLab instances that could not be determined automatically from the hostname. Thanks to that, you don't need to hardcode these instances to be mapped correctly. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/ogr/pull/775"},"ogr#775"),")")),(0,n.yg)("p",null,"Thank you, ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SpyTec"},"@SpyTec")," for so many ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pulls?q=is%3Apr+author%3ASpyTec"},"wonderful changes in our dasbhoard"),"."),(0,n.yg)("h2",{id:"week-10-march-7th--march-13th"},"Week 10 (March 7th \u2013 March 13th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Parsing the spec file by RPM is now performed only if really necessary, greatly improving performance in certain scenarios. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/212"},"specfile#212"),")")),(0,n.yg)("h2",{id:"week-11-march-14th--march-20th"},"Week 11 (March 14th \u2013 March 20th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now uses the ",(0,n.yg)("inlineCode",{parentName:"li"},"get_current_version")," action defined by the user to retrieve version before updating the specfile %setup macro (if any). (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1886"},"packit#1886"),")")),(0,n.yg)("h2",{id:"week-12-march-21st--march-27th"},"Week 12 (March 21st \u2013 March 27th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"'upstream_tag_template' is now also used when looking for the latest version tag in Git.\nThis allows upstream repositories to mix different tag-patterns in the same repository,\nbut consider only one to tell the latest version.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1891"},"packit#1891"),")")),(0,n.yg)("h2",{id:"week-13-march-28th--april-3rd"},"Week 13 (March 28th \u2013 April 3rd)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now preserves ",(0,n.yg)("inlineCode",{parentName:"li"},"%autorelease")," during ",(0,n.yg)("inlineCode",{parentName:"li"},"propose_downstream")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"pull_from_upstream"),". (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1904"},"packit#1904"),")"),(0,n.yg)("li",{parentName:"ul"},"Since in GitLab, it is not possible to overwrite the pending statuses, Packit now provides more generic descriptions and URLs when setting the first pending status. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1975"},"packit-service#1975"),")")),(0,n.yg)("h2",{id:"weeks-1415-april-3rd--april-17th"},"Weeks 14\u201315 (April 3rd \u2013 April 17th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"packit source-git")," related commands can skip dist-git repos, where the git trailer is not found, when looking for the right dist-git dir where to work. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1938"},"packit#1938"),")"),(0,n.yg)("li",{parentName:"ul"},"Tmt tests can now be run with fmf root outside of git root (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1936"},"packit#1936"),")"),(0,n.yg)("li",{parentName:"ul"},'Commits created by Packit no longer contain the "Signed-off-by" tag. (',(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1934"},"packit#1934"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit's source_git functionality installs/loads the ",(0,n.yg)("inlineCode",{parentName:"li"},"_packitpatch")," script in a more reliable manner that doesn't rely on deprecated setuptools functionality. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1926"},"packit#1926"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now supports monorepo configuration in CLI (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1864"},"packit#1864"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit should now correctly catch the logs if any of the user actions fail during ",(0,n.yg)("inlineCode",{parentName:"li"},"propose_downstream"),". (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1939"},"packit#1939"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now resets ",(0,n.yg)("inlineCode",{parentName:"li"},"Release")," field in dist-git spec file to 1 when the version in upstream spec file is not up-to-date with the release that triggered ",(0,n.yg)("inlineCode",{parentName:"li"},"propose_downstream"),". (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1940"},"packit#1940"),")")),(0,n.yg)("h2",{id:"week-16-april-18th--april-24th"},"Week 16 (April 18th \u2013 April 24th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now complies with ",(0,n.yg)("a",{parentName:"li",href:"https://peps.python.org/pep-0621/"},"PEP 621")," and stores project metadata in ",(0,n.yg)("inlineCode",{parentName:"li"},"pyproject.toml"),". (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1913"},"packit#1913"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now properly respects ",(0,n.yg)("inlineCode",{parentName:"li"},"upstream_ref"),' for tags that start with "a", "b", "c", "e", "n", "r", "s". (',(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1943"},"packit#1943"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit Service now supports multi package configuration (a.k.a. monorepo configuration). (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/1982"},"packit-service#1982"),")")),(0,n.yg)("h2",{id:"week-17-18-april-25th--may-3rd"},"Week 17-18 (April 25th \u2013 May 3rd)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Detection of ",(0,n.yg)("inlineCode",{parentName:"li"},"%autorelease")," usage in dist-git spec file during ",(0,n.yg)("inlineCode",{parentName:"li"},"propose-downstream")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream")," has been improved and Packit will always preserve it. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1949"},"packit#1949"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed an issue that prevented you from building in Copr and Koji on release in the GitLab upstream. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2027"},"packit-service#2027"),")"),(0,n.yg)("li",{parentName:"ul"},"TMT tests can now be run with FMF root outside of git root. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2007"},"packit-service#2007"),")"),(0,n.yg)("li",{parentName:"ul"},"When reacting to branch pushes, Packit now correctly checks whether the branch name matches the configuration for the test jobs with configured ",(0,n.yg)("inlineCode",{parentName:"li"},"commit")," trigger. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2015"},"packit-service#2015"),")"),(0,n.yg)("li",{parentName:"ul"},"The ",(0,n.yg)("inlineCode",{parentName:"li"},"propose-downstream")," job triggered by an issue comment now correctly loads the configuration from the upstream repository. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2021"},"packit-service#2021"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit is newly on Mastodon. Or, more specifically, on Fosstodon.\nFollow ",(0,n.yg)("a",{parentName:"li",href:"https://fosstodon.org/@packit"},"@packit@fosstodon.org")," and be one of the first to know about all the news!")),(0,n.yg)("h2",{id:"week-18-may-4th---may-9th"},"Week 18 (May 4th - May 9th)"),(0,n.yg)("p",null,"We have experienced issues with automatic Bodhi updates that we are investigating.\nIn case you miss a Bodhi update, you can\n",(0,n.yg)("a",{parentName:"p",href:"https://packit.dev/docs/fedora-releases-guide/#retriggering-2"},"retrigger the job")," via ",(0,n.yg)("inlineCode",{parentName:"p"},"/packit create-update"),"\ncomment in a dist-git pull request.\nBesides that, during this short week (another Czech Republic public holiday) we didn't manage to implement\nany significant new features."),(0,n.yg)("h2",{id:"week-19-may-9th--may-15th"},"Week 19 (May 9th \u2013 May 15th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now doesn't react to its own comments on Pagure and GitLab (on GitHub, this was already implemented).\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2048"},"packit-service#2048"),")")),(0,n.yg)("h2",{id:"week-20-may-16th--may-22nd"},"Week 20 (May 16th \u2013 May 22nd)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"We have implemented a denylisting mechanism allowing us to denylist namespaces/projects to prevent misuse of our service. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2046"},"packit-service#2046"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit will now additionally require for each test job requiring build a build job definition to be present in the Packit configuration file. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2012"},"packit-service#2012"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now checks whether the configured architecture for the test target is supported by Testing Farm and in case it's not supported, Packit doesn't submit these test requests. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2053"},"packit-service#2053"),")")),(0,n.yg)("h2",{id:"week-21-may-23rd--may-29th"},"Week 21 (May 23rd \u2013 May 29th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Unsuccessful Image Builder requests now provide error details so you can fix the Image configuration. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1981"},"packit#1981"),")"),(0,n.yg)("li",{parentName:"ul"},"Copr projects created by Packit will not follow the Fedora branching from now. This decision has been made to lower the load on Copr from the temporary Copr projects created, mainly, for the PR builds. If you are releasing your packages to the Copr, please use the new setting ",(0,n.yg)("inlineCode",{parentName:"li"},"follow_fedora_branching"),".\nAlready existing projects are not affected by this change and it is also not enforced with the custom Copr repositories. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/1970"},"packit#1970"),")"),(0,n.yg)("li",{parentName:"ul"},"Additional artifact(s) passed as ",(0,n.yg)("inlineCode",{parentName:"li"},"artifacts")," in the ",(0,n.yg)("inlineCode",{parentName:"li"},"tf_extra_params")," dictionary will be now combined with the artifact passed by Packit instead of rewriting it. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2056"},"packit-service#2056"),")"),(0,n.yg)("li",{parentName:"ul"},"Specfile library now handles multiple ",(0,n.yg)("inlineCode",{parentName:"li"},"%changelog")," sections. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/230"},"specfile#230"),")")),(0,n.yg)("h2",{id:"week-22-may-30th--june-5th"},"Week 22 (May 30th \u2013 June 5th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit will now filter the pull requests based on the target branch if the ",(0,n.yg)("inlineCode",{parentName:"li"},"branch")," is specified in the particular job configuration. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2074"},"packit-service#2074"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now supports ",(0,n.yg)("inlineCode",{parentName:"li"},"manual_trigger")," in the configuration that allows you to make jobs run only when explicitly triggered by a comment. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2069"},"packit-service#2069"),")")),(0,n.yg)("h2",{id:"week-23-june-6th--june-12th"},"Week 23 (June 6th \u2013 June 12th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Our dashboard now shows projects in a table instead of the cards.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pull/267"},"dashboard#267"),")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("inlineCode",{parentName:"p"},"/packit test")," command has two new options:"),(0,n.yg)("p",{parentName:"li"},"With ",(0,n.yg)("inlineCode",{parentName:"p"},"--identifier")," option, Testing Farm will trigger only jobs with that identifier.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/pull/2079"},"packit-service#2079"),")"),(0,n.yg)("p",{parentName:"li"},"Also, it is now possible to specify labels for a job and trigger tests based on labels\nusing a ",(0,n.yg)("inlineCode",{parentName:"p"},"--labels")," option of the ",(0,n.yg)("inlineCode",{parentName:"p"},"/packit test")," command.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit/pull/1988"},"packit#1988"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/pull/2088"},"packit-service#2088"),")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"If the ",(0,n.yg)("inlineCode",{parentName:"p"},"vm_image_build job")," doesn't have Copr project/owner configured,\nCopr project used for the latest Copr build of the pull request will be now used.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/pull/2080"},"packit-service#2080"),")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Fixed filters in ",(0,n.yg)("inlineCode",{parentName:"p"},"files_to_sync")," not being applied properly.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit/pull/1977"},"packit#1977"),")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"The issue that could've caused inconsistencies when tests from a PR\nwere supposed to be merged during the test runs on the Testing Farm has been fixed.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/pull/2090"},"packit-service#2090"),")"))),(0,n.yg)("h2",{id:"week-24-june-13th--june-19th"},"Week 24 (June 13th \u2013 June 19th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Packit now includes dist-git branch in the title of the PRs for ",(0,n.yg)("inlineCode",{parentName:"p"},"propose-downstream")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"pull-from-upstream"),".\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit/pull/1996"},"packit#1996"),")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Many dashboard issues have been fixed during the\n",(0,n.yg)("a",{parentName:"p",href:"https://sched.co/1MvMM"},"Contribute to an Open Source Service"),"\nworkshop at ",(0,n.yg)("a",{parentName:"p",href:"https://www.devconf.info/cz/"},"DevConf.CZ"),".\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/stefwalter"},"Stef Walter"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SpyTec"},"Erik Gustavsson"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/RFJBraunstingl"},"Roman Braunstingl"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/jreznik"},"Jaroslav Reznik"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/c3d"},"Christophe de Dinechin"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/cathay4t"},"Gris Ge"),"\nand ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/davdunc"},"David Duncan"),",\nthank you for your contribution!\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pull/291"},"dashboard#291"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pull/292"},"dashboard#292"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pull/293"},"dashboard#293"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pull/294"},"dashboard#294"),",\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pull/295"},"dashboard#295"),")"))),(0,n.yg)("h2",{id:"week-25-june-21st--june-27th"},"Week 25 (June 21st \u2013 June 27th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"If you are interested about the manual triggering deployed two weeks ago, David Kornel and Jakub Stejskal published ",(0,n.yg)("a",{parentName:"li",href:"https://fedoramagazine.org/how-to-use-testing-farm-outside-of-rhel/"},"a blog post")," about this on fedoramagazine.org."),(0,n.yg)("li",{parentName:"ul"},"Copr builds configured as a monorepo job will now be built in one Copr project together. The bug with overwriting the statuses for monorepo jobs has been fixed as well. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2097"},"packit-service#2097"),")")),(0,n.yg)("h2",{id:"week-26-june-27th--july-3rd"},"Week 26 (June 27th \u2013 July 3rd)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"The bug which prevented errors on Testing Farm request submission from being\ncorrectly propagated to the user was fixed.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2103"},"packit-service#2103"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"pull_from_upstream")," jobs can now be retriggered with a comment\n",(0,n.yg)("inlineCode",{parentName:"li"},"/packit pull-from-upstream")," in a dist-git pull request.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2087"},"packit-service#2087"),")")),(0,n.yg)("h2",{id:"week-27-july-4th--july-10th"},"Week 27 (July 4th \u2013 July 10th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now correctly reloads upstream specfile after running ",(0,n.yg)("inlineCode",{parentName:"li"},"pre-sync")," action. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2006"},"packit#2006"),")")),(0,n.yg)("h2",{id:"week-28-july-11th--july-17th"},"Week 28 (July 11th \u2013 July 17th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now includes instructions on how to checkout the dist-git PR locally when syncing the release.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2116"},"packit-service#2116"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug in processing options of ",(0,n.yg)("inlineCode",{parentName:"li"},"%prep")," macros in our ",(0,n.yg)("inlineCode",{parentName:"li"},"specfile")," library. For instance, when a quoted\nstring appeared inside an expression expansion, it could lead to improper parsing, rendering the spec file invalid\nafter accessing the options. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/253"},"specfile#253"),")"),(0,n.yg)("li",{parentName:"ul"},"packit.dev has a new format! As the content has expanded a lot in the recent year, we decided to switch to using\n",(0,n.yg)("a",{parentName:"li",href:"https://docusaurus.io/"},"Docosaurus"),":\nnow all the documentation is in one place and this format also enables additional features for our blog posts.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit.dev/pull/694"},"packit.dev#694"),")")),(0,n.yg)("h2",{id:"weeks-2930-july-18th--july-31st"},"Weeks 29\u201330 (July 18th \u2013 July 31st)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"With plenty of team members on vacation, we didn't manage to implement any significant new features during these two weeks.")),(0,n.yg)("h2",{id:"week-31-august-1st--august-7th"},"Week 31 (August 1st \u2013 August 7th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Licenses in Packit specfiles are now confirmed to be SPDX-compatible. (example PR: ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2026"},"packit#2026"),")\nIf you are interested in more details, see a ",(0,n.yg)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=Hjhe6jtx3Zw&t=8651s"},"talk")," from Flock 2023 by Mirek.")),(0,n.yg)("h2",{id:"week-32-august-8th--august-14th"},"Week 32 (August 8th \u2013 August 14th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Two new configuration options for filtering when getting latest upstream release tag were introduced: ",(0,n.yg)("inlineCode",{parentName:"li"},"upstream_tag_include")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"upstream_tag_exclude"),". They should contain a Python regex that can be used as an argument in ",(0,n.yg)("inlineCode",{parentName:"li"},"re.match"),". (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2030"},"packit#2030"),", ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2138"},"packit-service#2138"),")"),(0,n.yg)("li",{parentName:"ul"},"Retriggering of ",(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream")," via a comment will now use the correct configuration file from the default dist-git branch. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2140"},"packit-service#2140"),")"),(0,n.yg)("li",{parentName:"ul"},"The ",(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream")," job can now be used with upstream repos that are not hosted on a supported git forge. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2137"},"packit-service#2137"),")")),(0,n.yg)("h2",{id:"week-34-august-22nd--august-28th"},"Week 34 (August 22nd \u2013 August 28th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug in ",(0,n.yg)("inlineCode",{parentName:"li"},"packit source-git init")," caused by the changed behaviour in the newer version of rpmbuild. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2048"},"packit#2048"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed an issue in our API endpoint that could cause DoS until manual intervention from our team. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2164"},"packit-service#2164"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug causing broken retriggering of Github checks. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2161"},"packit-service#2161"),")"),(0,n.yg)("li",{parentName:"ul"},"SRPM build commit statuses, for monorepos projects, are now being correctly updated. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2157"},"packit-service#2157"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed the bug resulting in incorrect reporting for tests when retriggering a build of a different target that was not configured for tests. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2144"},"packit-service#2144"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed an issue that caused retriggers of Testing Farm to fail, if you specified any labels in the comment and had one or more test job definitions without any labels specified. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2156"},"packit-service#2156"),")"),(0,n.yg)("li",{parentName:"ul"},"Macro definitions and tags gained a new ",(0,n.yg)("inlineCode",{parentName:"li"},"valid")," attribute. A macro definition/tag is considered valid if it doesn't appear in a false branch of any condition appearing in the spec file. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/276"},"specfile#276"),")")),(0,n.yg)("h2",{id:"week-35-august-29th--september-4th"},"Week 35 (August 29th \u2013 September 4th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Now Packit exposes ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_PACKAGE_NAME"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_UPSTREAM_PACKAGE_NAME")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_DOWNSTREAM_PACKAGE_NAME")," env variables to all the actions. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2061"},"packit#2061"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now sets ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_UPSTREAM_REPO")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_DOWNSTREAM_REPO")," environment variables for release syncing actions. The variables represent paths where the respective git repositories are cloned (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2166"},"packit-service#2166"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug causing issues with displaying some ",(0,n.yg)("inlineCode",{parentName:"li"},"Project")," views on our dashboard. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2165"},"packit-service#2165"),")")),(0,n.yg)("h2",{id:"week-36-september-5th--september-11th"},"Week 36 (September 5th \u2013 September 11th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now supports ",(0,n.yg)("inlineCode",{parentName:"li"},"commit-message")," action that can be used to override the default commit message produced by Packit during ",(0,n.yg)("inlineCode",{parentName:"li"},"propose-downstream")," or ",(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream"),". Please pay attention to ",(0,n.yg)("a",{parentName:"li",href:"https://packit.dev/docs/configuration/actions#commit-message"},"our documentation")," with regards to the usage of this action. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2070"},"packit#2070"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit CLI now supports testing the ",(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream")," workflow.\nUse the ",(0,n.yg)("inlineCode",{parentName:"li"},"packit pull-from-upstream")," command from the ",(0,n.yg)("inlineCode",{parentName:"li"},"packit")," RPM package. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2063"},"packit#2063"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now passes ",(0,n.yg)("inlineCode",{parentName:"li"},"initiator")," context for tmt to the Testing Farm. You can use ",(0,n.yg)("a",{parentName:"li",href:"https://tmt.readthedocs.io/en/latest/spec/context.html#initiator"},"this option")," to run or skip certain tests when they're run by Packit. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2176"},"packit-service#2176"),")"),(0,n.yg)("li",{parentName:"ul"},"Testing Farm started additionally exposing regexes on top of the exact compose names in the /composes/ endpoints, and we now support this as well when checking the validity of compose. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2168"},"packit-service#2168"),")"),(0,n.yg)("li",{parentName:"ul"},"We have disabled the jitter for retrying Bodhi update tasks to prevent race conditions causing not created updates. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2170"},"packit-service#2170"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug in ",(0,n.yg)("inlineCode",{parentName:"li"},"get_fork")," method for Pagure about checking the usernames for a match when going through existing forks. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/ogr/pull/800"},"ogr#800"),")")),(0,n.yg)("h2",{id:"week-37-september-12th--september-18th"},"Week 37 (September 12th \u2013 September 18th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"If you have concerns about Packit uploading new archives to lookaside cache before creating a pull request, you can newly set ",(0,n.yg)("inlineCode",{parentName:"li"},"upload_sources")," to False to disable this. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2086"},"packit#2086"),")"),(0,n.yg)("li",{parentName:"ul"},"We have introduced a new configuration option ",(0,n.yg)("inlineCode",{parentName:"li"},"notifications.failure_comment.message")," that enables notifying users on failure via a comment using the configured message. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2182"},"packit-service#2182"),")")),(0,n.yg)("h2",{id:"week-38-september-19th--september-25th"},"Week 38 (September 19th \u2013 September 25th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"As part of the effort of implementing release syncing for CentOS Stream,\nPackit now supports the ",(0,n.yg)("inlineCode",{parentName:"li"},"pkg_tool")," option in the config\n(at the top-level or with specific packages when using the monorepo syntax).\nThis option can be used for switching between ",(0,n.yg)("inlineCode",{parentName:"li"},"fedpkg")," or ",(0,n.yg)("inlineCode",{parentName:"li"},"centpkg"),".\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2085"},"packit#2085"),")"),(0,n.yg)("li",{parentName:"ul"},"When updating the ",(0,n.yg)("inlineCode",{parentName:"li"},"Version")," tag during ",(0,n.yg)("inlineCode",{parentName:"li"},"propose_downstream")," or ",(0,n.yg)("inlineCode",{parentName:"li"},"pull_from_upstream"),",\nPackit now tries to update referenced macros (if any) rather than overwriting the references.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2087"},"packit#2087"),")")),(0,n.yg)("h2",{id:"week-39-september-26th--october-2nd"},"Week 39 (September 26th \u2013 October 2nd)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"When using packit CLI you can now specify bugs resolved by an update by ",(0,n.yg)("inlineCode",{parentName:"li"},"-b")," or ",(0,n.yg)("inlineCode",{parentName:"li"},"--resolve-bug")," option for ",(0,n.yg)("inlineCode",{parentName:"li"},"propose-downstream")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream")," commands. The values will be added by default to the changelog and commit message and provided in ",(0,n.yg)("inlineCode",{parentName:"li"},"commit-message")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"changelog-entry")," actions as ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_RESOLVED_BUGS")," env variable. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2094"},"packit#2094"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit-service now automatically adds bugzilla created by Upstream Release Monitoring as ",(0,n.yg)("inlineCode",{parentName:"li"},"- Resolves {bugzilla} ")," to the changelog (or commit if autochangelog is used) and provides the value in ",(0,n.yg)("inlineCode",{parentName:"li"},"commit-message")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"changelog-entry")," actions as ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_RESOLVED_BUGS")," env variable. When retriggering the ",(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream")," from comment, one can also specify the bug(s) as ",(0,n.yg)("inlineCode",{parentName:"li"},"/packit pull-from-upstream --resolved-bugs rhbz#123,rhbz#125")," and Packit will do the same. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2193"},"packit-service#2193"),")"),(0,n.yg)("li",{parentName:"ul"},"You can now configure ",(0,n.yg)("inlineCode",{parentName:"li"},"notifications.failure_comment.message")," also for downstream jobs, where the configured message will be used as an extension of the comment added by default by Packit. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2199"},"packit-service#2199"),")")),(0,n.yg)("h2",{id:"week-40-october-3rd--october-9th"},"Week 40 (October 3rd \u2013 October 9th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"We have fixed an issue that you could encounter when running the Packit from the CLI that caused misinterpretation of the repository to be an upstream repo instead of a downstream. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2117"},"packit#2117"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now also detects resolved bugs in the default update notes (created from changelog diff) and assigns these when submitting the Bodhi updates. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2111"},"packit#2111"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed an issue that prevented automated allowlisting in the Packit Service. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2113"},"packit#2113"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now exports ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_UPSTREAM_PACKAGE_NAME"),", ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_DOWNSTREAM_PACKAGE_NAME")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_CONFIG_PACKAGE_NAME")," also in the ",(0,n.yg)("inlineCode",{parentName:"li"},"changelog_entry")," action. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2103"},"packit#2103"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now posts a comment with a link to the Packit dashboard to the pull requests created in Fedora dist-git when syncing the release. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2215"},"packit-service#2215"),")")),(0,n.yg)("h2",{id:"week-41-october-10th--october-16th"},"Week 41 (October 10th \u2013 October 16th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"(",(0,n.yg)("em",{parentName:"li"},"breaking"),") Packit no longer accepts ",(0,n.yg)("inlineCode",{parentName:"li"},"packit.json")," or ",(0,n.yg)("inlineCode",{parentName:"li"},".packit.json")," as a configuration file name.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2123"},"packit#2123"),")"),(0,n.yg)("li",{parentName:"ul"},"We have implemented several improvements in syncing the release downstream:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Packit now updates ACL of its own dist-git forks to allow users and groups with commit rights to the original\ndist-git repo to push directly to a fork. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2112"},"packit#2112"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now also properly cleans up the branch after syncing the release which should prevent unwanted files\n(e.g. tarballs) being committed to dist-git. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2125"},"packit#2125"),")"),(0,n.yg)("li",{parentName:"ul"},"We have adjusted the way how Packit includes the resolved bugzillas in the commit messages created when syncing the release\ndownstream so that the resolved bugzillas are included in changelog when using ",(0,n.yg)("inlineCode",{parentName:"li"},"%autochangelog"),".\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2126"},"packit#2126"),")"))),(0,n.yg)("li",{parentName:"ul"},"Packit now reacts to retriggering comments for downstream jobs by commenting on the same issue/PR and\nproviding information about the jobs. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2222"},"packit-service#2222"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed an issue that prevented you from running the jobs on the GitLab.com due to failing resolution\nof the upstream/downstream relationship for the cloned project. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2120"},"packit#2120"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit now triggers the build for the ",(0,n.yg)("inlineCode",{parentName:"li"},"/packit test")," comment command if the last build was not successful.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2228"},"packit-service#2228"),")")),(0,n.yg)("p",null,"And special thanks to ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/SpyTec"},"@SpyTec"),"\nfor multiple wonderful ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/dashboard/pulls?q=is%3Apr+author%3ASpyTec+merged%3A2023-10-10..2023-10-16"},"dashboard improvements"),"!"),(0,n.yg)("h2",{id:"week-43-october-24th--october-30th"},"Week 43 (October 24th \u2013 October 30th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit no longer downloads sources excluded using spec file conditions. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2132"},"packit#2132"),")")),(0,n.yg)("h2",{id:"week-44-october-31st--november-6th"},"Week 44 (October 31st \u2013 November 6th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Dist tag (",(0,n.yg)("inlineCode",{parentName:"li"},"%{?dist}"),") is now enforced when updating release during SRPM creation. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2106"},"packit#2106"),")")),(0,n.yg)("h2",{id:"week-45-november-7th--november-13th"},"Week 45 (November 7th \u2013 November 13th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Now Packit allows ",(0,n.yg)("inlineCode",{parentName:"li"},"~^+")," (special characters) in a tag (used for building the version string). (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2154"},"packit#2154"),")"),(0,n.yg)("li",{parentName:"ul"},"Downstream Koji builds are now shown in a separate table in ",(0,n.yg)("inlineCode",{parentName:"li"},"/jobs/downstream-koji-builds")," on dashboard and are also accessible via ",(0,n.yg)("inlineCode",{parentName:"li"},"/api/koji-builds")," API endpoint. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2244"},"packit-service#2244"),", ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2249"},"packit-service#2249"),", ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/dashboard/pull/354"},"dashboard#354"),")")),(0,n.yg)("h2",{id:"week-46-november-14th--november-20th"},"Week 46 (November 14th \u2013 November 20th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now supports pre-release version in ",(0,n.yg)("inlineCode",{parentName:"li"},"propose_downstream")," and ",(0,n.yg)("inlineCode",{parentName:"li"},"pull_from_upstream"),".\nA spec file update might be required, see ",(0,n.yg)("a",{parentName:"li",href:"/docs/pre-releases"},"the documentation")," for more details.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2149"},"packit#2149"),")",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"In relation to that, specfile library has a new method, ",(0,n.yg)("inlineCode",{parentName:"li"},"Specfile.update_version()"),", that allows updating spec file\nversion even if it is a pre-release. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/specfile/pull/317"},"specfile#317"),")"))),(0,n.yg)("li",{parentName:"ul"},"Packit can now check, using the new ",(0,n.yg)("inlineCode",{parentName:"li"},"update_version_mask")," configuration option, that the proposed version of new release\nand the current version of the dist-git branch are compatible and sync the dist-git branch only in that case.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2156"},"packit#2156"),")"),(0,n.yg)("li",{parentName:"ul"},"Packit is now able to get the version from spec file even if the ",(0,n.yg)("inlineCode",{parentName:"li"},"Version")," tag is not present in the specfile directly,\nbut e.g. imported from another file. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2157"},"packit#2157"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"PACKIT_COPR_PROJECT")," env var that is exposed to Testing Farm now includes the Copr project of the additional build\nspecified in comment, if present. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2253"},"packit-service#2253"),")")),(0,n.yg)("h2",{id:"week-47-november-21st--november-27th"},"Week 47 (November 21st \u2013 November 27th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Packit now correctly sets the specfile content (e.g. changelog entry) even if it syncs the specfile from upstream for the first time. (",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2170"},"packit#2170"),")")),(0,n.yg)("h2",{id:"week-48-november-28th--december-4th"},"Week 48 (November 28th \u2013 December 4th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Packit now links the information related to upstream events in PRs opened when syncing a release.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit/pull/2173"},"packit#2173"),")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"When accessing tags or macro definitions by name, specfile library now takes validity into account\nwhen looking for the best match. For example if there are two instances of ",(0,n.yg)("inlineCode",{parentName:"p"},"Version")," tag,\none in the true and one in the false branch of a condition, ",(0,n.yg)("inlineCode",{parentName:"p"},"Specfile.version")," will always access\nthe one that is in the true branch.\nThis also applies to Packit when syncing a release and updating value of ",(0,n.yg)("inlineCode",{parentName:"p"},"Version")," tag.\n(",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/specfile/pull/328"},"specfile#328"),")"))),(0,n.yg)("h2",{id:"week-49-december-5th--december-11th"},"Week 49 (December 5th \u2013 December 11th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"We have introduced new configuration options ",(0,n.yg)("inlineCode",{parentName:"p"},"test_command.default_labels")," and ",(0,n.yg)("inlineCode",{parentName:"p"},"test_command.default_identifier")," that are used by default when running ",(0,n.yg)("inlineCode",{parentName:"p"},"/packit test")," comment command without any arguments (instead of specifying them via ",(0,n.yg)("inlineCode",{parentName:"p"},"--labels"),"/",(0,n.yg)("inlineCode",{parentName:"p"},"--identifier"),"). (",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/packit-service/pull/2270"},"packit-service#2270"),")")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"We have fixed a bug that GithubRelease.url returned an API URL. (",(0,n.yg)("a",{parentName:"p",href:"https://github.com/packit/ogr/pull/824"},"ogr#824"),")"))),(0,n.yg)("h2",{id:"week-50-december-12th--december-18th"},"Week 50 (December 12th \u2013 December 18th)"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug preventing a release from being synced downstream if the changelog to be set is empty.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit/pull/2183"},"packit#2183"),")"),(0,n.yg)("li",{parentName:"ul"},"We have fixed a bug of not running Koji builds for Packit dist-git PRs with multiple commits if the last commit\nof the PR did not contain a spec file change.\n(",(0,n.yg)("a",{parentName:"li",href:"https://github.com/packit/packit-service/pull/2275"},"packit-service#2275"),")")),(0,n.yg)("h2",{id:"end-of-the-year-in-packit"},"End of the year in Packit"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"We have hit some issues with the firewall rules on the new cluster hosting our production. We are waiting for the required fix that is done outside of our team which should be deployed around January 11th. We will keep you informed about the current status. At the moment we are aware of the issues related to the:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("inlineCode",{parentName:"li"},"pull-from-upstream")," jobs that have sources hosted at infradead.org, sourceforge.net and gitlab.gnome.org"),(0,n.yg)("li",{parentName:"ul"},"jobs running on the gitlab.gnome.org in general"))),(0,n.yg)("li",{parentName:"ul"},"We have also fixed an issue that caused some Cockpit releases to fail, others might've been affected too, though there are no reports.")))}u.isMDXComponent=!0}}]);