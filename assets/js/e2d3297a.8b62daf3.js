"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[6054],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var i=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=p(t),u=a,y=g["".concat(s,".").concat(u)]||g[u]||d[u]||r;return t?i.createElement(y,l(l({ref:n},c),{},{components:t})):i.createElement(y,l({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[g]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=t[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},79358:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var i=t(58168),a=(t(96540),t(15680));const r={sidebar_label:"sections",title:"specfile.sections"},l=void 0,o={unversionedId:"api/specfile/sections",id:"api/specfile/sections",title:"specfile.sections",description:"Section",source:"@site/specfile/api/specfile/sections.md",sourceDirName:"api/specfile",slug:"/api/specfile/sections",permalink:"/specfile/api/specfile/sections",draft:!1,editUrl:"https://github.com/packit/specfile/tree/main/docs/specfile/api/specfile/sections.md",tags:[],version:"current",frontMatter:{sidebar_label:"sections",title:"specfile.sections"},sidebar:"autogenerated",previous:{title:"prep",permalink:"/specfile/api/specfile/prep"},next:{title:"sourcelist",permalink:"/specfile/api/specfile/sourcelist"}},s={},p=[{value:"Section",id:"section",level:2},{value:"__init__",id:"__init__",level:4},{value:"normalized_name",id:"normalized_name",level:4},{value:"id",id:"id",level:4},{value:"normalized_id",id:"normalized_id",level:4},{value:"is_script",id:"is_script",level:4},{value:"Sections",id:"sections",level:2},{value:"get_or_create",id:"get_or_create",level:4},{value:"parse",id:"parse",level:4}],c={toc:p},g="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,i.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"section"},"Section"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"class Section(collections.UserList)\n")),(0,a.yg)("p",null,"Class that represents a spec file section."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Attributes"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"name")," - Name of the section (without the leading ","'","%","'",")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"options")," - Options of the section."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"data")," - List of lines forming the content of the section,\nnot including newline characters.")),(0,a.yg)("h4",{id:"__init__"},"_","_","init","_","_"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'def __init__(name: str,\n             options: Optional[Options] = None,\n             delimiter: str = "",\n             separator: str = "\\n",\n             data: Optional[List[str]] = None) -> None\n')),(0,a.yg)("p",null,"Initializes a section object."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"name")," - Name of the section (without the leading ","'","%","'",")."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"options")," - Options of the section."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"delimiter")," - Delimiter separating name and option string."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"separator")," - String separating name and options from section content,\ndefaults to newline."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"data")," - List of lines forming the content of the section,\nnot including newline characters.")),(0,a.yg)("h4",{id:"normalized_name"},"normalized","_","name"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"@property\ndef normalized_name() -> str\n")),(0,a.yg)("p",null,"Normalized name of the section. All characters are lowercased."),(0,a.yg)("h4",{id:"id"},"id"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"@property\ndef id() -> str\n")),(0,a.yg)("p",null,"ID of the section (name and options, without the leading ","'","%","'",")."),(0,a.yg)("h4",{id:"normalized_id"},"normalized","_","id"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"@property\ndef normalized_id() -> str\n")),(0,a.yg)("p",null,"Normalized ID of the section. All characters of name are lowercased."),(0,a.yg)("h4",{id:"is_script"},"is","_","script"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"@property\ndef is_script() -> bool\n")),(0,a.yg)("p",null,"Whether the content of the section is a shell script."),(0,a.yg)("h2",{id:"sections"},"Sections"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"class Sections(UserList[Section])\n")),(0,a.yg)("p",null,"Class that represents all spec file sections, hence the entire spec file."),(0,a.yg)("p",null,"Sections can be accessed by index or conveniently by id as attributes:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"# print the third line of the first section\nprint(sections[0][2])\n\n# remove the last line of %prep section\ndel sections.prep[-1]\n\n# replace the entire %prep section\nsections.prep = ['line 1', 'line 2']\n\n# delete %changelog\ndel sections.changelog\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Attributes"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"data")," - List of individual sections. Preamble is expected to always be the first.")),(0,a.yg)("h4",{id:"get_or_create"},"get","_","or","_","create"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},"def get_or_create(id: str) -> Section\n")),(0,a.yg)("p",null,"Gets an existing section by ID or creates a new section with the given ID.\nNew section will be appended to the end."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"id")," - ID of the section (name and options, without the leading ","'","%","'",").")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Returns"),":"),(0,a.yg)("p",null,"  Existing or newly created section as an instance of ",(0,a.yg)("inlineCode",{parentName:"p"},"Section")," class."),(0,a.yg)("h4",{id:"parse"},"parse"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-python"},'@classmethod\ndef parse(cls,\n          lines: List[str],\n          context: Optional["Specfile"] = None) -> "Sections"\n')),(0,a.yg)("p",null,"Parses given lines into sections."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Arguments"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"lines")," - Lines to parse."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"context")," - ",(0,a.yg)("inlineCode",{parentName:"li"},"Specfile")," instance that defines the context for macro expansions.")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Returns"),":"),(0,a.yg)("p",null,"  New instance of ",(0,a.yg)("inlineCode",{parentName:"p"},"Sections")," class."))}d.isMDXComponent=!0}}]);