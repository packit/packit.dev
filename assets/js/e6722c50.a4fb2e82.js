"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[5624],{38516:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2024/week-14","metadata":{"permalink":"/posts/weekly/2024/week-14","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-14.md","source":"@site/weekly/2024/week-14.md","title":"Week 14 in Packit","description":"Week 14 (April 2nd \u2013 April 8th)","date":"2024-04-08T00:00:00.000Z","formattedDate":"April 8, 2024","tags":[{"label":"2024-April","permalink":"/posts/weekly/tags/2024-april"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"April","permalink":"/posts/weekly/tags/april"}],"readingTime":0.24,"hasTruncateMarker":false,"authors":[{"name":"Franti\u0161ek Lachman","email":"flachman@redhat.com","url":"https://github.com/lachmanfrantisek","imageURL":"https://github.com/lachmanfrantisek.png","key":"flachman"}],"frontMatter":{"title":"Week 14 in Packit","date":"2024-04-08T00:00:00.000Z","authors":"flachman","tags":["2024-April","2024","April"]},"nextItem":{"title":"Week 13 in Packit","permalink":"/posts/weekly/2024/week-13"}},"content":"## Week 14 (April 2nd \u2013 April 8th)\\n\\n- We have fixed a race condition that could occur when multiple `copr_build` jobs sharing a Copr project but having different targets were running at the same time. ([packit#2274](https://github.com/packit/packit/pull/2274))\\n- We have fixed reporting of tests with `manual_trigger: True`. ([packit-service#2389](https://github.com/packit/packit-service/pull/2389))"},{"id":"/2024/week-13","metadata":{"permalink":"/posts/weekly/2024/week-13","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-13.md","source":"@site/weekly/2024/week-13.md","title":"Week 13 in Packit","description":"Week 13 (March 27th \u2013 April 2nd)","date":"2024-04-02T00:00:00.000Z","formattedDate":"April 2, 2024","tags":[{"label":"2024-March","permalink":"/posts/weekly/tags/2024-march"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"March","permalink":"/posts/weekly/tags/march"}],"readingTime":0.475,"hasTruncateMarker":false,"authors":[{"name":"Nikola Forr\xf3","email":"nforro@redhat.com","url":"https://github.com/nforro","imageURL":"https://github.com/nforro.png","key":"nforro"}],"frontMatter":{"title":"Week 13 in Packit","date":"2024-04-02T00:00:00.000Z","authors":"nforro","tags":["2024-March","2024","March"]},"prevItem":{"title":"Week 14 in Packit","permalink":"/posts/weekly/2024/week-14"},"nextItem":{"title":"Week 12 in Packit","permalink":"/posts/weekly/2024/week-12"}},"content":"## Week 13 (March 27th \u2013 April 2nd)\\n\\n- The default behaviour of changelog entry generation has been changed to comply with Fedora Packaging Guidelines\\n  (see the relevant Fedora Packaging Committee [discussion](https://pagure.io/packaging-committee/issue/1339)).\\n  From now on, the default changelog entry is \\"- Update to version \\\\<version\\\\>\\".\\n  Users can still affect this behaviour using custom commands in the `changelog-entry` action\\n  or with the `copy_upstream_release_description` configuration option.\\n  ([packit#2253](https://github.com/packit/packit/pull/2253))\\n\\n- \\"[packit]\\" prefix has been removed from default dist-git commit message titles in order to prevent\\n  unnecessary noise in autogenerated changelog. Users can override this using the `commit-message` action.\\n  ([packit#2263](https://github.com/packit/packit/pull/2263))"},{"id":"/2024/week-12","metadata":{"permalink":"/posts/weekly/2024/week-12","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-12.md","source":"@site/weekly/2024/week-12.md","title":"Week 12 in Packit","description":"Week 12 (March 19th \u2013 March 25th)","date":"2024-03-25T00:00:00.000Z","formattedDate":"March 25, 2024","tags":[{"label":"2024-March","permalink":"/posts/weekly/tags/2024-march"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"March","permalink":"/posts/weekly/tags/march"}],"readingTime":0.35,"hasTruncateMarker":false,"authors":[{"name":"Laura Barcziov\xe1","email":"lbarczio@redhat.com","url":"https://github.com/lbarcziova","imageURL":"https://github.com/lbarcziova.png","key":"lbarczio"}],"frontMatter":{"title":"Week 12 in Packit","date":"2024-03-25T00:00:00.000Z","authors":"lbarczio","tags":["2024-March","2024","March"]},"prevItem":{"title":"Week 13 in Packit","permalink":"/posts/weekly/2024/week-13"},"nextItem":{"title":"Week 11 in Packit","permalink":"/posts/weekly/2024/week-11"}},"content":"## Week 12 (March 19th \u2013 March 25th)\\n\\n- Packit no longer shows status checks for not yet triggered manual tests.\\n  ([packit-service#2375](https://github.com/packit/packit-service/pull/2375))\\n- `packit validate-config` now checks whether `upstream_project_url` is set if `pull_from_upstream` job is configured.\\n  ([packit#2254](https://github.com/packit/packit/pull/2254))\\n- We have fixed an issue in `%prep` section processing. For instance, if the `%patches` macro appeared there,\\n  it would have been converted to `%patch es`, causing failure when executing `%prep` later.\\n  ([specfile#356](https://github.com/packit/specfile/pull/356))"},{"id":"/2024/week-11","metadata":{"permalink":"/posts/weekly/2024/week-11","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-11.md","source":"@site/weekly/2024/week-11.md","title":"Week 11 in Packit","description":"Week 11 (March 12th \u2013 March 18th)","date":"2024-03-18T00:00:00.000Z","formattedDate":"March 18, 2024","tags":[{"label":"2024-March","permalink":"/posts/weekly/tags/2024-march"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"March","permalink":"/posts/weekly/tags/march"}],"readingTime":0.31,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 11 in Packit","date":"2024-03-18T00:00:00.000Z","authors":"mfocko","tags":["2024-March","2024","March"]},"prevItem":{"title":"Week 12 in Packit","permalink":"/posts/weekly/2024/week-12"},"nextItem":{"title":"Week 9 in Packit","permalink":"/posts/weekly/2024/week-9"}},"content":"## Week 11 (March 12th \u2013 March 18th)\\n\\n- Don\'t have time to set up Packit? Or, do you want to see what it would look like on your package?\\n  Starting now, you can [ask the Packit team](https://github.com/packit/packit-service/issues/new?assignees=&labels=onboarding&projects=&template=onboarding.yml&title=Onboard+%5Bmy+package%5D) to prepare a config file for you. ([packit-service#2369](https://github.com/packit/packit-service/pull/2369))\\n- A trailing newline is no longer added to spec files without one upon saving. ([specfile#353](https://github.com/packit/specfile/pull/353))"},{"id":"/2024/week-9","metadata":{"permalink":"/posts/weekly/2024/week-9","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-9.md","source":"@site/weekly/2024/week-9.md","title":"Week 9 in Packit","description":"Week 9 (February 27th \u2013 March 4th)","date":"2024-03-04T00:00:00.000Z","formattedDate":"March 4, 2024","tags":[{"label":"2024-February","permalink":"/posts/weekly/tags/2024-february"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"February","permalink":"/posts/weekly/tags/february"}],"readingTime":0.315,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 9 in Packit","date":"2024-03-04T00:00:00.000Z","authors":"mfocko","tags":["2024-February","2024","February"]},"prevItem":{"title":"Week 11 in Packit","permalink":"/posts/weekly/2024/week-11"},"nextItem":{"title":"Week 8 in Packit","permalink":"/posts/weekly/2024/week-8"}},"content":"## Week 9 (February 27th \u2013 March 4th)\\n\\n- We have fixed the bug about Packit overwriting the final state of the build in case the build start is being processed later than the end of the build. ([packit-service#2358](https://github.com/packit/packit-service/pull/2358))\\n- We have improved the reporting of configuration errors in GitLab. ([packit-service#2357](https://github.com/packit/packit-service/pull/2357))\\n- `GitLabProject.get_file_content()` can now correctly handle file paths starting with `./`. ([ogr#844](https://github.com/packit/ogr/pull/844))"},{"id":"/2024/week-8","metadata":{"permalink":"/posts/weekly/2024/week-8","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-8.md","source":"@site/weekly/2024/week-8.md","title":"Week 8 in Packit","description":"Week 8 (February 20th \u2013 February 26th)","date":"2024-02-26T00:00:00.000Z","formattedDate":"February 26, 2024","tags":[{"label":"2024-February","permalink":"/posts/weekly/tags/2024-february"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"February","permalink":"/posts/weekly/tags/february"}],"readingTime":0.135,"hasTruncateMarker":false,"authors":[{"name":"Franti\u0161ek Lachman","email":"flachman@redhat.com","url":"https://github.com/lachmanfrantisek","imageURL":"https://github.com/lachmanfrantisek.png","key":"flachman"}],"frontMatter":{"title":"Week 8 in Packit","date":"2024-02-26T00:00:00.000Z","authors":"flachman","tags":["2024-February","2024","February"]},"prevItem":{"title":"Week 9 in Packit","permalink":"/posts/weekly/2024/week-9"},"nextItem":{"title":"Week 7 in Packit","permalink":"/posts/weekly/2024/week-7"}},"content":"## Week 8 (February 20th \u2013 February 26th)\\n\\n- Packit now checks the version to propose against the version in specfile and doesn\'t create downgrade PRs. ([packit#2239](https://github.com/packit/packit/pull/2239))"},{"id":"/2024/week-7","metadata":{"permalink":"/posts/weekly/2024/week-7","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-7.md","source":"@site/weekly/2024/week-7.md","title":"Week 7 in Packit","description":"Week 7 (February 13th \u2013 February 19th)","date":"2024-02-19T00:00:00.000Z","formattedDate":"February 19, 2024","tags":[{"label":"2024-February","permalink":"/posts/weekly/tags/2024-february"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"February","permalink":"/posts/weekly/tags/february"}],"readingTime":0.565,"hasTruncateMarker":false,"authors":[{"name":"Laura Barcziov\xe1","email":"lbarczio@redhat.com","url":"https://github.com/lbarcziova","imageURL":"https://github.com/lbarcziova.png","key":"lbarczio"}],"frontMatter":{"title":"Week 7 in Packit","date":"2024-02-19T00:00:00.000Z","authors":"lbarczio","tags":["2024-February","2024","February"]},"prevItem":{"title":"Week 8 in Packit","permalink":"/posts/weekly/2024/week-8"},"nextItem":{"title":"Week 6 in Packit","permalink":"/posts/weekly/2024/week-6"}},"content":"## Week 7 (February 13th \u2013 February 19th)\\n\\n- Packit now supports special value `ignore` for `trigger` in jobs configuration that indicates not to execute the job at all.\\n  This can be useful for templates or temporarily disabled jobs. ([packit#2234](https://github.com/packit/packit/pull/2234))\\n- We have fixed the caching of data for the usage API endpoint. ([packit-service#2350](https://github.com/packit/packit-service/pull/2350))\\n- We have fixed an issue that caused loading the same data multiple times on the dashboard within the project views. ([packit-service#2349](https://github.com/packit/packit-service/pull/2349))\\n- We have also fixed crashing of dashboard\'s `Usage` page in case of unsuccessful queries. ([dashboard#378](https://github.com/packit/dashboard/pull/378))\\n- We have fixed parsing of resolved Bugzillas in comments with multiple arguments specified,\\n  e.g. `/packit pull-from-upstream --with-pr-config --resolved-bugs rhbz#123`. ([packit-service#2346](https://github.com/packit/packit-service/pull/2346))"},{"id":"/2024/week-6","metadata":{"permalink":"/posts/weekly/2024/week-6","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-6.md","source":"@site/weekly/2024/week-6.md","title":"Week 6 in Packit","description":"Week 6 (February 6th \u2013 February 12th)","date":"2024-02-12T00:00:00.000Z","formattedDate":"February 12, 2024","tags":[{"label":"2024-February","permalink":"/posts/weekly/tags/2024-february"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"February","permalink":"/posts/weekly/tags/february"}],"readingTime":0.555,"hasTruncateMarker":false,"authors":[{"name":"Maja Massarini","email":"mmassari@redhat.com","url":"https://github.com/majamassarini","imageURL":"https://github.com/majamassarini.png","key":"mmassari"}],"frontMatter":{"title":"Week 6 in Packit","date":"2024-02-12T00:00:00.000Z","authors":"mmassari","tags":["2024-February","2024","February"]},"prevItem":{"title":"Week 7 in Packit","permalink":"/posts/weekly/2024/week-7"},"nextItem":{"title":"Week 5 in Packit","permalink":"/posts/weekly/2024/week-5"}},"content":"## Week 6 (February 6th \u2013 February 12th)\\n\\n- Packit now searches for bugzilla about new release created by Upstream Release Monitoring to reference each time it syncs the release downstream. ([packit#2229](https://github.com/packit/packit/pull/2229))\\n- We have introduced new CLI command `packit dist-git init` that initializes Packit configuration for release automation in dist-git repository. ([packit#2225](https://github.com/packit/packit/pull/2225))\\n- We have introduced new configuration options `require.label.present` and `require.label.absent`. By configuring these you can specify labels that need to be present or absent on a pull request for Packit to react on such PR. ([packit-service#2333](https://github.com/packit/packit-service/pull/2333))\\n- Interface for labels was unified and `labels` property for PullRequest and Issue now return list of PRLabel and IssueLabel respectively. ([ogr#839](https://github.com/packit/ogr/pull/839))"},{"id":"/2024/week-5","metadata":{"permalink":"/posts/weekly/2024/week-5","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-5.md","source":"@site/weekly/2024/week-5.md","title":"Week 5 in Packit","description":"Week 5 (January 30th \u2013 February 5th)","date":"2024-02-05T00:00:00.000Z","formattedDate":"February 5, 2024","tags":[{"label":"2024-February","permalink":"/posts/weekly/tags/2024-february"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"February","permalink":"/posts/weekly/tags/february"}],"readingTime":0.355,"hasTruncateMarker":false,"authors":[{"name":"Maja Massarini","email":"mmassari@redhat.com","url":"https://github.com/majamassarini","imageURL":"https://github.com/majamassarini.png","key":"mmassari"}],"frontMatter":{"title":"Week 5 in Packit","date":"2024-02-05T00:00:00.000Z","authors":"mmassari","tags":["2024-February","2024","February"]},"prevItem":{"title":"Week 6 in Packit","permalink":"/posts/weekly/2024/week-6"},"nextItem":{"title":"Week 4 in Packit","permalink":"/posts/weekly/2024/week-4"}},"content":"## Week 5 (January 30th \u2013 February 5th)\\n\\n- `packit validate-config` now checks whether the Upstream Release Monitoring for the package is correctly configured if `pull_from_upstream` job is present in the configuration. ([packit#2226](https://github.com/packit/packit/pull/2226))\\n- There is a new global configuration option `parse_time_macros` that allows to configure macros to be explicitly defined or undefined at spec file parse time. ([packit#2222](https://github.com/packit/packit/pull/2222))\\n- We have added additional retries and improvements for task processing. ([packit-service#2326](https://github.com/packit/packit-service/pull/2326))"},{"id":"/2024/week-4","metadata":{"permalink":"/posts/weekly/2024/week-4","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-4.md","source":"@site/weekly/2024/week-4.md","title":"Week 4 in Packit","description":"Week 4 (January 23rd \u2013 January 29th)","date":"2024-01-29T00:00:00.000Z","formattedDate":"January 29, 2024","tags":[{"label":"2024-January","permalink":"/posts/weekly/tags/2024-january"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"January","permalink":"/posts/weekly/tags/january"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 4 in Packit","date":"2024-01-29T00:00:00.000Z","authors":"mfocko","tags":["2024-January","2024","January"]},"prevItem":{"title":"Week 5 in Packit","permalink":"/posts/weekly/2024/week-5"},"nextItem":{"title":"Week 3 in Packit","permalink":"/posts/weekly/2024/week-3"}},"content":"## Week 4 (January 23rd \u2013 January 29th)\\n\\n- `pull-from-upstream` and `propose-downstream` commands now have the `--sync-acls` option that enables syncing the ACLs between dits-git repo and fork. The default behaviour was, however, **changed to not sync** the ACLs. ([packit#2214](https://github.com/packit/packit/pull/2214))\\n- Packit now properly handles exceptions when syncing ACLs during release syncing. ([packit#2213](https://github.com/packit/packit/pull/2213))\\n- `allowed_pr_authors` and `allowed_committers` now allow specifying groups and also aliases `all_admins` and `all_committers` (corresponding to the access to the repository). ([packit-service#2320](https://github.com/packit/packit-service/pull/2320))\\n- ogr now supports 2 new methods for Pagure: one for getting users with specified access rights and one for getting members of a group. ([ogr#834](https://github.com/packit/ogr/pull/834))"},{"id":"/2024/week-3","metadata":{"permalink":"/posts/weekly/2024/week-3","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-3.md","source":"@site/weekly/2024/week-3.md","title":"Week 3 in Packit","description":"Week 3 (January 16th \u2013 January 22nd)","date":"2024-01-22T00:00:00.000Z","formattedDate":"January 22, 2024","tags":[{"label":"2024-January","permalink":"/posts/weekly/tags/2024-january"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"January","permalink":"/posts/weekly/tags/january"}],"readingTime":0.5,"hasTruncateMarker":false,"authors":[{"name":"Franti\u0161ek Lachman","email":"flachman@redhat.com","url":"https://github.com/lachmanfrantisek","imageURL":"https://github.com/lachmanfrantisek.png","key":"flachman"}],"frontMatter":{"title":"Week 3 in Packit","date":"2024-01-22T00:00:00.000Z","authors":"flachman","tags":["2024-January","2024","January"]},"prevItem":{"title":"Week 4 in Packit","permalink":"/posts/weekly/2024/week-4"},"nextItem":{"title":"Week 2 in Packit","permalink":"/posts/weekly/2024/week-2"}},"content":"## Week 3 (January 16th \u2013 January 22nd)\\n\\n- Packit now properly handles exceptions when syncing ACLs during release syncing. ([packit#2213](https://github.com/packit/packit/pull/2213))\\n- We have fixed a bug in handling chroot-specific configuration once the chroots themselves are updated. ([packit#2194](https://github.com/packit/packit/pull/2194))\\n- We have increased the number of retries of Fedora release syncing for situations where the tarball is uploaded some time after the release happens. ([packit-service#2307](https://github.com/packit/packit-service/pull/2307))\\n- There is a new API endpoint `/bodhi-updates` for getting information about Bodhi updates submitted by Packit. ([packit-service#2310](https://github.com/packit/packit-service/pull/2310))\\n- For `/packit test` command, you can now also use `-i` and `--id` aliases for `--identifier` option. ([packit-service#2309](https://github.com/packit/packit-service/pull/2309))"},{"id":"/2024/week-2","metadata":{"permalink":"/posts/weekly/2024/week-2","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-2.md","source":"@site/weekly/2024/week-2.md","title":"Week 2 in Packit","description":"Week 2 (January 9th \u2013 January 15th)","date":"2024-01-15T00:00:00.000Z","formattedDate":"January 15, 2024","tags":[{"label":"2024-January","permalink":"/posts/weekly/tags/2024-january"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"January","permalink":"/posts/weekly/tags/january"}],"readingTime":0.195,"hasTruncateMarker":false,"authors":[{"name":"Laura Barcziov\xe1","email":"lbarczio@redhat.com","url":"https://github.com/lbarcziova","imageURL":"https://github.com/lbarcziova.png","key":"lbarczio"}],"frontMatter":{"title":"Week 2 in Packit","date":"2024-01-15T00:00:00.000Z","authors":"lbarczio","tags":["2024-January","2024","January"]},"prevItem":{"title":"Week 3 in Packit","permalink":"/posts/weekly/2024/week-3"},"nextItem":{"title":"Week 1 in Packit","permalink":"/posts/weekly/2024/week-1"}},"content":"## Week 2 (January 9th \u2013 January 15th)\\n\\n- We have fixed the behaviour of identifying the most recent git tag. This has previously caused issues\\n  when building SRPMs for projects with different version tags in different branches.\\n  ([packit-service#2302](https://github.com/packit/packit-service/pull/2302))"},{"id":"/2024/week-1","metadata":{"permalink":"/posts/weekly/2024/week-1","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2024/week-1.md","source":"@site/weekly/2024/week-1.md","title":"Week 1 in Packit","description":"Week 1 (January 2nd \u2013 January 8th)","date":"2024-01-08T00:00:00.000Z","formattedDate":"January 8, 2024","tags":[{"label":"2024-January","permalink":"/posts/weekly/tags/2024-january"},{"label":"2024","permalink":"/posts/weekly/tags/2024"},{"label":"January","permalink":"/posts/weekly/tags/january"}],"readingTime":0.28,"hasTruncateMarker":false,"authors":[{"name":"Nikola Forr\xf3","email":"nforro@redhat.com","url":"https://github.com/nforro","imageURL":"https://github.com/nforro.png","key":"nforro"}],"frontMatter":{"title":"Week 1 in Packit","date":"2024-01-08T00:00:00.000Z","authors":"nforro","tags":["2024-January","2024","January"]},"prevItem":{"title":"Week 2 in Packit","permalink":"/posts/weekly/2024/week-2"},"nextItem":{"title":"End of the year in Packit","permalink":"/posts/weekly/2023/week-52"}},"content":"## Week 1 (January 2nd \u2013 January 8th)\\n\\n- We have changed the behaviour of loading Packit configuration for `koji_build` and `bodhi_update` jobs.\\n  For both of them, the behaviour is the same as for `pull_from_upstream` - the configuration is taken\\n  from the default branch of the dist-git repository (usually `rawhide`) and other branches are ignored.\\n  ([packit-service#2295](https://github.com/packit/packit-service/pull/2295))"},{"id":"/2023/week-52","metadata":{"permalink":"/posts/weekly/2023/week-52","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-52.md","source":"@site/weekly/2023/week-52.md","title":"End of the year in Packit","description":"End of the year in Packit","date":"2024-01-02T00:00:00.000Z","formattedDate":"January 2, 2024","tags":[{"label":"2023-December","permalink":"/posts/weekly/tags/2023-december"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"December","permalink":"/posts/weekly/tags/december"}],"readingTime":0.55,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"End of the year in Packit","authors":"mfocko","date":"2024-01-02T00:00:00.000Z","tags":["2023-December","2023","December"]},"prevItem":{"title":"Week 1 in Packit","permalink":"/posts/weekly/2024/week-1"},"nextItem":{"title":"Week 50 in Packit","permalink":"/posts/weekly/2023/week-50"}},"content":"## End of the year in Packit\\n\\n- We have hit some issues with the firewall rules on the new cluster hosting our production. We are waiting for the required fix that is done outside of our team which should be deployed around January 11th. We will keep you informed about the current status. At the moment we are aware of the issues related to the:\\n  - `pull-from-upstream` jobs that have sources hosted at infradead.org, sourceforge.net and gitlab.gnome.org\\n  - jobs running on the gitlab.gnome.org in general\\n- We have also fixed an issue that caused some Cockpit releases to fail, others might\'ve been affected too, though there are no reports."},{"id":"/2023/week-50","metadata":{"permalink":"/posts/weekly/2023/week-50","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-50.md","source":"@site/weekly/2023/week-50.md","title":"Week 50 in Packit","description":"Week 50 (December 12th \u2013 December 18th)","date":"2023-12-18T00:00:00.000Z","formattedDate":"December 18, 2023","tags":[{"label":"2023-December","permalink":"/posts/weekly/tags/2023-december"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"December","permalink":"/posts/weekly/tags/december"}],"readingTime":0.315,"hasTruncateMarker":false,"authors":[{"name":"Nikola Forr\xf3","email":"nforro@redhat.com","url":"https://github.com/nforro","imageURL":"https://github.com/nforro.png","key":"nforro"}],"frontMatter":{"title":"Week 50 in Packit","date":"2023-12-18T00:00:00.000Z","authors":"nforro","tags":["2023-December","2023","December"]},"prevItem":{"title":"End of the year in Packit","permalink":"/posts/weekly/2023/week-52"},"nextItem":{"title":"Week 49 in Packit","permalink":"/posts/weekly/2023/week-49"}},"content":"## Week 50 (December 12th \u2013 December 18th)\\n\\n- We have fixed a bug preventing a release from being synced downstream if the changelog to be set is empty.\\n  ([packit#2183](https://github.com/packit/packit/pull/2183))\\n- We have fixed a bug of not running Koji builds for Packit dist-git PRs with multiple commits if the last commit\\n  of the PR did not contain a spec file change.\\n  ([packit-service#2275](https://github.com/packit/packit-service/pull/2275))"},{"id":"/2023/week-49","metadata":{"permalink":"/posts/weekly/2023/week-49","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-49.md","source":"@site/weekly/2023/week-49.md","title":"Week 49 in Packit","description":"Week 49 (December 5th \u2013 December 11th)","date":"2023-12-11T00:00:00.000Z","formattedDate":"December 11, 2023","tags":[{"label":"2023-December","permalink":"/posts/weekly/tags/2023-december"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"December","permalink":"/posts/weekly/tags/december"}],"readingTime":0.26,"hasTruncateMarker":false,"authors":[{"name":"Maja Massarini","email":"mmassari@redhat.com","url":"https://github.com/majamassarini","imageURL":"https://github.com/majamassarini.png","key":"mmassari"}],"frontMatter":{"title":"Week 49 in Packit","date":"2023-12-11T00:00:00.000Z","authors":"mmassari","tags":["2023-December","2023","December"]},"prevItem":{"title":"Week 50 in Packit","permalink":"/posts/weekly/2023/week-50"},"nextItem":{"title":"Packit workshop - Fedora Community Edition","permalink":"/posts/weekly/2023/packit-workshop"}},"content":"## Week 49 (December 5th \u2013 December 11th)\\n\\n- We have introduced new configuration options `test_command.default_labels` and `test_command.default_identifier` that are used by default when running `/packit test` comment command without any arguments (instead of specifying them via `--labels`/`--identifier`). ([packit-service#2270](https://github.com/packit/packit-service/pull/2270))\\n\\n- We have fixed a bug that GithubRelease.url returned an API URL. ([ogr#824](https://github.com/packit/ogr/pull/824))"},{"id":"/2023/packit-workshop","metadata":{"permalink":"/posts/weekly/2023/packit-workshop","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/packit-workshop.md","source":"@site/weekly/2023/packit-workshop.md","title":"Packit workshop - Fedora Community Edition","description":"We, the packit team, are happy to invite you to our upcoming workshop about pulling upstream releases to Fedora using Packit.","date":"2023-12-05T00:00:00.000Z","formattedDate":"December 5, 2023","tags":[{"label":"2023-December","permalink":"/posts/weekly/tags/2023-december"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"December","permalink":"/posts/weekly/tags/december"}],"readingTime":0.965,"hasTruncateMarker":false,"authors":[{"name":"Maja Massarini","email":"mmassari@redhat.com","url":"https://github.com/majamassarini","imageURL":"https://github.com/majamassarini.png","key":"mmassari"}],"frontMatter":{"title":"Packit workshop - Fedora Community Edition","date":"2023-12-05T00:00:00.000Z","authors":"mmassari","tags":["2023-December","2023","December"]},"prevItem":{"title":"Week 49 in Packit","permalink":"/posts/weekly/2023/week-49"},"nextItem":{"title":"Week 48 in Packit","permalink":"/posts/weekly/2023/week-48"}},"content":"We, the packit team, are happy to invite you to our upcoming workshop about pulling upstream releases to Fedora using Packit.\\n\\n**When: Wed, Jan 10, 9:30 AM - Wed, Jan 10, 12:30 PM (GMT+1)**\\n\\n**Where: Online!**\\n\\n**Who should attend:** Anyone who maintains a package in Fedora or EPEL and would like to automate syncing the upstream releases for it. The automation is most suitable for simple packages with straightforward update processes (e.g. without patches, or need to build in side-tags). It works without access to the upstream repository.\\n\\n**No package?** It\u2019s not an issue. The workshop can help you understand the Fedora release process and the services involved. During the workshop, you can help someone else automate their package or ask someone around if you can help with the maintenance (that\u2019s usually very welcome!). You can also bring an orphaned package back to life!\\n\\n**Can\u2019t make it this time?** You can also follow our [documentation](https://packit.dev/docs/fedora-releases-guide) and ask for help in case of any issue: #packit:fedora.im (Matrix).\\n\\n**If you want to join us please fill [this form](https://forms.gle/WnEN3KXnhRS2cf1E7) or contact us on Matrix, and we will send you further details!**\\n\\n**Looking forward to seeing you!**"},{"id":"/2023/week-48","metadata":{"permalink":"/posts/weekly/2023/week-48","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-48.md","source":"@site/weekly/2023/week-48.md","title":"Week 48 in Packit","description":"Week 48 (November 28th \u2013 December 4th)","date":"2023-12-04T00:00:00.000Z","formattedDate":"December 4, 2023","tags":[{"label":"2023-November","permalink":"/posts/weekly/tags/2023-november"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"November","permalink":"/posts/weekly/tags/november"}],"readingTime":0.495,"hasTruncateMarker":false,"authors":[{"name":"Nikola Forr\xf3","email":"nforro@redhat.com","url":"https://github.com/nforro","imageURL":"https://github.com/nforro.png","key":"nforro"}],"frontMatter":{"title":"Week 48 in Packit","date":"2023-12-04T00:00:00.000Z","authors":"nforro","tags":["2023-November","2023","November"]},"prevItem":{"title":"Packit workshop - Fedora Community Edition","permalink":"/posts/weekly/2023/packit-workshop"},"nextItem":{"title":"Week 47 in Packit","permalink":"/posts/weekly/2023/week-47"}},"content":"## Week 48 (November 28th \u2013 December 4th)\\n\\n- Packit now links the information related to upstream events in PRs opened when syncing a release.\\n  ([packit#2173](https://github.com/packit/packit/pull/2173))\\n\\n- When accessing tags or macro definitions by name, specfile library now takes validity into account\\n  when looking for the best match. For example if there are two instances of `Version` tag,\\n  one in the true and one in the false branch of a condition, `Specfile.version` will always access\\n  the one that is in the true branch.\\n  This also applies to Packit when syncing a release and updating value of `Version` tag.\\n  ([specfile#328](https://github.com/packit/specfile/pull/328))"},{"id":"/2023/week-47","metadata":{"permalink":"/posts/weekly/2023/week-47","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-47.md","source":"@site/weekly/2023/week-47.md","title":"Week 47 in Packit","description":"Week 47 (November 21st \u2013 November 27th)","date":"2023-11-27T00:00:00.000Z","formattedDate":"November 27, 2023","tags":[{"label":"2023-November","permalink":"/posts/weekly/tags/2023-november"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"November","permalink":"/posts/weekly/tags/november"}],"readingTime":0.16,"hasTruncateMarker":false,"authors":[{"name":"Franti\u0161ek Lachman","email":"flachman@redhat.com","url":"https://github.com/lachmanfrantisek","imageURL":"https://github.com/lachmanfrantisek.png","key":"flachman"}],"frontMatter":{"title":"Week 47 in Packit","date":"2023-11-27T00:00:00.000Z","authors":"flachman","tags":["2023-November","2023","November"]},"prevItem":{"title":"Week 48 in Packit","permalink":"/posts/weekly/2023/week-48"},"nextItem":{"title":"Week 46 in Packit","permalink":"/posts/weekly/2023/week-46"}},"content":"## Week 47 (November 21st \u2013 November 27th)\\n\\n- Packit now correctly sets the specfile content (e.g. changelog entry) even if it syncs the specfile from upstream for the first time. ([packit#2170](https://github.com/packit/packit/pull/2170))"},{"id":"/2023/week-46","metadata":{"permalink":"/posts/weekly/2023/week-46","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-46.md","source":"@site/weekly/2023/week-46.md","title":"Week 46 in Packit","description":"Week 46 (November 14th \u2013 November 20th)","date":"2023-11-20T00:00:00.000Z","formattedDate":"November 20, 2023","tags":[{"label":"2023-November","permalink":"/posts/weekly/tags/2023-november"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"November","permalink":"/posts/weekly/tags/november"}],"readingTime":0.755,"hasTruncateMarker":false,"authors":[{"name":"Laura Barcziov\xe1","email":"lbarczio@redhat.com","url":"https://github.com/lbarcziova","imageURL":"https://github.com/lbarcziova.png","key":"lbarczio"}],"frontMatter":{"title":"Week 46 in Packit","date":"2023-11-20T00:00:00.000Z","authors":"lbarczio","tags":["2023-November","2023","November"]},"prevItem":{"title":"Week 47 in Packit","permalink":"/posts/weekly/2023/week-47"},"nextItem":{"title":"Week 45 in Packit","permalink":"/posts/weekly/2023/week-45"}},"content":"## Week 46 (November 14th \u2013 November 20th)\\n\\n- Packit now supports pre-release version in `propose_downstream` and `pull_from_upstream`.\\n  A spec file update might be required, see [the documentation](/docs/pre-releases) for more details.\\n  ([packit#2149](https://github.com/packit/packit/pull/2149))\\n  - In relation to that, specfile library has a new method, `Specfile.update_version()`, that allows updating spec file\\n    version even if it is a pre-release. ([specfile#317](https://github.com/packit/specfile/pull/317))\\n- Packit can now check, using the new `update_version_mask` configuration option, that the proposed version of new release\\n  and the current version of the dist-git branch are compatible and sync the dist-git branch only in that case.\\n  ([packit#2156](https://github.com/packit/packit/pull/2156))\\n- Packit is now able to get the version from spec file even if the `Version` tag is not present in the specfile directly,\\n  but e.g. imported from another file. ([packit#2157](https://github.com/packit/packit/pull/2157))\\n- `PACKIT_COPR_PROJECT` env var that is exposed to Testing Farm now includes the Copr project of the additional build\\n  specified in comment, if present. ([packit-service#2253](https://github.com/packit/packit-service/pull/2253))"},{"id":"/2023/week-45","metadata":{"permalink":"/posts/weekly/2023/week-45","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-45.md","source":"@site/weekly/2023/week-45.md","title":"Week 45 in Packit","description":"Week 45 (November 7th \u2013 November 13th)","date":"2023-11-13T00:00:00.000Z","formattedDate":"November 13, 2023","tags":[{"label":"2023-November","permalink":"/posts/weekly/tags/2023-november"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"November","permalink":"/posts/weekly/tags/november"}],"readingTime":0.255,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 45 in Packit","date":"2023-11-13T00:00:00.000Z","authors":"mfocko","tags":["2023-November","2023","November"]},"prevItem":{"title":"Week 46 in Packit","permalink":"/posts/weekly/2023/week-46"},"nextItem":{"title":"Week 44 in Packit","permalink":"/posts/weekly/2023/week-44"}},"content":"## Week 45 (November 7th \u2013 November 13th)\\n\\n- Now Packit allows `~^+` (special characters) in a tag (used for building the version string). ([packit#2154](https://github.com/packit/packit/pull/2154))\\n- Downstream Koji builds are now shown in a separate table in `/jobs/downstream-koji-builds` on dashboard and are also accessible via `/api/koji-builds` API endpoint. ([packit-service#2244](https://github.com/packit/packit-service/pull/2244), [packit-service#2249](https://github.com/packit/packit-service/pull/2249), [dashboard#354](https://github.com/packit/dashboard/pull/354))"},{"id":"/2023/week-44","metadata":{"permalink":"/posts/weekly/2023/week-44","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-44.md","source":"@site/weekly/2023/week-44.md","title":"Week 44 in Packit","description":"Week 44 (October 31st \u2013 November 6th)","date":"2023-11-06T00:00:00.000Z","formattedDate":"November 6, 2023","tags":[{"label":"2023-October","permalink":"/posts/weekly/tags/2023-october"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"October","permalink":"/posts/weekly/tags/october"}],"readingTime":0.11,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Week 44 in Packit","date":"2023-11-06T00:00:00.000Z","tags":["2023-October","2023","October"]},"prevItem":{"title":"Week 45 in Packit","permalink":"/posts/weekly/2023/week-45"},"nextItem":{"title":"Week 43 in Packit","permalink":"/posts/weekly/2023/week-43"}},"content":"## Week 44 (October 31st \u2013 November 6th)\\n\\n- Dist tag (`%{?dist}`) is now enforced when updating release during SRPM creation. ([packit#2106](https://github.com/packit/packit/pull/2106))"},{"id":"/2023/week-43","metadata":{"permalink":"/posts/weekly/2023/week-43","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-43.md","source":"@site/weekly/2023/week-43.md","title":"Week 43 in Packit","description":"Week 43 (October 24th \u2013 October 30th)","date":"2023-10-30T00:00:00.000Z","formattedDate":"October 30, 2023","tags":[{"label":"2023-October","permalink":"/posts/weekly/tags/2023-october"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"October","permalink":"/posts/weekly/tags/october"}],"readingTime":0.1,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Week 43 in Packit","date":"2023-10-30T00:00:00.000Z","tags":["2023-October","2023","October"]},"prevItem":{"title":"Week 44 in Packit","permalink":"/posts/weekly/2023/week-44"},"nextItem":{"title":"Week 41 in Packit","permalink":"/posts/weekly/2023/week-41"}},"content":"## Week 43 (October 24th \u2013 October 30th)\\n\\n- Packit no longer downloads sources excluded using spec file conditions. ([packit#2132](https://github.com/packit/packit/pull/2132))"},{"id":"/2023/week-41","metadata":{"permalink":"/posts/weekly/2023/week-41","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-41.md","source":"@site/weekly/2023/week-41.md","title":"Week 41 in Packit","description":"Week 41 (October 10th \u2013 October 16th)","date":"2023-10-16T00:00:00.000Z","formattedDate":"October 16, 2023","tags":[{"label":"2023-October","permalink":"/posts/weekly/tags/2023-october"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"October","permalink":"/posts/weekly/tags/october"}],"readingTime":1.03,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Week 41 in Packit","date":"2023-10-16T00:00:00.000Z","tags":["2023-October","2023","October"]},"prevItem":{"title":"Week 43 in Packit","permalink":"/posts/weekly/2023/week-43"},"nextItem":{"title":"Week 40 in Packit","permalink":"/posts/weekly/2023/week-40"}},"content":"## Week 41 (October 10th \u2013 October 16th)\\n\\n- (_breaking_) Packit no longer accepts `packit.json` or `.packit.json` as a configuration file name.\\n  ([packit#2123](https://github.com/packit/packit/pull/2123))\\n- We have implemented several improvements in syncing the release downstream:\\n  - Packit now updates ACL of its own dist-git forks to allow users and groups with commit rights to the original\\n    dist-git repo to push directly to a fork. ([packit#2112](https://github.com/packit/packit/pull/2112))\\n  - Packit now also properly cleans up the branch after syncing the release which should prevent unwanted files\\n    (e.g. tarballs) being committed to dist-git. ([packit#2125](https://github.com/packit/packit/pull/2125))\\n  - We have adjusted the way how Packit includes the resolved bugzillas in the commit messages created when syncing the release\\n    downstream so that the resolved bugzillas are included in changelog when using `%autochangelog`.\\n    ([packit#2126](https://github.com/packit/packit/pull/2126))\\n- Packit now reacts to retriggering comments for downstream jobs by commenting on the same issue/PR and\\n  providing information about the jobs. ([packit-service#2222](https://github.com/packit/packit-service/pull/2222))\\n- We have fixed an issue that prevented you from running the jobs on the GitLab.com due to failing resolution\\n  of the upstream/downstream relationship for the cloned project. ([packit#2120](https://github.com/packit/packit/pull/2120))\\n- Packit now triggers the build for the `/packit test` comment command if the last build was not successful.\\n  ([packit-service#2228](https://github.com/packit/packit-service/pull/2228))\\n\\nAnd special thanks to [@SpyTec](https://github.com/SpyTec)\\nfor multiple wonderful [dashboard improvements](https://github.com/packit/dashboard/pulls?q=is%3Apr+author%3ASpyTec+merged%3A2023-10-10..2023-10-16)!"},{"id":"/2023/week-40","metadata":{"permalink":"/posts/weekly/2023/week-40","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-40.md","source":"@site/weekly/2023/week-40.md","title":"Week 40 in Packit","description":"Week 40 (October 3rd \u2013 October 9th)","date":"2023-10-09T00:00:00.000Z","formattedDate":"October 9, 2023","tags":[{"label":"2023-October","permalink":"/posts/weekly/tags/2023-october"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"October","permalink":"/posts/weekly/tags/october"}],"readingTime":0.605,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 40 in Packit","date":"2023-10-09T00:00:00.000Z","authors":"mfocko","tags":["2023-October","2023","October"]},"prevItem":{"title":"Week 41 in Packit","permalink":"/posts/weekly/2023/week-41"},"nextItem":{"title":"Week 39 in Packit","permalink":"/posts/weekly/2023/week-39"}},"content":"## Week 40 (October 3rd \u2013 October 9th)\\n\\n- We have fixed an issue that you could encounter when running the Packit from the CLI that caused misinterpretation of the repository to be an upstream repo instead of a downstream. ([packit#2117](https://github.com/packit/packit/pull/2117))\\n- Packit now also detects resolved bugs in the default update notes (created from changelog diff) and assigns these when submitting the Bodhi updates. ([packit#2111](https://github.com/packit/packit/pull/2111))\\n- We have fixed an issue that prevented automated allowlisting in the Packit Service. ([packit#2113](https://github.com/packit/packit/pull/2113))\\n- Packit now exports `PACKIT_UPSTREAM_PACKAGE_NAME`, `PACKIT_DOWNSTREAM_PACKAGE_NAME` and `PACKIT_CONFIG_PACKAGE_NAME` also in the `changelog_entry` action. ([packit#2103](https://github.com/packit/packit/pull/2103))\\n- Packit now posts a comment with a link to the Packit dashboard to the pull requests created in Fedora dist-git when syncing the release. ([packit-service#2215](https://github.com/packit/packit-service/pull/2215))"},{"id":"/2023/week-39","metadata":{"permalink":"/posts/weekly/2023/week-39","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-39.md","source":"@site/weekly/2023/week-39.md","title":"Week 39 in Packit","description":"Week 39 (September 26th \u2013 October 2nd)","date":"2023-10-02T00:00:00.000Z","formattedDate":"October 2, 2023","tags":[{"label":"2023-September","permalink":"/posts/weekly/tags/2023-september"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"September","permalink":"/posts/weekly/tags/september"}],"readingTime":0.74,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Week 39 in Packit","date":"2023-10-02T00:00:00.000Z","tags":["2023-September","2023","September"]},"prevItem":{"title":"Week 40 in Packit","permalink":"/posts/weekly/2023/week-40"},"nextItem":{"title":"Week 38 in Packit","permalink":"/posts/weekly/2023/week-38"}},"content":"## Week 39 (September 26th \u2013 October 2nd)\\n\\n- When using packit CLI you can now specify bugs resolved by an update by `-b` or `--resolve-bug` option for `propose-downstream` and `pull-from-upstream` commands. The values will be added by default to the changelog and commit message and provided in `commit-message` and `changelog-entry` actions as `PACKIT_RESOLVED_BUGS` env variable. ([packit#2094](https://github.com/packit/packit/pull/2094))\\n- Packit-service now automatically adds bugzilla created by Upstream Release Monitoring as `- Resolves {bugzilla} ` to the changelog (or commit if autochangelog is used) and provides the value in `commit-message` and `changelog-entry` actions as `PACKIT_RESOLVED_BUGS` env variable. When retriggering the `pull-from-upstream` from comment, one can also specify the bug(s) as `/packit pull-from-upstream --resolved-bugs rhbz#123,rhbz#125` and Packit will do the same. ([packit-service#2193](https://github.com/packit/packit-service/pull/2193))\\n- You can now configure `notifications.failure_comment.message` also for downstream jobs, where the configured message will be used as an extension of the comment added by default by Packit. ([packit-service#2199](https://github.com/packit/packit-service/pull/2199))"},{"id":"/2023/week-38","metadata":{"permalink":"/posts/weekly/2023/week-38","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-38.md","source":"@site/weekly/2023/week-38.md","title":"Week 38 in Packit","description":"Week 38 (September 19th \u2013 September 25th)","date":"2023-09-25T00:00:00.000Z","formattedDate":"September 25, 2023","tags":[{"label":"2023-September","permalink":"/posts/weekly/tags/2023-september"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"September","permalink":"/posts/weekly/tags/september"}],"readingTime":0.395,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Week 38 in Packit","date":"2023-09-25T00:00:00.000Z","tags":["2023-September","2023","September"]},"prevItem":{"title":"Week 39 in Packit","permalink":"/posts/weekly/2023/week-39"},"nextItem":{"title":"Week 37 in Packit","permalink":"/posts/weekly/2023/week-37"}},"content":"## Week 38 (September 19th \u2013 September 25th)\\n\\n- As part of the effort of implementing release syncing for CentOS Stream,\\n  Packit now supports the `pkg_tool` option in the config\\n  (at the top-level or with specific packages when using the monorepo syntax).\\n  This option can be used for switching between `fedpkg` or `centpkg`.\\n  ([packit#2085](https://github.com/packit/packit/pull/2085))\\n- When updating the `Version` tag during `propose_downstream` or `pull_from_upstream`,\\n  Packit now tries to update referenced macros (if any) rather than overwriting the references.\\n  ([packit#2087](https://github.com/packit/packit/pull/2087))"},{"id":"/2023/week-37","metadata":{"permalink":"/posts/weekly/2023/week-37","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-37.md","source":"@site/weekly/2023/week-37.md","title":"Week 37 in Packit","description":"Week 37 (September 12th \u2013 September 18th)","date":"2023-09-18T00:00:00.000Z","formattedDate":"September 18, 2023","tags":[{"label":"2023-September","permalink":"/posts/weekly/tags/2023-september"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"September","permalink":"/posts/weekly/tags/september"}],"readingTime":0.3,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Week 37 in Packit","date":"2023-09-18T00:00:00.000Z","tags":["2023-September","2023","September"]},"prevItem":{"title":"Week 38 in Packit","permalink":"/posts/weekly/2023/week-38"},"nextItem":{"title":"Week 36 in Packit","permalink":"/posts/weekly/2023/week-36"}},"content":"## Week 37 (September 12th \u2013 September 18th)\\n\\n- If you have concerns about Packit uploading new archives to lookaside cache before creating a pull request, you can newly set `upload_sources` to False to disable this. ([packit#2086](https://github.com/packit/packit/pull/2086))\\n- We have introduced a new configuration option `notifications.failure_comment.message` that enables notifying users on failure via a comment using the configured message. ([packit-service#2182](https://github.com/packit/packit-service/pull/2182))"},{"id":"/2023/week-36","metadata":{"permalink":"/posts/weekly/2023/week-36","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-36.md","source":"@site/weekly/2023/week-36.md","title":"Week 36 in Packit","description":"Week 36 (September 5th \u2013 September 11th)","date":"2023-09-11T00:00:00.000Z","formattedDate":"September 11, 2023","tags":[{"label":"2023-September","permalink":"/posts/weekly/tags/2023-september"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"September","permalink":"/posts/weekly/tags/september"}],"readingTime":0.855,"hasTruncateMarker":false,"authors":[{"name":"Franti\u0161ek Lachman","email":"flachman@redhat.com","url":"https://github.com/lachmanfrantisek","imageURL":"https://github.com/lachmanfrantisek.png","key":"flachman"}],"frontMatter":{"title":"Week 36 in Packit","date":"2023-09-11T00:00:00.000Z","authors":"flachman","tags":["2023-September","2023","September"]},"prevItem":{"title":"Week 37 in Packit","permalink":"/posts/weekly/2023/week-37"},"nextItem":{"title":"Week 35 in Packit","permalink":"/posts/weekly/2023/week-35"}},"content":"## Week 36 (September 5th \u2013 September 11th)\\n\\n- Packit now supports `commit-message` action that can be used to override the default commit message produced by Packit during `propose-downstream` or `pull-from-upstream`. Please pay attention to [our documentation](https://packit.dev/docs/configuration/actions#commit-message) with regards to the usage of this action. ([packit#2070](https://github.com/packit/packit/pull/2070))\\n- Packit CLI now supports testing the `pull-from-upstream` workflow.\\n  Use the `packit pull-from-upstream` command from the `packit` RPM package. ([packit#2063](https://github.com/packit/packit/pull/2063))\\n- Packit now passes `initiator` context for tmt to the Testing Farm. You can use [this option](https://tmt.readthedocs.io/en/latest/spec/context.html#initiator) to run or skip certain tests when they\'re run by Packit. ([packit-service#2176](https://github.com/packit/packit-service/pull/2176))\\n- Testing Farm started additionally exposing regexes on top of the exact compose names in the /composes/ endpoints, and we now support this as well when checking the validity of compose. ([packit-service#2168](https://github.com/packit/packit-service/pull/2168))\\n- We have disabled the jitter for retrying Bodhi update tasks to prevent race conditions causing not created updates. ([packit-service#2170](https://github.com/packit/packit-service/pull/2170))\\n- We have fixed a bug in `get_fork` method for Pagure about checking the usernames for a match when going through existing forks. ([ogr#800](https://github.com/packit/ogr/pull/800))"},{"id":"/2023/week-35","metadata":{"permalink":"/posts/weekly/2023/week-35","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-35.md","source":"@site/weekly/2023/week-35.md","title":"Week 35 in Packit","description":"Week 35 (August 29th \u2013 September 4th)","date":"2023-09-04T00:00:00.000Z","formattedDate":"September 4, 2023","tags":[{"label":"2023-August","permalink":"/posts/weekly/tags/2023-august"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"August","permalink":"/posts/weekly/tags/august"}],"readingTime":0.325,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 35 in Packit","date":"2023-09-04T00:00:00.000Z","authors":"mfocko","tags":["2023-August","2023","August"]},"prevItem":{"title":"Week 36 in Packit","permalink":"/posts/weekly/2023/week-36"},"nextItem":{"title":"Week 34 in Packit","permalink":"/posts/weekly/2023/week-34"}},"content":"## Week 35 (August 29th \u2013 September 4th)\\n\\n- Now Packit exposes `PACKIT_PACKAGE_NAME`, `PACKIT_UPSTREAM_PACKAGE_NAME` and `PACKIT_DOWNSTREAM_PACKAGE_NAME` env variables to all the actions. ([packit#2061](https://github.com/packit/packit/pull/2061))\\n- Packit now sets `PACKIT_UPSTREAM_REPO` and `PACKIT_DOWNSTREAM_REPO` environment variables for release syncing actions. The variables represent paths where the respective git repositories are cloned ([packit-service#2166](https://github.com/packit/packit-service/pull/2166))\\n- We have fixed a bug causing issues with displaying some `Project` views on our dashboard. ([packit-service#2165](https://github.com/packit/packit-service/pull/2165))"},{"id":"/2023/week-34","metadata":{"permalink":"/posts/weekly/2023/week-34","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-34.md","source":"@site/weekly/2023/week-34.md","title":"Week 34 in Packit","description":"Week 34 (August 22nd \u2013 August 28th)","date":"2023-08-28T00:00:00.000Z","formattedDate":"August 28, 2023","tags":[{"label":"2023-August","permalink":"/posts/weekly/tags/2023-august"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"August","permalink":"/posts/weekly/tags/august"}],"readingTime":0.865,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 34 in Packit","date":"2023-08-28T00:00:00.000Z","authors":"mfocko","tags":["2023-August","2023","August"]},"prevItem":{"title":"Week 35 in Packit","permalink":"/posts/weekly/2023/week-35"},"nextItem":{"title":"Week 32 in Packit","permalink":"/posts/weekly/2023/week-32"}},"content":"## Week 34 (August 22nd \u2013 August 28th)\\n\\n- We have fixed a bug in `packit source-git init` caused by the changed behaviour in the newer version of rpmbuild. ([packit#2048](https://github.com/packit/packit/pull/2048))\\n- We have fixed an issue in our API endpoint that could cause DoS until manual intervention from our team. ([packit-service#2164](https://github.com/packit/packit-service/pull/2164))\\n- We have fixed a bug causing broken retriggering of Github checks. ([packit-service#2161](https://github.com/packit/packit-service/pull/2161))\\n- SRPM build commit statuses, for monorepos projects, are now being correctly updated. ([packit-service#2157](https://github.com/packit/packit-service/pull/2157))\\n- We have fixed the bug resulting in incorrect reporting for tests when retriggering a build of a different target that was not configured for tests. ([packit-service#2144](https://github.com/packit/packit-service/pull/2144))\\n- We have fixed an issue that caused retriggers of Testing Farm to fail, if you specified any labels in the comment and had one or more test job definitions without any labels specified. ([packit-service#2156](https://github.com/packit/packit-service/pull/2156))\\n- Macro definitions and tags gained a new `valid` attribute. A macro definition/tag is considered valid if it doesn\'t appear in a false branch of any condition appearing in the spec file. ([specfile#276](https://github.com/packit/specfile/pull/276))"},{"id":"/2023/week-32","metadata":{"permalink":"/posts/weekly/2023/week-32","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-32.md","source":"@site/weekly/2023/week-32.md","title":"Week 32 in Packit","description":"Week 32 (August 8th \u2013 August 14th)","date":"2023-08-14T00:00:00.000Z","formattedDate":"August 14, 2023","tags":[{"label":"2023-August","permalink":"/posts/weekly/tags/2023-august"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"August","permalink":"/posts/weekly/tags/august"}],"readingTime":0.42,"hasTruncateMarker":false,"authors":[{"name":"Franti\u0161ek Lachman","email":"flachman@redhat.com","url":"https://github.com/lachmanfrantisek","imageURL":"https://github.com/lachmanfrantisek.png","key":"flachman"}],"frontMatter":{"title":"Week 32 in Packit","date":"2023-08-14T00:00:00.000Z","authors":"flachman","tags":["2023-August","2023","August"]},"prevItem":{"title":"Week 34 in Packit","permalink":"/posts/weekly/2023/week-34"},"nextItem":{"title":"Week 31 in Packit","permalink":"/posts/weekly/2023/week-31"}},"content":"## Week 32 (August 8th \u2013 August 14th)\\n\\n- Two new configuration options for filtering when getting latest upstream release tag were introduced: `upstream_tag_include` and `upstream_tag_exclude`. They should contain a Python regex that can be used as an argument in `re.match`. ([packit#2030](https://github.com/packit/packit/pull/2030), [packit-service#2138](https://github.com/packit/packit-service/pull/2138))\\n- Retriggering of `pull-from-upstream` via a comment will now use the correct configuration file from the default dist-git branch. ([packit-service#2140](https://github.com/packit/packit-service/pull/2140))\\n- The `pull-from-upstream` job can now be used with upstream repos that are not hosted on a supported git forge. ([packit-service#2137](https://github.com/packit/packit-service/pull/2137))"},{"id":"/2023/week-31","metadata":{"permalink":"/posts/weekly/2023/week-31","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2023/week-31.md","source":"@site/weekly/2023/week-31.md","title":"Week 31 in Packit","description":"- Licenses in Packit specfiles are now confirmed to be SPDX-compatible. (example PR: packit#2026)","date":"2023-08-07T00:00:00.000Z","formattedDate":"August 7, 2023","tags":[{"label":"2023-August","permalink":"/posts/weekly/tags/2023-august"},{"label":"2023","permalink":"/posts/weekly/tags/2023"},{"label":"August","permalink":"/posts/weekly/tags/august"}],"readingTime":0.145,"hasTruncateMarker":false,"authors":[{"name":"Matej Focko","email":"mfocko@redhat.com","url":"https://github.com/mfocko","imageURL":"https://github.com/mfocko.png","key":"mfocko"}],"frontMatter":{"title":"Week 31 in Packit","date":"2023-08-07T00:00:00.000Z","authors":"mfocko","tags":["2023-August","2023","August"]},"prevItem":{"title":"Week 32 in Packit","permalink":"/posts/weekly/2023/week-32"},"nextItem":{"title":"July 2023","permalink":"/posts/weekly/July-2023"}},"content":"- Licenses in Packit specfiles are now confirmed to be SPDX-compatible. (example PR: [packit#2026](https://github.com/packit/packit/pull/2026))\\n  If you are interested in more details, see a [talk](https://www.youtube.com/watch?v=Hjhe6jtx3Zw&t=8651s) from Flock 2023 by Mirek."},{"id":"/July-2023","metadata":{"permalink":"/posts/weekly/July-2023","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/July-2023.md","source":"@site/weekly/July-2023.md","title":"July 2023","description":"Week 27 (July 4th \u2013 July 10th)","date":"2023-07-10T13:49:53.000Z","formattedDate":"July 10, 2023","tags":[{"label":"2023","permalink":"/posts/weekly/tags/2023"}],"readingTime":0.81,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"July 2023","date":"2023-07-10T13:49:53.000Z","tags":["2023"]},"prevItem":{"title":"Week 31 in Packit","permalink":"/posts/weekly/2023/week-31"},"nextItem":{"title":"June 2023","permalink":"/posts/weekly/June-2023"}},"content":"## Week 27 (July 4th \u2013 July 10th)\\n\\n- Packit now correctly reloads upstream specfile after running `pre-sync` action. ([packit#2006](https://github.com/packit/packit/pull/2006))\\n\\n## Week 28 (July 11th \u2013 July 17th)\\n\\n- Packit now includes instructions on how to checkout the dist-git PR locally when syncing the release.\\n  ([packit-service#2116](https://github.com/packit/packit-service/pull/2116))\\n- We have fixed a bug in processing options of `%prep` macros in our `specfile` library. For instance, when a quoted\\n  string appeared inside an expression expansion, it could lead to improper parsing, rendering the spec file invalid\\n  after accessing the options. ([specfile#253](https://github.com/packit/specfile/pull/253))\\n- packit.dev has a new format! As the content has expanded a lot in the recent year, we decided to switch to using\\n  [Docosaurus](https://docusaurus.io/):\\n  now all the documentation is in one place and this format also enables additional features for our blog posts.\\n  ([packit.dev#694](https://github.com/packit/packit.dev/pull/694))\\n\\n## Weeks 29\u201330 (July 18th \u2013 July 31st)\\n\\n- With plenty of team members on vacation, we didn\'t manage to implement any significant new features during these two weeks."},{"id":"/June-2023","metadata":{"permalink":"/posts/weekly/June-2023","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/June-2023.md","source":"@site/weekly/June-2023.md","title":"June 2023","description":"Week 22 (May 30th \u2013 June 5th)","date":"2023-06-05T22:18:53.000Z","formattedDate":"June 5, 2023","tags":[{"label":"2023","permalink":"/posts/weekly/tags/2023"}],"readingTime":1.87,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"June 2023","date":"2023-06-05T22:18:53.000Z","tags":["2023"]},"prevItem":{"title":"July 2023","permalink":"/posts/weekly/July-2023"},"nextItem":{"title":"May 2023","permalink":"/posts/weekly/May-2023"}},"content":"## Week 22 (May 30th \u2013 June 5th)\\n\\n- Packit will now filter the pull requests based on the target branch if the `branch` is specified in the particular job configuration. ([packit-service#2074](https://github.com/packit/packit-service/pull/2074))\\n- Packit now supports `manual_trigger` in the configuration that allows you to make jobs run only when explicitly triggered by a comment. ([packit-service#2069](https://github.com/packit/packit-service/pull/2069))\\n\\n## Week 23 (June 6th \u2013 June 12th)\\n\\n- Our dashboard now shows projects in a table instead of the cards.\\n  ([dashboard#267](https://github.com/packit/dashboard/pull/267))\\n- `/packit test` command has two new options:\\n\\n  With `--identifier` option, Testing Farm will trigger only jobs with that identifier.\\n  ([packit-service#2079](https://github.com/packit/packit-service/pull/2079))\\n\\n  Also, it is now possible to specify labels for a job and trigger tests based on labels\\n  using a `--labels` option of the `/packit test` command.\\n  ([packit#1988](https://github.com/packit/packit/pull/1988),\\n  [packit-service#2088](https://github.com/packit/packit-service/pull/2088))\\n\\n- If the `vm_image_build job` doesn\'t have Copr project/owner configured,\\n  Copr project used for the latest Copr build of the pull request will be now used.\\n  ([packit-service#2080](https://github.com/packit/packit-service/pull/2080))\\n- Fixed filters in `files_to_sync` not being applied properly.\\n  ([packit#1977](https://github.com/packit/packit/pull/1977))\\n- The issue that could\'ve caused inconsistencies when tests from a PR\\n  were supposed to be merged during the test runs on the Testing Farm has been fixed.\\n  ([packit-service#2090](https://github.com/packit/packit-service/pull/2090))\\n\\n## Week 24 (June 13th \u2013 June 19th)\\n\\n- Packit now includes dist-git branch in the title of the PRs for `propose-downstream` and `pull-from-upstream`.\\n  ([packit#1996](https://github.com/packit/packit/pull/1996))\\n\\n- Many dashboard issues have been fixed during the\\n  [Contribute to an Open Source Service](https://sched.co/1MvMM)\\n  workshop at [DevConf.CZ](https://www.devconf.info/cz/).\\n  [Stef Walter](https://github.com/stefwalter),\\n  [Erik Gustavsson](https://github.com/SpyTec),\\n  [Roman Braunstingl](https://github.com/RFJBraunstingl),\\n  [Jaroslav Reznik](https://github.com/jreznik),\\n  [Christophe de Dinechin](https://github.com/c3d),\\n  [Gris Ge](https://github.com/cathay4t)\\n  and [David Duncan](https://github.com/davdunc),\\n  thank you for your contribution!\\n  ([dashboard#291](https://github.com/packit/dashboard/pull/291),\\n  [dashboard#292](https://github.com/packit/dashboard/pull/292),\\n  [dashboard#293](https://github.com/packit/dashboard/pull/293),\\n  [dashboard#294](https://github.com/packit/dashboard/pull/294),\\n  [dashboard#295](https://github.com/packit/dashboard/pull/295))\\n\\n## Week 25 (June 21st \u2013 June 27th)\\n\\n- If you are interested about the manual triggering deployed two weeks ago, David Kornel and Jakub Stejskal published [a blog post](https://fedoramagazine.org/how-to-use-testing-farm-outside-of-rhel/) about this on fedoramagazine.org.\\n- Copr builds configured as a monorepo job will now be built in one Copr project together. The bug with overwriting the statuses for monorepo jobs has been fixed as well. ([packit-service#2097](https://github.com/packit/packit-service/pull/2097))\\n\\n## Week 26 (June 27th \u2013 July 3rd)\\n\\n- The bug which prevented errors on Testing Farm request submission from being\\n  correctly propagated to the user was fixed.\\n  ([packit-service#2103](https://github.com/packit/packit-service/pull/2103))\\n- `pull_from_upstream` jobs can now be retriggered with a comment\\n  `/packit pull-from-upstream` in a dist-git pull request.\\n  ([packit-service#2087](https://github.com/packit/packit-service/pull/2087))"},{"id":"/May-2023","metadata":{"permalink":"/posts/weekly/May-2023","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/May-2023.md","source":"@site/weekly/May-2023.md","title":"May 2023","description":"Week 18 (May 4th - May 9th)","date":"2023-05-10T06:41:12.000Z","formattedDate":"May 10, 2023","tags":[{"label":"2023","permalink":"/posts/weekly/tags/2023"}],"readingTime":1.51,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"May 2023","date":"2023-05-10T06:41:12.000Z","tags":["2023"]},"prevItem":{"title":"June 2023","permalink":"/posts/weekly/June-2023"},"nextItem":{"title":"April 2023","permalink":"/posts/weekly/April-2023"}},"content":"## Week 18 (May 4th - May 9th)\\n\\nWe have experienced issues with automatic Bodhi updates that we are investigating.\\nIn case you miss a Bodhi update, you can\\n[retrigger the job](https://packit.dev/docs/fedora-releases-guide/#retriggering-2) via `/packit create-update`\\ncomment in a dist-git pull request.\\nBesides that, during this short week (another Czech Republic public holiday) we didn\'t manage to implement\\nany significant new features.\\n\\n## Week 19 (May 9th \u2013 May 15th)\\n\\n- Packit now doesn\'t react to its own comments on Pagure and GitLab (on GitHub, this was already implemented).\\n  ([packit-service#2048](https://github.com/packit/packit-service/pull/2048))\\n\\n## Week 20 (May 16th \u2013 May 22nd)\\n\\n- We have implemented a denylisting mechanism allowing us to denylist namespaces/projects to prevent misuse of our service. ([packit-service#2046](https://github.com/packit/packit-service/pull/2046))\\n- Packit will now additionally require for each test job requiring build a build job definition to be present in the Packit configuration file. ([packit-service#2012](https://github.com/packit/packit-service/pull/2012))\\n- Packit now checks whether the configured architecture for the test target is supported by Testing Farm and in case it\'s not supported, Packit doesn\'t submit these test requests. ([packit-service#2053](https://github.com/packit/packit-service/pull/2053))\\n\\n## Week 21 (May 23rd \u2013 May 29th)\\n\\n- Unsuccessful Image Builder requests now provide error details so you can fix the Image configuration. ([packit#1981](https://github.com/packit/packit/pull/1981))\\n- Copr projects created by Packit will not follow the Fedora branching from now. This decision has been made to lower the load on Copr from the temporary Copr projects created, mainly, for the PR builds. If you are releasing your packages to the Copr, please use the new setting `follow_fedora_branching`.\\n  Already existing projects are not affected by this change and it is also not enforced with the custom Copr repositories. ([packit#1970](https://github.com/packit/packit/pull/1970))\\n- Additional artifact(s) passed as `artifacts` in the `tf_extra_params` dictionary will be now combined with the artifact passed by Packit instead of rewriting it. ([packit-service#2056](https://github.com/packit/packit-service/pull/2056))\\n- Specfile library now handles multiple `%changelog` sections. ([specfile#230](https://github.com/packit/specfile/pull/230))"},{"id":"/April-2023","metadata":{"permalink":"/posts/weekly/April-2023","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/April-2023.md","source":"@site/weekly/April-2023.md","title":"April 2023","description":"Weeks 14\u201315 (April 3rd \u2013 April 17th)","date":"2023-04-17T14:00:00.000Z","formattedDate":"April 17, 2023","tags":[{"label":"2023","permalink":"/posts/weekly/tags/2023"}],"readingTime":1.65,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"April 2023","date":"2023-04-17T14:00:00.000Z","tags":["2023"]},"prevItem":{"title":"May 2023","permalink":"/posts/weekly/May-2023"},"nextItem":{"title":"March 2023","permalink":"/posts/weekly/March-2023"}},"content":"## Weeks 14\u201315 (April 3rd \u2013 April 17th)\\n\\n- `packit source-git` related commands can skip dist-git repos, where the git trailer is not found, when looking for the right dist-git dir where to work. ([packit#1938](https://github.com/packit/packit/pull/1938))\\n- Tmt tests can now be run with fmf root outside of git root ([packit#1936](https://github.com/packit/packit/pull/1936))\\n- Commits created by Packit no longer contain the \\"Signed-off-by\\" tag. ([packit#1934](https://github.com/packit/packit/pull/1934))\\n- Packit\'s source_git functionality installs/loads the `_packitpatch` script in a more reliable manner that doesn\'t rely on deprecated setuptools functionality. ([packit#1926](https://github.com/packit/packit/pull/1926))\\n- Packit now supports monorepo configuration in CLI ([packit#1864](https://github.com/packit/packit/pull/1864))\\n- Packit should now correctly catch the logs if any of the user actions fail during `propose_downstream`. ([packit#1939](https://github.com/packit/packit/pull/1939))\\n- Packit now resets `Release` field in dist-git spec file to 1 when the version in upstream spec file is not up-to-date with the release that triggered `propose_downstream`. ([packit#1940](https://github.com/packit/packit/pull/1940))\\n\\n## Week 16 (April 18th \u2013 April 24th)\\n\\n- Packit now complies with [PEP 621](https://peps.python.org/pep-0621/) and stores project metadata in `pyproject.toml`. ([packit#1913](https://github.com/packit/packit/pull/1913))\\n- Packit now properly respects `upstream_ref` for tags that start with \\"a\\", \\"b\\", \\"c\\", \\"e\\", \\"n\\", \\"r\\", \\"s\\". ([packit#1943](https://github.com/packit/packit/pull/1943))\\n- Packit Service now supports multi package configuration (a.k.a. monorepo configuration). ([packit-service#1982](https://github.com/packit/packit-service/pull/1982))\\n\\n## Week 17-18 (April 25th \u2013 May 3rd)\\n\\n- Detection of `%autorelease` usage in dist-git spec file during `propose-downstream` and `pull-from-upstream` has been improved and Packit will always preserve it. ([packit#1949](https://github.com/packit/packit/pull/1949))\\n- We have fixed an issue that prevented you from building in Copr and Koji on release in the GitLab upstream. ([packit-service#2027](https://github.com/packit/packit-service/pull/2027))\\n- TMT tests can now be run with FMF root outside of git root. ([packit-service#2007](https://github.com/packit/packit-service/pull/2007))\\n- When reacting to branch pushes, Packit now correctly checks whether the branch name matches the configuration for the test jobs with configured `commit` trigger. ([packit-service#2015](https://github.com/packit/packit-service/pull/2015))\\n- The `propose-downstream` job triggered by an issue comment now correctly loads the configuration from the upstream repository. ([packit-service#2021](https://github.com/packit/packit-service/pull/2021))\\n- Packit is newly on Mastodon. Or, more specifically, on Fosstodon.\\n  Follow [@packit@fosstodon.org](https://fosstodon.org/@packit) and be one of the first to know about all the news!"},{"id":"/March-2023","metadata":{"permalink":"/posts/weekly/March-2023","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/March-2023.md","source":"@site/weekly/March-2023.md","title":"March 2023","description":"Week 10 (March 7th \u2013 March 13th)","date":"2023-03-13T14:00:00.000Z","formattedDate":"March 13, 2023","tags":[{"label":"2023","permalink":"/posts/weekly/tags/2023"}],"readingTime":0.755,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"March 2023","date":"2023-03-13T14:00:00.000Z","tags":["2023"]},"prevItem":{"title":"April 2023","permalink":"/posts/weekly/April-2023"},"nextItem":{"title":"February 2023","permalink":"/posts/weekly/February-2023"}},"content":"## Week 10 (March 7th \u2013 March 13th)\\n\\n- Parsing the spec file by RPM is now performed only if really necessary, greatly improving performance in certain scenarios. ([specfile#212](https://github.com/packit/specfile/pull/212))\\n\\n## Week 11 (March 14th \u2013 March 20th)\\n\\n- Packit now uses the `get_current_version` action defined by the user to retrieve version before updating the specfile %setup macro (if any). ([packit#1886](https://github.com/packit/packit/pull/1886))\\n\\n## Week 12 (March 21st \u2013 March 27th)\\n\\n- \'upstream_tag_template\' is now also used when looking for the latest version tag in Git.\\n  This allows upstream repositories to mix different tag-patterns in the same repository,\\n  but consider only one to tell the latest version.\\n  ([packit#1891](https://github.com/packit/packit/pull/1891))\\n\\n## Week 13 (March 28th \u2013 April 3rd)\\n\\n- Packit now preserves `%autorelease` during `propose_downstream` and `pull_from_upstream`. ([packit#1904](https://github.com/packit/packit/pull/1904))\\n- Since in GitLab, it is not possible to overwrite the pending statuses, Packit now provides more generic descriptions and URLs when setting the first pending status. ([packit-service#1975](https://github.com/packit/packit-service/pull/1975))"},{"id":"/February-2023","metadata":{"permalink":"/posts/weekly/February-2023","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/February-2023.md","source":"@site/weekly/February-2023.md","title":"February 2023","description":"Weeks 5\u20136 (February 1st \u2013 February 13th)","date":"2023-02-13T14:00:00.000Z","formattedDate":"February 13, 2023","tags":[{"label":"2023","permalink":"/posts/weekly/tags/2023"}],"readingTime":2.255,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"February 2023","date":"2023-02-13T14:00:00.000Z","tags":["2023"]},"prevItem":{"title":"March 2023","permalink":"/posts/weekly/March-2023"},"nextItem":{"title":"January 2023","permalink":"/posts/weekly/January-2023"}},"content":"## Weeks 5\u20136 (February 1st \u2013 February 13th)\\n\\n- You can now use `--srpm` option with the `packit build locally` CLI command. ([packit#1810](https://github.com/packit/packit/pull/1810))\\n- You will newly see news about Packit as a footer of the GitHub check runs summary. ([packit-service#1881](https://github.com/packit/packit-service/pull/1881))\\n- Packit now groups related builds and test runs (e.g. triggered by the same event, just different chroots) together. In the future, this will allow better presentation of the overall pipelines (e.g. in the dashboard). We now also create database entries before sending requests to external service (e.g. Testing Farm), therefore failures will be more visible in the dashboard. ([packit-service#1787](https://github.com/packit/packit-service/pull/1787))\\n\\n## Week 7 (February 14th \u2013 February 20th)\\n\\n- Packit now provides `PACKIT_PROJECT_VERSION` environment variable when running `changelog-entry` action. ([packit#1853](https://github.com/packit/packit/pull/1853))\\n- Packit CLI now requires bodhi in version 7.0.0 at minimum. ([packit#1844](https://github.com/packit/packit/pull/1844))\\n- You can now specify branches for a job triggered by a commit with a regex. ([packit-service#1909](https://github.com/packit/packit-service/pull/1909))\\n\\n## Week 8 (February 21st \u2013 February 27th)\\n\\n- `packit validate-config` CLI command now provides details about errors when it cannot parse the config file. ([packit#1861](https://github.com/packit/packit/pull/1861))\\n- `--update-release`/`--no-update-release` CLI flag now affects only `Release`, not `Version`. ([packit#1857](https://github.com/packit/packit/pull/1857))\\n- Packit does fewer API calls when searching for the package configuration file in remote repositories. ([packit#1846](https://github.com/packit/packit/pull/1846))\\n- Commit statuses/check names will now contain the name of the branch or release for the build and test jobs with `commit` or `release` trigger.\\n  This will prevent the collision of the names. ([packit-service#1920](https://github.com/packit/packit-service/pull/1920))\\n\\n## Week 9 (February 28th \u2013 March 6th)\\n\\n- Aliases logic was updated to account for the upcoming Fedora release (Bodhi now marks such release as `frozen`). From now on, Fedora 38 updates will be created even when the release is frozen. ([packit#1863](https://github.com/packit/packit/pull/1863))\\n- `packit validate-config` now correctly checks glob-patterns in \'files_to_sync\' ([packit#1865](https://github.com/packit/packit/pull/1865)) and provides details about errors when it cannot parse a config file. ([packit#1861](https://github.com/packit/packit/pull/1861))\\n- Pull-from-upstream jobs are now displayed on our dashboard \ud83e\udd73 https://dashboard.packit.dev/jobs/pull-from-upstreams ([packit-service#1951](https://github.com/packit/packit-service/pull/1951), [packit-service#1939](https://github.com/packit/packit-service/pull/1939))\\n- Packit will no longer automatically request access to the forks on GitLab. This will prevent us from spamming one-time contributors with requesting the access, whereas the regular contributors can add Packit following the instructions from the comments on the MRs, so they can receive the results of Packit pipeline right from the commit statuses. ([packit-service#1946](https://github.com/packit/packit-service/pull/1946))\\n- Packit will retry tasks that are interrupted by a worker shutdown. This should improve throughput and reduce cases where there is no outcome, i.e. \\"builds should have been done but nothing happened\\". ([packit-service#1935](https://github.com/packit/packit-service/pull/1935))\\n- OGR now understands a few community-hosted GitLab instances that could not be determined automatically from the hostname. Thanks to that, you don\'t need to hardcode these instances to be mapped correctly. ([ogr#775](https://github.com/packit/ogr/pull/775))\\n\\nThank you, [@SpyTec](https://github.com/SpyTec) for so many [wonderful changes in our dasbhoard](https://github.com/packit/dashboard/pulls?q=is%3Apr+author%3ASpyTec)."},{"id":"/January-2023","metadata":{"permalink":"/posts/weekly/January-2023","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/January-2023.md","source":"@site/weekly/January-2023.md","title":"January 2023","description":"Week 0 \ud83c\udf04 (December 20th 2022 \u2013 January 2nd 2023)","date":"2023-01-02T14:00:00.000Z","formattedDate":"January 2, 2023","tags":[{"label":"2023","permalink":"/posts/weekly/tags/2023"}],"readingTime":2.175,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"January 2023","date":"2023-01-02T14:00:00.000Z","tags":["2023"]},"prevItem":{"title":"February 2023","permalink":"/posts/weekly/February-2023"},"nextItem":{"title":"2022","permalink":"/posts/weekly/2022"}},"content":"## Week 0 \ud83c\udf04 (December 20th 2022 \u2013 January 2nd 2023)\\n\\n- ogr now raises `GitForgeInternalError` rather than `PagureAPIException` when\\n  getting 50x response from the Pagure API. This should increase usability as\\n  those tasks will be retried.\\n  ([ogr#762](https://github.com/packit/ogr/pull/762))\\n- Packit now puts the correct release number into the changelog when the\\n  Release tag is reset during propose-downstream.\\n  ([packit#1816](https://github.com/packit/packit/pull/1816)))\\n\\n## Week 1 (January 3rd \u2013 January 9th)\\n\\n- SRPMs for projects that installed the GitHub App before September 6th and\\n  don\'t have `srpm_build_deps` defined are now built in Copr as well.\\n  ([packit-service#1822](https://github.com/packit/packit-service/pull/1822))\\n- We have fixed a bug in dashboard that linked `null` as a Copr build for\\n  Testing Farm runs that do not require any Copr build.\\n  ([dashboard#200](https://github.com/packit/dashboard/pull/200))\\n- All classes including `Specfile` itself can now be copied using the standard\\n  `copy()` and `deepcopy()` functions from `copy` module.\\n  ([specfile#176](https://github.com/packit/specfile/pull/176))\\n\\n## Week 2 (January 10th \u2013 January 16th)\\n\\n- When configuring Copr chroot (target in Packit terminology) specific configuration, make sure to specify additional_modules as a string: module names separated with a comma, example: \\"httpd:2.4,python:4\\". ([packit#1826](https://github.com/packit/packit/pull/1826))\\n- We have fixed a bug which caused long Copr build end reporting time on a few occurrences. ([packit-service#1838](https://github.com/packit/packit-service/pull/1838))\\n- A few fixes has been implemented to make it possible to use [`propose-downstream` job](https://packit.dev/docs/configuration/#propose_downstream) on GitLab. ([packit-service#1842](https://github.com/packit/packit-service/pull/1842), [packit-service#1844](https://github.com/packit/packit-service/pull/1844), [packit-service#1845](https://github.com/packit/packit-service/pull/1845), [packit-service#1846](https://github.com/packit/packit-service/pull/1846))\\n\\n## Week 3 + 4 (January 17th \u2013 January 30th)\\n\\n- Users can now re-trigger _bodhi_update_ and _koji_build_ jobs by `/packit create-update`\\n  and `/packit koji-update` comments in an issue opened by Packit in the configured `issue_repository` if anything\\n  went wrong during these jobs. ([packit-service#1796](https://github.com/packit/packit-service/pull/1796))\\n- All Copr projects created by Packit now default to `enable_net=False`: our documentation stated this, but it\\n  wasn\'t the case. This is now corrected. ([packit#1825](https://github.com/packit/packit/pull/1825))\\n- You can now specify `update_release: false` in the configuration to tell Packit not to change the Version and\\n  Release in the spec file. It works the same as `--no-update-release` (renamed from now deprecated `--no-bump`) in\\n  the CLI. ([packit#1827](https://github.com/packit/packit/pull/1827))\\n- Packit now supports setting `module_hotfixes` for Copr projects.\\n  ([packit#1829](https://github.com/packit/packit/pull/1829))\\n- Packit now also allows passing in free-form parameters to Testing Farm in order to support all of its\\n  options immediately once they are added. The parameters can be passed through the `tf_extra_params` config option.\\n  The free-form dictionary must follow the structure of Testing Farm POST requests. See [our documentation](https://packit.dev/docs/testing-farm/)\\n  and examples for more information. ([packit-service#1853](https://github.com/packit/packit-service/pull/1853))\\n- Fixed a bug in section parsing that caused sections to be ignored when there were macro definitions spread\\n  across the spec file and not cumulated at the top. ([specfile#191](https://github.com/packit/specfile/pull/191))\\n- Also fixed the infinite loop that occurred when section options were followed by whitespace.\\n  ([specfile#197](https://github.com/packit/specfile/pull/197))"},{"id":"/2022","metadata":{"permalink":"/posts/weekly/2022","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2022.md","source":"@site/weekly/2022.md","title":"2022","description":"Let\'s see what happened in Packit in 2022.","date":"2023-01-01T00:00:00.000Z","formattedDate":"January 1, 2023","tags":[{"label":"2022","permalink":"/posts/weekly/tags/2022"}],"readingTime":24.99,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"2022","date":"2023-01-01T00:00:00.000Z","aliases":["/posts/weekly/january-2022","/posts/weekly/february-2022","/posts/weekly/march-2022","/posts/weekly/april-2022","/posts/weekly/may-2022","/posts/weekly/june-2022","/posts/weekly/july-2022","/posts/weekly/august-2022","/posts/weekly/september-2022","/posts/weekly/october-2022","/posts/weekly/november-2022","/posts/weekly/december-2022"],"tags":["2022"]},"prevItem":{"title":"January 2023","permalink":"/posts/weekly/January-2023"},"nextItem":{"title":"2021","permalink":"/posts/weekly/2021"}},"content":"Let\'s see what happened in Packit in 2022.\\n\\n\x3c!--truncate--\x3e\\n\\n## Week 0 (December 13th - January 2nd)\\n\\n- Dashboard shows a message when the SRPM build logs are not present instead of\\n  an empty page that might suggest logs are being loaded.\\n  ([packit/dashboard#158](https://github.com/packit/dashboard/pull/158))\\n\\n## Week 1 (January 3rd - January 7th)\\n\\n- Packit service now discards old (currently, this means 3 months) SRPM builds logs.\\n  ([packit/packit-service#1315](https://github.com/packit/packit-service/pull/1315))\\n- We have added `target_branch_head_commit` property to the `PullRequest` class in ogr that allows\\n  you to get commit hash of the HEAD of the target branch (i.e. base, where the changes are merged to).\\n  ([packit/ogr#671](https://github.com/packit/ogr/pull/671))\\n- Service now passes `PACKIT_TARGET_SHA` variable, which holds commit hash of the HEAD of the target\\n  branch where the changes are supposed to be merged, to the Testing Farm environment. This should\\n  help solving the issue of running tests from non-merged codebase on the Testing Farm side.\\n  ([packit/packit-service#1319](https://github.com/packit/packit-service/pull/1319))\\n\\n## Week 2 (January 10th - January 14th)\\n\\n- Packit no longer ignores `--no-bump` and `--release-suffix` options for\\n  source-git repos.\\n  [packit/packit#1452](https://github.com/packit/packit/pull/1452)\\n- Packit now names local branch `pr/{pr_id}` when checking out a PR, even when\\n  it\'s not being merged with the target branch. This results into NVR of the\\n  build containing `pr{pr_id}` instead of `pr.changes{pr_id}`.\\n  [packit/packit#1445](https://github.com/packit/packit/pull/1445)\\n\\n## Week 3 (January 17th - January 21st)\\n\\n- `%changelog` sections in dist-git using the `%autochangelog` macro [are\\n  preserved](https://github.com/packit/packit/pull/1453) when running\\n  `propose-downstream`, except when `sync_changelog` is set to `true`.\\n- When checking if directories hold a Git-tree, Packit now also allows [`.git`\\n  to be a file with a `gitdir`](https://github.com/packit/packit/pull/1458)\\n  reference, not only a directory.\\n\\n## Week 4 (January 25th - January 28th)\\n\\n- SRPM build view contains info about build start and finished time.\\n  [packit/dashboard#163](https://github.com/packit/dashboard/pull/163)\\n- When submitting a distgit PR during `propose-downstream` job, we create\\n  a `README.packit` file with some info about the sync the packit version used.\\n  To avoid this you can add `create_sync_note: false` to conig file.\\n  [packit/packit#1465](https://github.com/packit/packit/pull/1465)\\n\\n## Week 5 (January 31th - February 7th)\\n\\n- A new option `--no-require-autosetup` for `source-git init` command has been\\n  introduced. Please note that source-git repositories not using `%autosetup` may\\n  not be properly initialized. ([packit#1470](https://github.com/packit/packit/pull/1470))\\n- Packit-service now supports re-triggering against failed task using comment on\\n  pull request `/packit rebuild-failed` and similarly for testing farm: `/packit retest-failed`.\\n  ([packit-service#1303](https://github.com/packit/packit-service/pull/1303))\\n\\n## Week 6 (February 8th - February 14th)\\n\\n- Packit now correctly handles colons in git trailer values in source-git commits.\\n  ([packit#1478](https://github.com/packit/packit/pull/1478))\\n\\n## Week 7 (February 14th\u2764\ufe0f - February 18th)\\n\\n- Synchronization of default files can now be disabled using a new config\\n  `files_to_sync`. Key `sync_files` is now deprecated.\\n  ([packit#1483](https://github.com/packit/packit/pull/1483))\\n  ([packit.dev#390](https://github.com/packit/packit.dev/pull/390))\\n- `python3-setuptools_scm` is now available by default in the sandbox.\\n\\n## Week 8 (February 18th - February 28th)\\n\\n- Packit now allows specifying more test distros for one build target\\n  to test on in Testing Farm in the configuration. The checks for the\\n  test job will also contain the name of the actual test distro\\n  (and not the build target as previously).\\n- A new option, `srpm_build_deps`, in the packit configuration file  \\n  can be used. Which is a list of RPM dependencies that are needed for\\n  the actions to be run when building SRPM and is an indicator to build\\n  the SRPMs in Copr.\\n\\n## Week 9 (March 1st - March 7th)\\n\\n- When a specfile is being generated, and both `specfile_path` and\\n  `downstream_package_name` are not set, Packit now correctly resolves this\\n  situation and sets `specfile_path` to the name of the upstream repo suffixed\\n  with `\\".spec\\"`.\\n  ([packit#1499](https://github.com/packit/packit/pull/1499))\\n- A new command `packit source-git status` has been introduced for checking\\n  the synchronization of a source-git and a dist-git repository based on the\\n  used git trailers. The command outputs a range of commits which need to be\\n  synchronized from dist-git to source-git or the other way around. If possible,\\n  the command also provides instructions on how to synchronize the repositories.\\n  ([packit#1500](https://github.com/packit/packit/pull/1500))\\n- We have added a new `enable_net` configuration option for Copr builds that\\n  allows you to disable network access during Copr builds. It is also complemented\\n  by `--enable-net`/`--disable-net` CLI options if you use Packit locally.\\n  ([packit#1504](https://github.com/packit/packit/pull/1504))\\n- Packit now adds \ud83d\udc40 instead of \ud83d\udc4d as a reaction to `/packit command`\\n  ([packit-service#1372](https://github.com/packit/packit-service/pull/1372))\\n- Progress of propose-downstream is now saved in the database and is available\\n  via API. Visualization in the dashboard is to follow next week, stay tuned.\\n  ([packit-service#1292](https://github.com/packit/packit-service/pull/1292))\\n- When running tests for the pull-request job, we now expose environment\\n  variables for commit hash, branch and URL both for pull-request source and\\n  target. In the test environment, you can use the following variables:\\n  `PACKIT_SOURCE_SHA`, `PACKIT_TARGET_SHA`, `PACKIT_SOURCE_BRANCH`,\\n  `PACKIT_TARGET_BRANCH`, `PACKIT_SOURCE_URL` and `PACKIT_TARGET_URL`.\\n  These variables are not set for test runs of releases and branch pushes.\\n  ([packit-service#1382](https://github.com/packit/packit-service/pull/1382))\\n\\n## Week 10 (March 8th - March 14th)\\n\\n- You can view information about ongoing propose-downstream jobs via our dashboard.\\n  ([dashboard#168](https://github.com/packit/dashboard/pull/168))\\n- We have switched the cache for dist-git branches and Copr targets to TTL cache\\n  that gets discarded once in 12 hours, in case there is a change in targets, the\\n  changes shall propagate to both of our deployments without the need to redeploy\\n  within 12 hours. ([packit#1513](https://github.com/packit/packit/pull/1513))\\n- Packit now comments when it fails to find Copr project specified in the config.\\n  ([packit#1395](https://github.com/packit/packit-service/pull/1395))\\n- Packit now reacts to dist-git pushes to either `rawhide` or `main` when configured\\n  to do Koji builds for `rawhide`.\\n  ([packit#1393](https://github.com/packit/packit-service/pull/1393))\\n- You can specify an identifier for your job to be able to configure one job multiple times.\\n  For example, you can build multiple projects from one repository (known as monorepo concept)\\n  or try multiple build options. Using identifiers allows Packit to avoid naming collisions\\n  in commit statuses and default Copr project names.\\n  ([packit-service#1385](https://github.com/packit/packit-service/pull/1385))\\n- Packit no longer provides a misleading comment when it fails to update a set of\\n  targets on its own Copr projects.\\n  ([packit-service#1397](https://github.com/packit/packit-service/pull/1397))\\n\\n## Week 11 (March 15th - March 21st)\\n\\n- When using Packit CLI for creating Bodhi updates,\\n  you can now set `fas_username` and `fas_password` in your Packit user config\\n  to not be asked about that when the command is executed.\\n  Also, this allows Packit GitHub application to use this as well\\n  so you can look forward to Bodhi updates created by Packit\\n  (will be announced and described in a dedicated post).\\n  ([packit#1517](https://github.com/packit/packit/pull/1517))\\n\\n## Week 12 (March 22nd - March 28th)\\n\\n- We have updated contact information to `Packit <hello@packit.dev>`.\\n  ([packit-service#1410](https://github.com/packit/packit-service/pull/1410))\\n- Interactions with Bodhi should be now more reliable when creating Bodhi updates.\\n  ([packit#1528](https://github.com/packit/packit/pull/1528))\\n- Packit will no longer error out when trying to create a new Copr repository\\n  when it is already present.\\n  ([packit#1527](https://github.com/packit/packit/pull/1527))\\n- There is a new `packit_instances` key that you can use to specify the Packit\\n  instances you want to use for working on your jobs. Nothing will change for our\\n  production users, but users of our stage instance need to use this key to\\n  preserve the support of the stage instance -- they can set both stg and prod in\\n  the `packit_instances` list to use both, or use just one. Just be careful with\\n  the downstream jobs where both instances work with the same services.\\n  This new option works like other Packit options so you can set it on the top\\n  level and/or (re)define it on the job level.\\n  More information about our staging instance can be found here:\\n  [packit#1530](https://github.com/packit/packit/discussions/1530).\\n  ([packit#1417](https://github.com/packit/packit-service/pull/1417))\\n\\n## Week 13 (March 29th - April 4th)\\n\\n- We have implemented `get_contributors` function in ogr that can be used for getting contributors to the project on GitHub (set of logins) and GitLab (set of authors).\\n  ([ogr#692](https://github.com/packit/ogr/pull/692))\\n- When multiple propose downstream attempts for the same PR fail, the error messages are sent to to the same issue (as comments), instead of creating multiple new issues.\\n  ([packit#1427](https://github.com/packit/packit-service/pull/1427))\\n- Downstream synchronization of the Packit configuration file (aka `packit.yaml`) is now working properly again.\\n  ([packit#1532](https://github.com/packit/packit/pull/1532))\\n- `packit source-git update-dist-git` and `packit source-git update-source-git` now check the synchronization of source-git and dist-git repositories prior to doing the update. If the update can\'t be done, for example, because the histories have diverged, the command provides instructions on how to synchronize the repositories.\\n  A `--force` option is available to try to update the destination repository anyway.\\n  ([packit#1534](https://github.com/packit/packit/pull/1534))\\n- When using `post_upstream_clone` to generate your spec-file,\\n  Packit now correctly checks out a release before the action is run.\\n  ([packit#1542](https://github.com/packit/packit/pull/1542))\\n\\n## Week 14 (April 5th - April 11th)\\n\\n- We have introduced two new build and test target aliases: `fedora-latest-stable` resolves to the latest stable Fedora\\n  Linux release, while `fedora-branched` resolves to all branched releases (all Fedora Linux release, except `rawhide`).\\n  ([packit#1546](https://github.com/packit/packit/pull/1546))\\n- We have reverted the functionality of Packit that allowed you to have set **only** specific targets for Copr repositories.\\n  This functionality was introduced a while ago and was found to be not very beneficial in cases of differently\\n  configured Copr jobs building in parallel in the same Copr repository. This is an implementation detail in the end,\\n  but Copr project chroots are now only added and never subtracted\\n  (every build has precisely specified targets based on the copr_build job definition).\\n  ([packit#1551](https://github.com/packit/packit/pull/1551))\\n- If you are using our stage instance, we make it listen only on `/packit-stg` comment commands so you can now differentiate\\n  between the instances when commanding Packit via pull-request or issue comments.\\n  For the production instance, you can continue using `/packit` prefix as you are used to.\\n  ([packit-service#1432](https://github.com/packit/packit-service/pull/1432))\\n- A new configuration option `downstream_branch_name` has been added, which is meant to be used in source-git projects\\n  and allows users to customize the name of the branch in dist-git which corresponds to the current source-git branch.\\n  ([packit#1555](https://github.com/packit/packit/pull/1555))\\n- `revision-range` argument of the source-git `update-source-git` command is now optional. If not specified,\\n  dist-git commits with no counterpart in source-git are synchronized.\\n  ([packit#1547](https://github.com/packit/packit/pull/1547))\\n\\n## Week 15 (April 12th - April 14th)\\n\\n- We have implemented reporting of status for the propose-downstream job which means that you can now\\n  see the progress of the job via check runs/commit statuses on the particular release commits.\\n  ([packit-service#1435](https://github.com/packit/packit-service/pull/1435))\\n\\n## Week 16 (April 19th - April 25th)\\n\\n- The bug in our service about not setting GitHub and Gitlab statuses in case of lack of permissions was fixed.\\n  ([packit/packit-service#1457](https://github.com/packit/packit-service/pull/1457))\\n- Packit\'s CLI `source-git update-*` commands now check whether the target repository is pristine and in case not raise an error.\\n  ([packit/packit#1562](https://github.com/packit/packit/pull/1562))\\n\\n## Week 17 (April 26th - May 2th)\\n\\n- We have fixed an issue affecting Pipelines view on Dashboard. Currently you should be able to see pipelines again; we are also working on fixing empty rows for `propose-downstream` jobs.\\n  ([packit-service#1461](https://github.com/packit/packit-service/pull/1461))\\n- Packit now shows the specific info when it does not have permissions to create a Bodhi update of your package.\\n  When you configure `issue_repository` in your Packit config file, Packit will create an issue in that project and link the dist-git page where you can give _Packit FAS user_ the correct permissions.\\n  ([packit-service#1465](https://github.com/packit/packit-service/pull/1465))\\n- Packit now exports `PACKIT_PR_ID` environment variable to the Testing Farm.\\n  ([packit-service#1467](https://github.com/packit/packit-service/pull/1467))\\n- The bug in the Copr permission request is now fixed. (After the release of a new Copr client, Packit didn\'t catch that permission problem and didn\'t request the permissions to build in a custom Copr project.)\\n  ([packit-service#1472](https://github.com/packit/packit-service/pull/1472))\\n- We have fixed a bug that caused Packit to fail when submitting Testing Farm on `commit` trigger.\\n  ([packit-service#1474](https://github.com/packit/packit-service/pull/1472))\\n- Packit now builds RPMs in Copr triggered by `release` event with correct NVR (without the artificial release suffix). You can use it for distributing RPM packages via Copr.  \\n  ([packit-service#1478](https://github.com/packit/packit-service/pull/1478))\\n- From the security perspective, we have decided to disable the `create_pr` option for our service, from now on Packit will unconditionally create PRs when running `propose-downstream`.\\n  We have also updated the `propose-downstream` CLI such that it is possible to use `create_pr` from configuration **or** override it via `--pr/--no-pr` options.\\n  ([packit#1563](https://github.com/packit/packit/pull/1563))\\n- Packit now supports `release_suffix` configuration option that allows you to override the long release string provided by Packit that is used to ensure correct ordering and uniqueness of RPMs built in Copr.\\n  ([packit#1568](https://github.com/packit/packit/pull/1568))\\n\\n## Week 18 (May 3rd - May 9th)\\n\\n- `packit source-git` commands learnt to replace [Git-trailers in commit messages](https://packit.dev/source-git/work-with-source-git/control-patch-generation/) if they already exist. ([packit#1577](https://github.com/packit/packit/pull/1577))\\n- When initializing source-git repos, the author of downstream commits created from patch files which are not in a git-am format is set to the original author of the patch-file in dist-git, instead of using the locally configured Git author. ([packit#1575](https://github.com/packit/packit/pull/1575))\\n- Packit now correctly inform users about downstream errors only on the last try. (Previously, Packit informed for all tries even the last try succeded.) ([packit-service#1485](https://github.com/packit/packit-service/pull/1485))\\n- Dashboard now also shows propose-downstream jobs in pipelines view. We have also merged all jobs to one column to minimize dead space on the page. ([dashboard#178](https://github.com/packit/dashboard/pull/178))\\n\\n## Week 19 (May 10th - May 16th)\\n\\n- Metadata dictionary is no longer required when specifying a job. Keys which used to belong to the yaml metadata dictionary are now keys of the job dictionary itself. ([packit#1569](https://github.com/packit/packit/pull/1569))\\n- Packit now correctly removes patches during `packit source-git init` when the preamble does not contain blank lines. ([packit#1582](https://github.com/packit/packit/pull/1582))\\n- Packit now supports `--release-suffix` parameter in all of the related CLI commands. Also we have added a support for the `release_suffix` option from configuration to the CLI. With regards to that we have introduced a new CLI switch `--default-release-suffix` that allows you to override the configuration option to Packit-generated default option that ensures correct NVR ordering of the RPMs. ([packit#1586](https://github.com/packit/packit/pull/1586))\\n- Resolved an SRPM build problem caused by a new version of git that refuses to fetch in a git repo when it\'s owned on the OS level by someone else. ([packit#1497](https://github.com/packit/packit-service/pull/1497))\\n- Packit now passes `PACKIT_COPR_PROJECT` and `PACKIT_COPR_RPMS` variables to the Testing Farm. `PACKIT_COPR_PROJECT` holds Copr project in format owner/project and `PACKIT_COPR_RPMS` space-separated RPMs that were built in Copr. ([packit-service#1486](https://github.com/packit/packit-service/pull/1486))\\n- Packit now builds only its own dist-git commits. Other commits are not being acted upon. For reasoning, see [packit-service#1490](https://github.com/packit/packit-service/issues/1490). ([packit-service#1498](https://github.com/packit/packit-service/pull/1498))\\n- We have automated our allowlisting process via a new Packit comment command `/packit verify-fas`. You can find more info in [our requirements](https://packit.dev/docs/guide/#2-approval). ([packit-service#1487](https://github.com/packit/packit-service/pull/1487))\\n\\n## Week 20 (May 17th - May 23rd)\\n\\n- We have fixed an issue with the handling of messages from Copr on release builds, which has resulted in not setting the correct statuses on commits. ([packit-service#1513](https://github.com/packit/packit-service/pull/1513))\\n- When doing an automatic FAS account verification, Packit now suggests the URL where the GitHub account needs to be set. ([packit-service#1508](https://github.com/packit/packit-service/pull/1508))\\n\\n## Week 21 (May 24th - May 30th)\\n\\n- Packit will not raise an exception anymore when creating a SRPM with dangling symlinks. ([packit#1592](https://github.com/packit/packit/pull/1592))\\n- You can now override which dist-git commits will be built in Koji by specifying FAS accounts of authors and committers using\\n  `allowed_pr_authors` or `allowed_committers` in the job metadata (see [the documentation](https://packit.dev/docs/configuration/#koji_build)). ([packit-service#1520](https://github.com/packit/packit-service/pull/1520))\\n\\n## Week 22 (May 31st - June 6th)\\n\\n- Packit shows basic information about allowlisting in the status description\\n  when your namespace is not allowed.\\n  ([packit-service#1533](https://github.com/packit/packit-service/pull/1533))\\n\\n## Week 23 (June 7th - June 13th)\\n\\n- The creation of Bodhi updates should not time out anymore, because we no longer get the latest build of a package via Bodhi.\\n  ([packit#1612](https://github.com/packit/packit/pull/1612))\\n- We have fixed a regression where string values for the `targets` and `dist_git_branches` configuration keys were not accepted.\\n  ([packit#1608](https://github.com/packit/packit/pull/1608))\\n- We improved the reporting for the test job if we are not able to find any FMF metadata and the `skip_build` option is enabled.\\n  ([packit-service#1539](https://github.com/packit/packit-service/pull/1539))\\n\\n## Week 24 (June 14th - June 21st)\\n\\n- Git ref name that Packit works with during `propose-downstream` is now made more obvious in logs.\\n  ([packit#1626](https://github.com/packit/packit/pull/1626))\\n- Packit now correctly handles creation of custom archives in root while a specfile is in a subdirectory.\\n  ([packit#1622](https://github.com/packit/packit/pull/1622))\\n- There is a new check for git projects that are allowed to use a custom Copr project.\\n  There will be a better integration in the form of a new config field in Copr settings that Packit can use.\\n  In the meantime, the mapping is defined and maintained by the Packit team.\\n  Let us know if you need a project to be allowed.\\n  ([packit-service#1556](https://github.com/packit/packit-service/pull/1556))\\n- A link to Copr build logs was updated: it now points to a place where logs are available once a build starts.\\n  ([packit-service#1554](https://github.com/packit/packit-service/pull/1554))\\n\\n## Week 25 (June 21st - June 27th)\\n\\n- Packit Bash completion file is no longer needlessly executable. ([packit#1634](https://github.com/packit/packit/pull/1634))\\n- Packit now works with Bodhi 5 and Bodhi 6 authentication mechanism. ([packit#1629](https://github.com/packit/packit/pull/1629))\\n- Git ref name that Packit works with during `propose-downstream` is now made more obvious in logs. ([packit#1626](https://github.com/packit/packit/pull/1626))\\n- We have fixed the incorrect displaying of `propose downstream` results in our dashboard. ([packit-service#1553](https://github.com/packit/packit-service/pull/1553))\\n\\n## Weeks 26\u201327 (June 27th\u2013July 11th)\\n\\n- We adjusted the way we check the author of the PR for PRs related to\\n  dist-git commits that trigger Koji build jobs. This should fix the race\\n  condition causing not creating Koji builds in some cases.\\n  ([packit-service#1573](https://github.com/packit/packit-service/pull/1573))\\n- Results from Testing Farm are now correctly reported when multiple jobs with\\n  different identifier are defined.\\n  ([packit-service#1565](https://github.com/packit/packit-service/pull/1565))\\n- On a Bodhi authentication error, Packit will retry the task multiple times\\n  in ten-minute intervals to be able to fix the issue in the meantime.\\n  ([packit-service#1564](https://github.com/packit/packit-service/pull/1564))\\n\\n## Week 28 (July 12th\u2013July 18th)\\n\\n- Packit now guides everyone better when a FAS account is private\\n  and updates the internal information about installations correctly\\n  when the app is reinstalled.\\n  ([packit-service#1575](https://github.com/packit/packit-service/pull/1575))\\n- Packit can now correctly create Bodhi updates using the new Bodhi 6 client.\\n  ([packit#1651](https://github.com/packit/packit/pull/1651))\\n- RPM build commands of Packit CLI have been merged into one build subcommand,\\n  for more information see the updated [documentation](https://packit.dev/docs/cli/build/).\\n  We have also introduced a new --srpm option to the new build subcommand\\n  that can be used to trigger local, Copr or Koji build from an already built\\n  SRPM rather than the one implicitly created by Packit.\\n  ([packit#1611](https://github.com/packit/packit/pull/1611))\\n\\n## Week 29 (July 19th\u2013July 25th)\\n\\n- Packit now correctly supports `tmt_plan` and `tf_post_install_script` in the\\n  configuration. ([packit#1659](https://github.com/packit/packit/pull/1659))\\n- We have reverted to Bodhi 5 client since Packit couldn\'t create bodhi updates\\n  with the new version 6 client: [fedora-infra/bodhi#4660](https://github.com/fedora-infra/bodhi/issues/4660)\\n  ([packit-service#1590](https://github.com/packit/packit-service/pull/1590)).\\n  Packit also provides a more helpful error message when it hits this.\\n  ([packit#1660](https://github.com/packit/packit/pull/1660))\\n- During creating Copr builds, on Copr errors, Packit will retry the task\\n  multiple times in case there is a Copr outage.\\n  ([packit-service#1579](https://github.com/packit/packit-service/pull/1579))\\n\\n## Week 30 (July 26th\u2013August 1st)\\n\\n- Packit has switched to `python-specfile` library for handling spec files. This may cause some issues to pop up. ([packit#1588](https://github.com/packit/packit/pull/1588))\\n- Packit CLI can now build RPMs in mock. For more information see https://packit.dev/docs/cli/build/mock ([packit#1662](https://github.com/packit/packit/pull/1662))\\n- When using Packit before being allowed, Packit newly links an approval issue where the self-approval can be performed. ([packit-service#1596](https://github.com/packit/packit-service/pull/1596))\\n- A downstream koji-build can now be re-triggered by adding a comment containing `/packit koji-build` into a dist-git pull request with target branch corresponding to the branch the build should be acted upon. ([packit-service#1586](https://github.com/packit/packit-service/pull/1586))\\n\\n## Week 31 (August 2nd \u2013 August 8th)\\n\\n- Action `fix_spec_file` can change a spec file - Packit now preserves that change.\\n  ([packit#1679](https://github.com/packit/packit/pull/1679))\\n- BREAKING CHANGE: fixed an issue where the repo was searched for the specfile\\n  before checking if `downstream_package_name` is set, and\\n  `<downstream_package_name>.spec` can be used as the `specfile_path`.\\n  ([packit#1663](https://github.com/packit/packit/pull/1663))\\n\\n## Week 32 (August 9th \u2013 August 15th)\\n\\n- We have fixed an issue when propose downstream didn\'t retry to download sources that were not yet available at the time of the first attempt. ([packit-service#1609](https://github.com/packit/packit-service/pull/1609))\\n- When creating Copr builds, Packit will now retry multiple times in case there is a GitHub outage or an internal error. ([packit-service#1589](https://github.com/packit/packit-service/pull/1589))\\n\\n## Week 33 (August 16th \u2013 August 22nd)\\n\\n- Packit CLI can now submit VM images in [Red Hat Image Builder](https://console.redhat.com/insights/image-builder).\\n  All build-related commands have now consistent `--wait` / `--no-wait` options.\\n  ([packit#1666](https://github.com/packit/packit/pull/1666))\\n- Packit `prepare-sources` command now has a `--create-symlinks` / `--no-create-symlinks` option,\\n  which enables copying the archive instead of symlinking. This will be used in the Copr environment,\\n  where symlinking the archive previously caused issues.\\n  ([packit#1682](https://github.com/packit/packit/pull/1682))\\n- We have fixed the handling of the situation when Packit lacks permission to update a Copr project.\\n  ([packit#1684](https://github.com/packit/packit/pull/1684))\\n- Dashboard should now load data for [jobs](https://dashboard.packit.dev/jobs) faster because\\n  the database querying has been improved and also queries are done only when needed.\\n  ([packit-service#1617](https://github.com/packit/packit-service/pull/1617),\\n  [dashboard#189](https://github.com/packit/dashboard/pull/189))\\n\\n## Week 34 (August 23rd \u2013 August 29th)\\n\\n- `packit propose-downstream` is now more informative when sources cannot be\\n  downloaded. ([packit#1698](https://github.com/packit/packit/pull/1698))\\n- No more annoying issues will be created after a successful _propose\\n  downstream_. ([packit#1693](https://github.com/packit/packit/pull/1693))\\n- We have fixed an issue with reporting results when multiple Testing Farm\\n  jobs with identifiers are configured.\\n  ([packit-service#1634](https://github.com/packit/packit-service/pull/1634))\\n\\n## Week 35 (August 30th \u2013 September 5th)\\n\\n- SRPMs for Copr builds are built in Copr by default for Packit GitHub app installations since September 6, 2022.\\n  For older installations, you can set the `srpm_build_deps` config option to use Copr as a builder.\\n  Let us know if you hit any issue with the new implementation. We are going to slowly decommission the old implementation\\n  and are happy to help with the transition. ([packit-service#1636](https://github.com/packit/packit-service/pull/1636))\\n- More indexes added to the database have further improved API/dashboard response times. ([packit-service#1639](https://github.com/packit/packit-service/pull/1639))\\n- When submitting Testing Farm tests, Packit will now retry multiple times in case there is a failure.\\n  ([packit-service#1605](https://github.com/packit/packit-service/pull/1605))\\n- We have implemented checking the available composes before submitting the tests for both internal and public Testing\\n  Farm. ([packit-service#1628](https://github.com/packit/packit-service/pull/1628))\\n\\n## Week 36 (September 6th \u2013 September 12th)\\n\\n- When querying Bodhi for information about Fedora/EPEL releases to resolve aliases,\\n  packit now correctly handles pagination of API results. This resolves an issue that caused\\n  Fedora 37 not to be pointed to from any alias.\\n  ([packit#1704](https://github.com/packit/packit/pull/1704))\\n\\n## Week 37 (September 13th \u2013 September 19th)\\n\\n- Added support for filenames specified in source URL fragments, for example: `https://example.com/foo/1.0/download.cgi#/%{name}-%{version}.tar.gz` ([specfile#100](https://github.com/packit/specfile/pull/100))\\n- Some more underlying improvements to our libraries and deployment.\\n\\n## Week 38 (September 20th \u2013 September 26th)\\n\\n- Propose downstream job now pushes changes even when it\'s not creating a new pull request. This allows updating existing pull requests. ([packit#1725](https://github.com/packit/packit/pull/1725))\\n- Packit now deduces Copr targets for Copr builds when you have set your custom Copr project to be used. ([packit-service#1673](https://github.com/packit/packit-service/pull/1673))\\n- Retriggering tasks via re-run button in Github commit checks when there are configured identifiers for jobs should now work correctly. ([packit-service#1671](https://github.com/packit/packit-service/pull/1671))\\n- Packit now reports a pending state rather than an error on Testing Farm runs in case the related copr build has not finished yet. ([packit-service#1669](https://github.com/packit/packit-service/pull/1669))\\n- Users can now **allow** building in a custom Copr project from a _git-forge_ project.\\n  User has to add manually the _git-forge_ project reference to the Copr project settings.\\n  As an example, we should add _github.com/packit/ogr_ to the list named _Packit forge project allowed_ in our _packit-dev_ Copr project settings: https://copr.fedorainfracloud.org/coprs/packit/packit-dev/edit#packit_forge_projects_allowed. ([packit-service#1638](https://github.com/packit/packit-service/pull/1638))\\n\\n## Week 39 (September 27th \u2013 October 3rd)\\n\\n- We have improved mapping of Testing Farm Composes, if you have set your own custom mapping and the TF Compose is available, it will be used as is without any additional modifications we do (version, etc.). ([packit-service#1675](https://github.com/packit/packit-service/pull/1675))\\n- We have added support for running the tests with Copr builds built by Packit in another pull request (in a different repository). You can read more about this feature in [our documentation](https://packit.dev/docs/testing-farm/#running-tests-with-builds-from-another-pull-request). ([packit-service#1658](https://github.com/packit/packit-service/pull/1658))\\n\\n## Week 40 (October 4th \u2013 October 10th)\\n\\n- Packit now correctly selects a Testing Farm compose when it\'s specified correctly in the configuration without an architecture suffix. ([packit-service#1689](https://github.com/packit/packit-service/pull/1689))\\n- We have fixed an issue that prevented Packit to work correctly on merge requests on GitLab instances. ([packit-service#1683](https://github.com/packit/packit-service/pull/1683))\\n- Packit Service will now replace invalid characters for the Copr projects using the default naming scheme. ([packit-service#1684](https://github.com/packit/packit-service/pull/1684))\\n- When we report to set `Packit allowed forge projects` in the Copr projects, the link for the group projects is now correct. ([packit-service#1680](https://github.com/packit/packit-service/pull/1680))\\n- It is now possible to filter changelog entries by specifying lower bound EVR, upper bound EVR or both. ([specfile#104](https://github.com/packit/specfile/pull/104))\\n\\n## Week 41 (October 11th \u2013 October 17th)\\n\\n- Packit now correctly authenticates with Bodhi 6 and therefore creates Bodhi updates. \ud83d\ude80 ([packit#1746](https://github.com/packit/packit/pull/1746), [packit-service#1704](https://github.com/packit/packit-service/pull/1704))\\n- There are two changes in the naming of the service jobs:\\n  The `build` job type name has been deprecated. It aimed to be an alias when Packit supported just one build type.\\n  There are currently more types of builds and just `build` can be misleading. Please, be explicit and use `copr_build` instead.\\n  The `production_build` name for upstream Koji build is misleading because it is not used to run production/non-scratch\\n  builds and because it can be confused with the `koji_build` job that is triggered for dist-git commits.\\n  (The `koji_build` job can trigger both scratch and non-scratch/production builds.)\\n  To be explicit, use `upstream_koji_build` for builds triggered in upstream and `koji_build` for builds triggered in downstream.\\n  Users will get a neutral status describing the change when the old names are in use. The status will become a warning\\n  starting in November and the old names will be removed by the end of the year. ([packit-service#1656](https://github.com/packit/packit-service/pull/1656))\\n- We\'ve fixed the Markdown table format in the GitHub checks page, which was broken when the user\'s repo was not allowed to use Packit. ([packit-service#1688](https://github.com/packit/packit-service/pull/1688))\\n\\n## Week 42 (October 17th \u2013 October 23rd)\\n\\n- Packit now won\'t repeatedly comment in pull requests about the need to migrate configuration of allowed forge projects to Copr. ([packit-service#1716](https://github.com/packit/packit-service/pull/1716))\\n\\n## Week 43 (October 25th \u2013 October 31th)\\n\\n- Fixed an issue with version and release in a spec file being updated even if `--no-bump` flag was specified.\\n  Also fixed an issue when `None` appeared in release instead of a number.\\n  ([packit#1753](https://github.com/packit/packit/pull/1753))\\n- We have improved the handling of test jobs which should fix related issues with reporting and triggering\\n  that occurred when multiple test jobs were configured.\\n  ([packit-service#1717](https://github.com/packit/packit-service/pull/1717))\\n\\n## Week 44 (November 1st \u2013 November 7th)\\n\\n- Fixed an issue due to which the repository was never searched for a specfile if `specfile_path` was not specified, and `specfile_path` was always set to `<repo_name>.spec`. ([packit#1758](https://github.com/packit/packit/pull/1758))\\n- Packit is now able to generate automatic Bodhi update notes including a changelog diff since the latest stable build of a package. ([packit#1747](https://github.com/packit/packit/pull/1747))\\n- Description of Bodhi updates now contains a changelog diff. ([packit-service#1713](https://github.com/packit/packit-service/pull/1713))\\n\\n## Week 45 (November 8th \u2013 November 14th)\\n\\n- You can re-trigger a Bodhi update via dist-git PR comment `/packit create-update`. ([packit-service#1729](https://github.com/packit/packit-service/pull/1729))\\n- Packit now correctly finds an SRPM when rpmbuild reports warnings while it parses a spec file. ([packit#1772](https://github.com/packit/packit/pull/1772))\\n- When packit.yaml is present in the repo but is empty, Packit now produces a better error message instead of an internal Python exception. ([packit#1769](https://github.com/packit/packit/pull/1769))\\n- Retriggering of tests when there is a build job and a test job with an identifier configured was fixed. ([packit-service#1731](https://github.com/packit/packit-service/pull/1731))\\n- Packit GitHub app will not modify a package version when `release_suffix` configuration option is empty. ([packit-service#1738](https://github.com/packit/packit-service/pull/1738))\\n- Our `specfile` parser now supports localized tags (e.g. `Summary(fr)`) and tags with qualifiers (e.g. `Requires(post)`). ([specfile#132](https://github.com/packit/specfile/pull/132))\\n- SRPM build logs are now deleted after 30 days instead of 90 days. This doesn\'t apply to SRPM builds done in Copr, which deletes the logs after 14 days. ([packit/packit-service#1745](https://github.com/packit/packit-service/pull/1745))\\n\\n## Week 46 (November 15th \u2013 November 21st)\\n\\n- `srpm_build_deps` can be now configured also on the job configuration level. ([packit-service#1757](https://github.com/packit/packit-service/pull/1757))\\n\\n## Week 47 (November 22nd \u2013 November 28th)\\n\\n- We have changed the limit for our [SLO1](https://packit.dev/docs/service-level-objectives/#slo1-changes-to-github-prs-receive-a-status-update-within-15-seconds-in-99-of-cases): it was increased from 15s to 30s to account for setting all statuses. ([packit-service#1776](https://github.com/packit/packit-service/pull/1776))\\n- The job names deprecated in October (`build` alias of `copr_build` and `production_build` replaced by `upstream_koji_build`) newly lead to an error state (was `neutral` ) of the deprecated status created by Packit.\\n  The old names will be removed by the end of the year. ([packit-service#1777](https://github.com/packit/packit-service/pull/1777))\\n- The Copr build logs URL now points to logs that are available even while building. ([packit-service#1767](https://github.com/packit/packit-service/pull/1767))\\n- Fixed an issue that caused empty lines originally inside changelog entries to appear at the end. ([specfile#140](https://github.com/packit/specfile/pull/140))\\n\\n## Week 48 (November 29th \u2013 December 5th)\\n\\n- `packit propose-downstream` now uploads all remote sources (those specified as URLs) and the\\n  source specified by `spec_source_id` (whether remote or not) to lookaside. Previously, only Source0\\n  was uploaded. Source0 is no longer treated specially, but as `spec_source_id` is `Source0` by default,\\n  Source0 is still being uploaded by default unless `spec_source_id` is overriden.\\n  ([packit#1778](https://github.com/packit/packit/pull/1778))\\n- [A VM image build](/docs/configuration/upstream/vm_image_build) can be triggered inside a PR via a comment\\n  command `/packit vm-image-build` (the job needs to be defined in the configuration).\\n  This feature is experimental and is still being tested.\\n  ([packit-service#1761](https://github.com/packit/packit-service/pull/1761))\\n- `Section` and `Tag` objects in `specfile` library now have `normalized_name` property for more convenient comparison.\\n  There is a new method, `Specfile.get_active_macros()`, to get active macros in the context of the spec file.\\n  The underlying `rpm.spec` instance is now exposed as `Specfile.rpm_spec` property.\\n  There is a new utility class for parsing NEVRA strings. ([specfile#141](https://github.com/packit/specfile/pull/141))\\n\\n## Week 49 (December 6th \u2013 December 12th)\\n\\n- Packit now correctly handles a race condition when it tries to create bodhi\\n  updates for builds that are not yet tagged properly. CLI exprience was also\\n  improved for this case.\\n  ([packit#1803](https://github.com/packit/packit/pull/1803))\\n- Packit now resets the `Release` tag during `propose-downstream` if the version\\n  is updated and the `Release` tag has not explicitly been overridden in the\\n  upstream specfile.\\n  ([packit#1801](https://github.com/packit/packit/pull/1801))\\n- If you still don\'t build SRPMs in Copr you\'ll get a warning status that you\\n  should use `srpm_build_deps` to be sure that we don\'t break your workflow once\\n  we switch to building all SRPMs in Copr in January.\\n  ([packit-service#1804](https://github.com/packit/packit-service/pull/1804))\\n- We\'ve increased internal task retry backoff time in Packit GitHub app from 3 to\\n  7 seconds. We hope this will increase success for network flakes and _random_\\n  infrastructure issues. Creation of bodhi updates should be now more reliable too\\n  as Packit will try more times (from 2 to 5).\\n  ([packit-service#1800](https://github.com/packit/packit-service/pull/1800))\\n- Tags enclosed in conditional macro expansions are not ignored anymore.\\n  ([specfile#156](https://github.com/packit/specfile/pull/156))\\n- Context managers (`Specfile.sections()`, `Specfile.tags()` etc.) can now be nested\\n  and combined together (with one exception - `Specfile.macro_definitions()`), and\\n  it is also possible to use tag properties (e.g. `Specfile.version`, `Specfile.license`)\\n  inside them. It is also possible to access the data directly, avoiding the `with`\\n  statement, by using the `content` property (e.g. `Specfile.tags().content`), but\\n  be aware that no modifications done to such data will be preserved. You must use\\n  `with` to make changes.\\n  ([specfile#153](https://github.com/packit/specfile/pull/153))\\n\\n## Week 50 (December 13th \u2013 December 19th)\\n\\n- Context managers are no longer shared between `Specfile` instances, making it possible\\n  to work with more than one `Specfile` instance at a time.\\n  ([specfile#157](https://github.com/packit/specfile/pull/157))"},{"id":"/2021","metadata":{"permalink":"/posts/weekly/2021","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2021.md","source":"@site/weekly/2021.md","title":"2021","description":"Let\'s see what happened in Packit in 2021.","date":"2022-05-16T00:00:00.000Z","formattedDate":"May 16, 2022","tags":[{"label":"2021","permalink":"/posts/weekly/tags/2021"}],"readingTime":18.03,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"2021","date":"2022-05-16T00:00:00.000Z","tags":["2021"]},"prevItem":{"title":"2022","permalink":"/posts/weekly/2022"},"nextItem":{"title":"2020","permalink":"/posts/weekly/2020"}},"content":"Let\'s see what happened in Packit in 2021.\\n\\n\x3c!--truncate--\x3e\\n\\n## Week 1 (January 4th - January 8th)\\n\\n- Name of the job/command/comment to propose update of downstream package has been synced\\n  between CLI and service to `propose-downstream`.\\n  `propose-update` is now deprecated. ([packit#1065](https://github.com/packit-service/packit/pull/1065), [packit-service#913](https://github.com/packit/packit-service/pull/913))\\n\\n## Week 2 (January 11th - January 15th)\\n\\n- Branch deletions are now correctly ignored. ([packit-service#919](https://github.com/packit/packit-service/pull/919))\\n- Multiple internal improvements have been done.\\n  ([packit#1072](https://github.com/packit/packit/pull/1072),\\n  [packit-service#922](https://github.com/packit/packit-service/pull/922),\\n  [packit-service#923](https://github.com/packit/packit-service/pull/923))\\n\\n## Week 3 (January 18th - January 22th)\\n\\n- We have temporarily disabled the testing-farm support because the cluster with old runner has died and the new runner is not ready.\\n  The tests are now skipped and you get `Testing farm is temporarily disabled.` status until we have the new runner available.\\n  ([packit-service#929](https://github.com/packit/packit-service/pull/929))\\n\\n## Week 4 (January 25th - January 29th)\\n\\n- The CLI and the service now detect name of the default branch of a repository\\n  instead of assuming it to be called `master`.\\n  ([packit#1074](https://github.com/packit/packit/pull/1074),\\n  [packit-service#924](https://github.com/packit/packit-service/pull/924))\\n- Build status page now points to the built SRPM uploaded to COPR.\\n  ([packit-service#889](https://github.com/packit/packit-service/pull/889))\\n- `propose-downstream` on source-git repositories now always uses `--local-content`.\\n  ([packit#1093](https://github.com/packit/packit/pull/1093))\\n- Hunor fixed bug [packit#1089](https://github.com/packit/packit/pull/1089)\\n  which caused a wrong revision to be used for certain jobs in Packit Service.\\n- Tomas improved the reliability of our sandboxing service.\\n  ([sandcastle#95](https://github.com/packit/sandcastle/pull/95))\\n- Default branches in all [our repositories](https://github.com/packit)\\n  have been renamed from `master` to `main`.\\n\\n## Week 5 (February 1st - February 5th)\\n\\n- The service uses new Testing Farm ([API](https://api.testing-farm.io)).\\n  We are still working on better user experience and fixing bugs.\\n  ([packit-service#875](https://github.com/packit/packit-service/pull/875))\\n- MatejF refactored permission system on pull requests and issues comments and\\n  renamed whitelist to allowlist. ([packit-service#936](https://github.com/packit/packit-service/pull/936))\\n- The service now retries failed tasks.\\n  ([packit-service#931](https://github.com/packit/packit-service/pull/931))\\n- `--koji-target` option of the CLI\'s `build` command now accepts aliases.\\n  ([packit#1052](https://github.com/packit/packit/pull/1052))\\n- The service runs on Fedora 33 now.\\n\\n## Week 6 (February 8th - February 12th)\\n\\n- `--dist-git-branches` option in the CLI\'s `propose-downstream` command was\\n  fixed, it now respects set branches.\\n  ([packit#1094](https://github.com/packit/packit/pull/1094))\\n- The way Packit adds patches to spec-file in source-git repo was improved, now\\n  it shouldn\'t fail if patches are sparsely numbered.\\n  ([packit#1100](https://github.com/packit/packit/pull/1100))\\n\\n## Week 7 (February 15th - February 19th)\\n\\n- The service now handles issue/MR comments on Gitlab.\\n  ([packit-service#985](https://github.com/packit/packit-service/pull/985))\\n- `packit init` command now works with CentOS packages.\\n  ([packit#1106](https://github.com/packit/packit/pull/1106))\\n\\n## Week 8 (February 22th - February 25th)\\n\\n- Sandcastle can run multiple commands in one sandbox, kudos to Tomas.\\n  ([sandcastle#93](https://github.com/packit/sandcastle/pull/93))\\n- MatejF & MatejM improved CLI\'s `create-update` to work with EPEL and add password prompt.\\n  ([packit#1122](https://github.com/packit/packit/pull/1122),\\n  [packit#1127](https://github.com/packit/packit/pull/1127))\\n- Service runs builds for targets from `build` + `test` jobs, kudos to Laura.\\n  ([packit-service#996](https://github.com/packit/packit-service/pull/996))\\n- MatejF did a lot of small fixes and improvements of packit-service.\\n  ([packit-service#989](https://github.com/packit/packit-service/pull/989),\\n  [packit-service#993](https://github.com/packit/packit-service/pull/993),\\n  [packit-service#994](https://github.com/packit/packit-service/pull/994))\\n\\n## Week 9 (March 1st - March 5th)\\n\\n- Tomas improved the performance of sandcastle, all the user-defined actions now run in one sandbox.\\n  This should also speed up the SRPM builds. ([packit#1129](https://github.com/packit/packit/pull/1129))\\n- You can view the results of jobs directly in our dashboard, kudos to Anchit. ([dashboard#73](https://github.com/packit/dashboard/pull/73))\\n- Jirka implemented setting of the [environment context](https://tmt.readthedocs.io/en/latest/spec/context.html)\\n  when running the Testing farm tests. ([packit-service#1008](https://github.com/packit/packit-service/pull/1008))\\n- In Packit there is a new configuration option `sources` which overrides the URLs defined in specfiles.\\n  ([packit#1131](https://github.com/packit/packit/pull/1131), [packit#1143](https://github.com/packit/packit/pull/1143))\\n\\n## Week 10 (March 8th - March 12th)\\n\\n- Jirka worked on setting up GitHub Workflows across all of the Packit\\n  repositories to build the container images for Packit Service and push them\\n  to Quay.io.\\n- Tom\xe1\u0161 fixed a bug in the linearization mechanism used when generating patch\\n  files from a series of Git commits. ([packit#1144](https://github.com/packit/packit/pull/1144))\\n- Hunor implemented a way for `packit` to detect if patch-files generated from\\n  Git are identical with the ones already in dist-git. This should help\\n  avoiding superfluous changes done by `propose-downstream`. ([packit#1133](https://github.com/packit/packit/pull/1133))\\n- Jirka increased the delay (to 3 minutes in total) for Packit Service when\\n  retrying downloading the sources during a `propose-downstream` job. This\\n  should give more time for the sources to become available after a release is\\n  created. ([packit-service#1019](https://github.com/packit/packit-service/pull/1019))\\n- Mat\u011bj fixed an ugly bug which caused Packit Service not to react to\\n  installation events. ([packit-service#1018](https://github.com/packit/packit-service/pull/1018))\\n\\n## Week 11 (March 15th - March 19th)\\n\\n- Laura fixed a bug in the processing of GitHub App installations.\\n  ([packit-service#1020](https://github.com/packit/packit-service/pull/1020))\\n- Jirka fixed a bug that caused improper numbering of patches for source-git.\\n  ([packit#1164](https://github.com/packit/packit/pull/1164))\\n\\n## Week 12 (March 22th - March 26th)\\n\\n- Franta improved database schema. It will help us match builds and tests together more easily and solve some UX problems.\\n  ([packit-service#954](https://github.com/packit/packit-service/pull/954))\\n- `packit init` CLI command has been updated to\\n  - place downstream packaging files in a subdirectory `.distro` instead of `fedora`.\\n    ([packit#1165](https://github.com/packit/packit/pull/1165))\\n  - enable using Stream 9 dist-git as a source.\\n    ([packit#1177](https://github.com/packit/packit/pull/1177))\\n- Laura reworked how specfiles are being synced from downstream dist-git repositories and we are running a PoC for packit\'s projects to test the new approach.\\n  ([packit-service#1023](https://github.com/packit/packit-service/pull/1023))\\n- It\'s possible to specify a distinct test repository for tests in a test job.\\n  ([packit#1155](https://github.com/packit/packit/pull/1155))\\n  ([packit-service#1021](https://github.com/packit/packit-service/pull/1021))\\n- `centos-stream` target is temporarily resolved to `centos-stream-8` to reflect a change in Copr.\\n  ([packit#1167](https://github.com/packit/packit/pull/1167))\\n\\n## Week 13 (March 29th - April 1st)\\n\\n- Jirka fixed a bug in `packit push-update`\\n  ([packit#1191](https://github.com/packit/packit/pull/1191)).\\n- Mat\u011bj introduced the `fedora-latest` alias for build and test targets, which\\n  resolves to the latest _branched_ Fedora Linux\\n  ([packit#1187](https://github.com/packit/packit/pull/1187)).\\n- A custom path for the package config (aka `packit.yaml`) can be specified\\n  using a new, top-level `-c, --config` option\\n  ([packit#1184](https://github.com/packit/packit/pull/1184)).\\n\\n## Week 14 (April 4th - April 9th)\\n\\n- Honza converted packit\'s test suite from STI to FMF and configured packit to\\n  synchronize the suite to Fedora dist-git\\n  ([packit#1192](https://github.com/packit/packit/pull/1192)).\\n- Franta fixed a bug in packit which kept only appending targets to an existing\\n  COPR project which is no longer a case - dropped targets are now being\\n  removed\\n  ([packit#1197](https://github.com/packit/packit/pull/1197)).\\n\\n## Week 15 (April 12th - April 16th)\\n\\n- Tom\xe1\u0161 fixed an issue in chaining variable definitions in the RPM macros used\\n  to set up source-git repositories with `packit init`\\n  ([packit#1206](https://github.com/packit/packit/pull/1206)).\\n- Jirka improved the error message Packit Service emits when the request to\\n  start a test in Testing Farm fails\\n  ([packit-service#1055](https://github.com/packit/packit-service/pull/1055)).\\n- Laura made Packit Service to set a status for jobs as soon as the requests\\n  are received, and before starting any of the jobs\\n  ([packit-service#1046](https://github.com/packit/packit-service/pull/1046)).\\n  This way users will receive a more immediate feedback about the Service\\n  handling their requests.\\n\\n## Week 16 (April 19th - April 23th)\\n\\n- The `current_version_command` and `create_tarball_command` config options are being deprecated\\n  in favour of [actions](https://packit.dev/docs/configuration/actions/).\\n  An issue will be created in the affected repositories if we find those options in use.\\n  ([packit-service#1064](https://github.com/packit/packit-service/pull/1064))\\n- The result pages have been replaced by the views on our dashboard.\\n  Let us know what do you think about that and what information do you want to see there.\\n  You can expect more changes on this field.\\n  - The result views have been implemented by [@IceWreck](https://github.com/IceWreck)\\n    ([dashboard#73](https://github.com/packit/dashboard/pull/73)).\\n  - The integration on packit-service side has been done by [Ma\u0165o](https://github.com/mfocko)\\n    ([packit-service#1056](https://github.com/packit/packit-service/pull/1056),\\n    [dashboard#95](https://github.com/packit/dashboard/pull/95)).\\n\\n## Week 17 (April 26th - April 30th)\\n\\n- When initiating a new source-git repo, packit adds info about sources to packit.yaml.\\n  Also dist-git sources from the lookaside cache are not commited.\\n  ([packit#1208](https://github.com/packit/packit/pull/1208),\\n  [packit#1216](https://github.com/packit/packit/pull/1216)).\\n- Franta added support for git repository cache into packit. The service part is yet to be done\\n  ([packit#1214](https://github.com/packit/packit/pull/1214)).\\n- Service reacts to `/packit` commands only when they appear alone on a line\\n  ([packit-service#1065](https://github.com/packit/packit-service/pull/1065),\\n  [packit-service#1083](https://github.com/packit/packit-service/pull/1083)).\\n- Service doesn\'t create duplicate issues when configuration is invalid\\n  ([packit-service#1075](https://github.com/packit/packit-service/pull/1075)).\\n- We deprecated `current_version_command` and `create_tarball_command` in packit config\\n  ([packit#1212](https://github.com/packit/packit/pull/1212)).\\n\\n## Week 18 (May 3rd - May 7th)\\n\\n- Laura fixed the problem with `fedora-latest` alias\\n  ([packit#1222](https://github.com/packit/packit/pull/1222)).\\n- We now have separate workers for short and long running tasks. This should\\n  lead to better responsiveness\\n  ([packit-service#1059](https://github.com/packit/packit-service/pull/1059),\\n  [deployment#202](https://github.com/packit/deployment/pull/202)).\\n\\n## Week 19 (May 10th - May 14th)\\n\\n- Jirka added support for creating Bugzilla bugs for newly created MRs on GitLab\\n  ([packit-service#1087](https://github.com/packit/packit-service/pull/1087)).\\n- The installation instructions for failed or unfinished COPR builds are not\\n  displayed on the results page ([dashboard#104](https://github.com/packit/dashboard/pull/104)).\\n\\n## Week 20 (May 17th - May 21st)\\n\\n- Hunor created an update-dist-git command\\n  ([packit#1228](https://github.com/packit/packit/pull/1228)).\\n- Jan: use packit config as a place to create reference to tests\\n  ([packit#1245](https://github.com/packit/packit/pull/1245)).\\n\\n## Week 21 (May 24th - May 28th)\\n\\n- Jirka added attribute for `update-dist-git` command to specify the packaging tool (e.g. `centpkg`).\\n  By default, `fedpkg` is used.\\n  ([packit#1257](https://github.com/packit/packit/pull/1257),\\n  [packit-service#1105](https://github.com/packit/packit-service/pull/1105)).\\n- Tom\xe1\u0161 added support for `patch_id` in the metadata of source-git commits.\\n  ([packit#1252](https://github.com/packit/packit/pull/1252))\\n- Hunor improved the strategy of checking Copr results\\n  when we don\'t receive that information over message-bus.\\n  ([packit-service#1104](https://github.com/packit/packit-service/pull/1104))\\n\\n## Week 22 (May 31st - June 4th)\\n\\n- We have a new [status page](https://status.packit.dev), kudos to Jirka!\\n- Franta fixed a bug that if some action during `propose-downstream` caused an upstream git repository to be dirty,\\n  the sync for other branches failed. ([packit-service#1111](https://github.com/packit/packit-service/pull/1111))\\n- `packit generate` is not supported anymore. ([packit#1269](https://github.com/packit/packit/pull/1269))\\n- Tom\xe1\u0161 improved the patch ordering. ([packit#1263](https://github.com/packit/packit/pull/1263))\\n\\n## Week 23 (June 7th - June 11th)\\n\\n- Tom\xe1\u0161 improved the way changelog is passed from source-git repo to dist-git.\\n  ([packit#1265](https://github.com/packit/packit/pull/1265))\\n- Hunor created a new subcommand `source-git` to group source-git related commands\\n  `init` and `update-dist-git`. ([packit#1273](https://github.com/packit/packit/pull/1273))\\n- Franti\u0161ek improved API by adding `submitted_time` to the test result.\\n  ([packit-service#1113](https://github.com/packit/packit-service/pull/1113))\\n\\n## Week 24 (June 14th - June 19th)\\n\\n- Franta started working on packit-service being able to submit test jobs to\\n  internal testing farm so teams can test upstream changes against RHEL.\\n  ([packit-service#1124](https://github.com/packit/packit-service/pull/1124)\\n  [packit#1280](https://github.com/packit/packit/pull/1280))\\n- Hunor continues working on `packit source-git init`: CLI is now more\\n  streamlined and simplified, and the command produces source-git repos\\n  matching [our documentation]({{< ref \\"create-source-git.md\\" >}}).\\n  ([packit#1277](https://github.com/packit/packit/pull/1277))\\n- Ma\u0165o Focko finished his refactoring of the `Upstream` class - should not have\\n  impact on our users, but make the code easier to work with.\\n  ([packit#1157](https://github.com/packit/packit/pull/1157))\\n\\n## Week 25 (June 21st - June 26th)\\n\\n- Hunor made several improvements to `source-git init`\'s CLI.\\n  ([packit#1284](https://github.com/packit/packit/pull/1284))\\n- Thanks to Frantisek there is now one COPR project/repo used for all releases.\\n  ([packit-service#1128](https://github.com/packit/packit-service/pull/1128))\\n- Laura fixed a bug in syncing downstream to upstream.\\n  ([packit#1285](https://github.com/packit/packit/pull/1285))\\n\\n## Week 26+27 (June 28th - July 9th)\\n\\nSummer is here and vacations with it. Most of the work done in this sprint\\nis either internal (not user facing) or not finished yet.\\n\\n- Thanks to Ma\u0165ejM Packit Service now triggers a new Copr build if no\\n  suitable build has been found. That fixes an issue that the service sometimes\\n  did not react to `/packit test`.\\n  ([packit-service#1132](https://github.com/packit/packit-service/pull/1132))\\n\\n## Week 28 (July 12th - July 16th)\\n\\n- We have a new API endpoint for obtaining projects of a given forge.\\n  ([packit-service#1159](https://github.com/packit/packit-service/pull/1159))\\n- The bug causing that some projects couldn\'t be loaded in our dashboard was fixed.\\n  ([packit-service#1161](https://github.com/packit/packit-service/pull/1161))\\n\\n## Week 29 (July 19th - July 23th)\\n\\n- Various improvements on our dashboard were done; mainly:\\n  - Projects can be filtered by a forge.\\n    ([dashboard#124](https://github.com/packit/dashboard/pull/124))\\n  - Table with jobs was unified and cleaned.\\n    ([dashboard#121](https://github.com/packit/dashboard/pull/121))\\n- Newly, we use the [Checks API](https://docs.github.com/en/rest/reference/checks) to show results on GitHub.\\n  You can still see the results on the bottom of the pull-request page,\\n  but also in the `Checks` tab.\\n  This gives us more options like status with a neutral state\\n  (e.g. currently, for permission errors) or a place for showing more details.\\n  Don\'t forget to give our GitHub application permissions to use it.\\n  You can expect more improvements in this field.\\n  ([packit-service#1167](https://github.com/packit/packit-service/pull/1167))\\n\\n## Week 30 (July 26th - July 30th)\\n\\n- Source-git patch metadata: the `squash_commits` key is deprecated. Instead of using this,\\n  set the same [`patch_name`](/development/patch-metadata#patch_name) in the commit\\n  message of adjacent commits, which should end up in the same patch file.\\n  ([packit#1309](https://github.com/packit/packit/pull/1309))\\n- `packit init` can now find a spec file inside of a git repository and set\\n  it in `.packit.yaml`. ([packit#1313](https://github.com/packit/packit/pull/1313))\\n- A lot of work has been done on our dashboard:\\n  - Status labels on dashboard have been reworked.\\n  - New pipelines view for dashboard has been released, where you can see all builds and\\n    tests that were recently run for your pull request, release or branch push. Each row\\n    represents one pipeline of builds and tests from SRPM all the way to the Testing Farm.  \\n    ([dashboard#128](https://github.com/packit/dashboard/pull/128))\\n\\n## Week 31 (August 2nd - August 6th)\\n\\n- `sync_release` in API allows specifying a suffix for the newly created branch in a dist-git repo fork,\\n  so that there can be more open update PRs for the same dist-git branch at the same time.\\n  ([packit#1326](https://github.com/packit/packit/pull/1326))\\n- The behaviour of running tests triggered by `/packit test` comment was improved.\\n  If there is no existing Copr build when the tests are triggered,\\n  Packit service should now react and create a new build.\\n  Also when the last Copr build status is failed,\\n  tests are not submitted and users are informed about this.\\n  ([packit-service#1188](https://github.com/packit/packit-service/pull/1188))\\n- You can use `oraclelinux-7`/`oraclelinux-8` chroots for build and test of your package on Oracle Linux.\\n  ([packit-service#1186](https://github.com/packit/packit-service/pull/1186))\\n\\n## Week 32 (August 9th - August 13th)\\n\\n- `status` command of Packit\'s CLI has been refactored and now provides much cleaner output. ([packit#1329](https://github.com/packit/packit/pull/1329))\\n\\n## Week 33 (August 16th - August 20th)\\n\\n- When reacting to `/packit test`, Packit service sets a status before starting the job\\n  to unify the behaviour with reacting to triggering builds. ([packit-service#1187](https://github.com/packit/packit-service/pull/1187))\\n- `packit validate-config` now checks also the value of the `specfile_path` configuration option\\n  and shows warning if the specified file is not present in the repository. ([packit#1342](https://github.com/packit/packit/pull/1342))\\n\\n## Week 34 (August 23rd - August 27th)\\n\\n- Packit by default locally merges checked out pull requests into target branch.\\n  Logging for checking out pull requests was improved to contain hashes and\\n  summaries of last commit on both source and target branches.\\n  ([packit#1344](https://github.com/packit/packit/pull/1344))\\n- Packit Service now runs Copr and Koji builds and following tests on Testing Farm\\n  for pull requests on the code that would be a result of merging into the target branch.\\n  In case merge conflicts occur during preparation of SRPM,\\n  you can find more info in the SRPM logs.\\n  ([packit-service#1206](https://github.com/packit/packit-service/pull/1206))\\n- Packit\'s CLI `source-git update-dist-git` now supports using Git trailers to define patch metadata,\\n  which will control how patches are generated and added to the spec-file.\\n  `source-git init` uses this format to capture patch metadata when setting up\\n  a source-git repo, instead of the YAML one.\\n  To maintain backwards compatibility, the YAML format is still parsed,\\n  but only if none of the patches defines metadata using Git trailers.\\n  ([packit#1336](https://github.com/packit/packit/pull/1336))\\n- These changes will be applied next week (not this week as usual).\\n\\n## Week 35 (August 30th - September 3rd)\\n\\n- A bug in Packit that caused purging or syncing upstream changelog\\n  (when not configured) from specfile when running `propose-downstream` was fixed.\\n  New behavior preserves downstream changelog and in case there are either\\n  no entries or no %changelog section present, it is created with a new entry.\\n  ([packit#1349](https://github.com/packit/packit/pull/1349))\\n\\n## Week 36 (September 6th - September 10th)\\n\\n- `packit source-git init` was updated to try to apply patches with `git am` first, and use `patch` only when this fails, in order to keep the commit message of Git-formatted (mbox) patch files in the source-git history. ([packit#1358](https://github.com/packit/packit/pull/1358))\\n\\n## Week 37 (September 13th - September 17th)\\n\\n- Now you can find URL pointing directly to testing farm results on GitHub Checks page. ([packit-service#1215](https://github.com/packit/packit-service/pull/1215))\\n- Ogr now supports reacting to the comment with a given reaction, getting them in list and deleting them (only when reaction is added by using ogr API). ([ogr#636](https://github.com/packit/ogr/pull/636))\\n- Packit now provides `PACKIT_RPMSPEC_RELEASE` environment variable in actions. ([packit#1363](https://github.com/packit/packit/pull/1363))\\n- Dashboard no longer shrinks Copr/Koji icons when being open in narrow view. ([dashboard#140](https://github.com/packit/dashboard/pull/140))\\n\\n## Week 38 (September 20th - September 24th)\\n\\n- [Dashboard](https://dashboard.packit.dev) now shows more readable format of time,\\n  e.g. \\"just now\\", \\"a minute ago\\", etc. If you wish to see exact date-time of\\n  the run, you can either hover over the time and tooltip with details appear.\\n  In case of result pages more readable format is present in the tooltip rather\\n  than by default. Also times are now shown in your local time zone. ([dashboard#142](https://github.com/packit/dashboard/pull/142))\\n- Packit can now read commit messages from a patch to support characters which cannot be encoded with UTF-8. ([packit#1372](https://github.com/packit/packit/pull/1372))\\n- EPEL targets are now being mapped to CentOS Linux inside the internal Testing Farm runs. ([packit-service#1225](https://github.com/packit/packit-service/pull/1225))\\n\\n## Week 39 (September 27th - October 1st)\\n\\n- Clicking on logo on [dashboard](https://dashboard.packit.dev/) no longer\\n  opens a new page, but rather reloads the current one.\\n- We consider [Pipelines view](https://dashboard.packit.dev/pipelines) on\\n  dashboard to be ready for production use. We\'re planning to improve the user\\n  experience when using pipelines with easier navigation and filtering\\n  options.\\n- Building the latest development versions of\\n  [packit](https://github.com/packit/packit) and\\n  [ogr](https://github.com/packit/ogr) was moved to the\\n  [packit/packit-dev](https://copr.fedorainfracloud.org/coprs/packit/packit-dev/)\\n  Copr repo.\\n\\n## Week 40 (October 4th - October 8th)\\n\\n- [A bug](https://github.com/packit/packit/issues/1255) in Packit causing\\n  issues with local build when the branch was named with prefix `rpm` has been\\n  fixed.\\n- To fulfill requests regarding updating targets on Copr repositories, Packit\\n  Service will sync targets for the projects created by Packit Service (e.g.\\n  pull requests, or non-set Copr repository for releases and branch builds)\\n  and for Copr repositories **not owned by Packit** will try to extend the\\n  list if necessary.\\n- If you trigger packit jobs with one of `/packit _` commands, our bot gives\\n  you a \ud83d\udc4d reaction to let you know that we are working on it.\\n- Rerunning of failed tasks via GitHub Checks interface is now supported. You are now free to click those \\"Re-run\\" links.\\n- [ogr documentation](https://packit.github.io/ogr/) is converted to\\n  Google-style docstrings. In case there are any discrepancies, missing docs\\n  or docstrings in different format, please open an issue.\\n\\n## Week 41 (October 11th - October 15th)\\n\\n- We have added a new option to Packit CLI when creating Bodhi updates, you can\\n  use `-b` or `--resolve- bugzillas` and specify IDs (separated by comma, e.g.\\n  `-b 1` or `-b 1,2,3`) of bugzillas that are being closed by the update.\\n  ([packit#1383](https://github.com/packit/packit/pull/1383))\\n- Packit will deduce the version for SRPM from the spec file, if there are no\\n  git tags or action for acquiring current version defined.\\n  ([packit#1388](https://github.com/packit/packit/pull/1388))\\n- It is possible to use `aarch64` architecture in the Testing Farm.\\n  ([packit-service#1247](https://github.com/packit/packit-service/pull/1247))\\n- Running tests via Testing Farm now supports `centos-6` target.\\n  ([packit-service#1244](https://github.com/packit/packit-service/pull/1244))\\n\\n## Week 42 (October 18th - October 22th)\\n\\n- We have introduced new options for generating SRPM packages:\\n  ([packit#1396](https://github.com/packit/packit/pull/1396))\\n  - `--no-bump` that prevents changing of the release in the SRPM,\\n    which can be used for creating SRPMs on checked out tags/releases.\\n  - `--release-suffix` that allows you to customize the suffix after the release number,\\n    e.g. reference bugzilla or specific branch of the build.\\n- Copr build installation instructions now contain detailed info about\\n  the built packages, so you can install the precise build from your pull request.\\n  ([dashboard#149](https://github.com/packit/dashboard/pull/149))\\n\\n## Week 43 (October 25th - November 1st)\\n\\n- We have introduced a new configuration option `merge_pr_in_ci` that allows you to disable merging of PR into the base branch before creating SRPM in service. ([packit#1395](https://github.com/packit/packit/pull/1395), [packit-service#1261](https://github.com/packit/packit-service/pull/1261))\\n- If the upstream spec file is located in a subdirectory (such as\\n  `packaging/fedora/pkg.spec`), it is now correctly synced to the root of\\n  the downstream repository, since that\'s where rpmbuild will look\\n  for it. ([packit#1402](https://github.com/packit/packit/pull/1402))\\n- The \\"Congratulations!\\" comment no longer has a disclaimer about our intentions to stop posting it by default. We have already made that move earlier this year, so the disclaimer is no longer relevant. ([packit-service#1260](https://github.com/packit/packit-service/pull/1260))\\n- Deprecated configuration options `current_version_command` and `create_tarball_command` have been removed and are no longer supported. They are superseded by actions `get-current-version` and `create-archive`. ([packit#1397](https://github.com/packit/packit/pull/1397))\\n\\n## Week 44 (November 1st - November 5th)\\n\\n- We have fixed several issues in packit when it\'s periodically checking\\n  statuses of jobs. You should now reliably see up to date check statuses for\\n  Copr RPM builds and Testing Farm runs.\\n  ([packit-service#1267](https://github.com/packit/packit-service/pull/1267)),\\n  ([packit-service#1265](https://github.com/packit/packit-service/pull/1265))\\n- Fixed an issue, which raised a `UnicodeEncodingError`, when working with\\n  dist-git patch files with an encoding other than UTF-8.\\n  ([packit#1406](https://github.com/packit/packit/pull/1406))\\n- Backup alias definitions now reflect the official release of Fedora 35.\\n  ([packit#1405](https://github.com/packit/packit/pull/1405))\\n\\n## Week 45 (November 8th - November 12th)\\n\\n- You can now specify `skip_build` option in the test job metadata in the\\n  Packit configuration file. This will cause no Copr build to be built and\\n  installed into the testing environment, but only trigger the tests in\\n  Testing Farm (the selected components to be installed should be part of the\\n  TMT definitions).\\n  ([packit-service#1256](https://github.com/packit/packit-service/pull/1256))\\n- Packit supports `changelog-entry` action that is used when creating SRPM.\\n  The action is supposed to generate whole changelog entry (including `- ` at\\n  the start of the lines) and has a priority over any other way we modify the\\n  changelog with. ([packit#1367](https://github.com/packit/packit/pull/1367))\\n\\n## Week 46 (November 15th - November 19th)\\n\\n- A new `env` config option has been added for specifying environment variables,\\n  which are then passed to Testing Farm along with some more pre-defined\\n  variables (e.g. name of the project, URL, etc).\\n  ([packit#1411](https://github.com/packit/packit/pull/1411))\\n  ([packit-service#1275](https://github.com/packit/packit-service/pull/1275))\\n- The GitHub check run names are now shorter and easier to read.\\n  ([packit-service#1281](https://github.com/packit/packit-service/pull/1281))\\n\\n## Week 47 (November 22th - November 26th)\\n\\n- You can set up a new `koji_build` job using the commit trigger to submit a\\n  Koji build for a new commit in a dist-git branch. The configuration file\\n  needs to be present in the dist-git for now\\n  (the state for the new commit is used).\\n  ([packit-service#1278](https://github.com/packit/packit-service/pull/1278))\\n\\n## Week 48 (November 29th - December 3rd)\\n\\n- External contributors can\'t trigger internal tests initially. Project\\n  maintainers need to trigger the action via `/packit test` comment to run\\n  the job.\\n  ([packit-service#1302](https://github.com/packit/packit-service/pull/1302))\\n  ([packit-service#1305](https://github.com/packit/packit-service/pull/1305))\\n- A new `packit prepare-sources` command has been implemented for preparing\\n  sources for an SRPM build using the content of an upstream repository.\\n  ([packit#1424](https://github.com/packit/packit/pull/1424))\\n- Packit now visibly informs about an ongoing cloning process to remove\\n  potential confusion.\\n  ([packit#1431](https://github.com/packit/packit/pull/1431))\\n- The `upstream_package_name` config option is now checked for illegal\\n  characters and an error is thrown if it contains them.\\n  ([packit#1434](https://github.com/packit/packit/pull/1434))\\n\\n## Week 49 (December 6th - December 12th)\\n\\n- Packit now correctly finds the release event if you don\'t use the version as a release title.\\n  ([packit#1437](https://github.com/packit/packit/pull/1437))"},{"id":"/2020","metadata":{"permalink":"/posts/weekly/2020","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2020.md","source":"@site/weekly/2020.md","title":"2020","description":"Let\'s see what happened in Packit in 2020.","date":"2022-01-04T00:00:00.000Z","formattedDate":"January 4, 2022","tags":[{"label":"2020","permalink":"/posts/weekly/tags/2020"}],"readingTime":22.565,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"2020","date":"2022-01-04T00:00:00.000Z","tags":["2020"]},"prevItem":{"title":"2021","permalink":"/posts/weekly/2021"},"nextItem":{"title":"2019","permalink":"/posts/weekly/2019"}},"content":"Let\'s see what happened in Packit in 2020.\\n\\n\x3c!--truncate--\x3e\\n\\n## Week 1\\n\\n### packit\\n\\n- Correctly updates version on srpm build. ([#642](https://github.com/packit-service/packit/pull/642))\\n- Downloads all URL sources before srpm build. ([#643](https://github.com/packit-service/packit/pull/643))\\n\\n### packit service\\n\\n- Runs on Fedora 31. ([#303](https://github.com/packit-service/packit-service/pull/303), [#304](https://github.com/packit-service/packit-service/pull/304))\\n- Correctly checks list of whitelisted repositories when issue comment is added. ([#309](https://github.com/packit-service/packit-service/pull/309))\\n\\n## Week 2\\n\\n### packit\\n\\n- Incorporates lots of SRPM related improvements. ([#646](https://github.com/packit-service/packit/pull/646), [#650](https://github.com/packit-service/packit/pull/650), [#651](https://github.com/packit-service/packit/pull/651), [#652](https://github.com/packit-service/packit/pull/652), [#653](https://github.com/packit-service/packit/pull/653))\\n- Better handles when Copr owner is not set. ([#648](https://github.com/packit-service/packit/pull/648))\\n\\n### packit service\\n\\n- Fixes SRPM exceptions/errors handling. ([#311](https://github.com/packit-service/packit-service/pull/311), [#317](https://github.com/packit-service/packit-service/pull/317))\\n- Has loading of config fixed. ([#318](https://github.com/packit-service/packit-service/pull/318))\\n\\n## Week 3\\n\\n### packit\\n\\n- Uses [Marshmallow](https://pypi.org/project/marshmallow) for configuration schema. ([#657](https://github.com/packit-service/packit/pull/657))\\n- Is able to build in [Koji](https://koji.fedoraproject.org) from upstream/source-git. ([#658](https://github.com/packit-service/packit/pull/658))\\n- Doesn\'t download remote sources when \\"sources\\" path exists in upstream. ([#659](https://github.com/packit-service/packit/pull/659))\\n- Configuration file allows list syntax in action commands. ([#663](https://github.com/packit-service/packit/pull/663))\\n- Configuration can use a new option to exclude paths from patching. ([#666](https://github.com/packit-service/packit/pull/666))\\n- Has few less bugs. ([#660](https://github.com/packit-service/packit/pull/660), [#661](https://github.com/packit-service/packit/pull/661), [#664](https://github.com/packit-service/packit/pull/664), [#667](https://github.com/packit-service/packit/pull/667))\\n\\n### packit service\\n\\n- Uses [Marshmallow](https://pypi.org/project/marshmallow) for configuration schema. ([#320](https://github.com/packit-service/packit-service/pull/320))\\n- Runs build for test job even when it\'s not explicitly configured. ([#324](https://github.com/packit-service/packit-service/pull/324))\\n- Reports invalid or missing packit config. ([#328](https://github.com/packit-service/packit-service/pull/328))\\n- Status workflow has been changed and simplified. ([#338](https://github.com/packit-service/packit-service/pull/338))\\n- Minor fixes. ([#323](https://github.com/packit-service/packit-service/pull/323), [#326](https://github.com/packit-service/packit-service/pull/326), [#329](https://github.com/packit-service/packit-service/pull/329), [#331](https://github.com/packit-service/packit-service/pull/331), [#335](https://github.com/packit-service/packit-service/pull/335), [#336](https://github.com/packit-service/packit-service/pull/336))\\n\\n## Week 4\\n\\n### packit\\n\\n- [0.8.1](https://pypi.org/project/packitos/0.8.1/) has been released.\\n- CLI has bash auto completion. ([#654](https://github.com/packit-service/packit/pull/654))\\n- Few bugs have been squashed. ([#668](https://github.com/packit-service/packit/pull/668), [#670](https://github.com/packit-service/packit/pull/670), [#676](https://github.com/packit-service/packit/pull/676), [#677](https://github.com/packit-service/packit/pull/677), [#678](https://github.com/packit-service/packit/pull/678), [#680](https://github.com/packit-service/packit/pull/680), [#682](https://github.com/packit-service/packit/pull/682))\\n\\n### packit service\\n\\n- More checks messages have been unified. ([#355](https://github.com/packit-service/packit-service/pull/355))\\n- One more testing-farm status is now shown before the tests are submitted. ([#343](https://github.com/packit-service/packit-service/pull/343))\\n- No-fmf scenario has better messages. ([#362](https://github.com/packit-service/packit-service/pull/362))\\n- Minor fixes and improvements. ([#339](https://github.com/packit-service/packit-service/pull/339), [#340](https://github.com/packit-service/packit-service/pull/340), [#342](https://github.com/packit-service/packit-service/pull/342), [#345](https://github.com/packit-service/packit-service/pull/345), [#346](https://github.com/packit-service/packit-service/pull/346), [#347](https://github.com/packit-service/packit-service/pull/347), [#348](https://github.com/packit-service/packit-service/pull/348), [#352](https://github.com/packit-service/packit-service/pull/352), [#353](https://github.com/packit-service/packit-service/pull/353), [#350](https://github.com/packit-service/packit-service/pull/350), [#357](https://github.com/packit-service/packit-service/pull/357), [#358](https://github.com/packit-service/packit-service/pull/358), [#361](https://github.com/packit-service/packit-service/pull/361), [#364](https://github.com/packit-service/packit-service/pull/364))\\n\\n## Week 5\\n\\n### packit\\n\\n- CLI has a new command for local build. ([#687](https://github.com/packit-service/packit/pull/687))\\n- Logs less. ([#685](https://github.com/packit-service/packit/pull/685))\\n\\n### packit service\\n\\n- Minor fixes and improvements. ([#365](https://github.com/packit-service/packit-service/pull/365), [#371](https://github.com/packit-service/packit-service/pull/371), [#373](https://github.com/packit-service/packit-service/pull/373), [#376](https://github.com/packit-service/packit-service/pull/376))\\n\\n## Week 6\\n\\nBoth Packit and Packit Service pre-commit hooks [were][1] [updated][2] to include\\n[prettier] and [setup-cfg-fmt], in order to have a more consistent formatting of\\nmarkup, YAML, JSON and `setup.cfg` files.\\n\\nIt became easier for developers to [build the Packit base image] locally, and\\ntests in Zuul [were configured] to run on Fedora 31.\\n\\nPackit learned [how to look for RPM spec files on its own], so specifying\\n`specfile_path` in the configuration is not mandatory anymore. Packit will\\nrecursively search the tree and use the first spec file found.\\n\\nThe Redis pod in Packit Service uses an up to date image now, [based on Fedora 31].\\nKudos to [hhorak] for the help!\\n\\n[1]: https://github.com/packit-service/packit/pull/697\\n[2]: https://github.com/packit-service/packit-service/pull/383\\n[prettier]: https://github.com/prettier/prettier\\n[setup-cfg-fmt]: https://github.com/asottile/setup-cfg-fmt\\n[build the packit base image]: https://github.com/packit-service/packit/pull/695\\n[were configured]: https://github.com/packit-service/packit/pull/694\\n[how to look for rpm spec files on its own]: https://github.com/packit-service/packit/pull/634\\n[based on fedora 31]: https://github.com/packit-service/deployment/pull/51\\n[hhorak]: https://github.com/hhorak\\n\\n## Week 7\\n\\nThe default configuration generated by Packit has [test jobs enabled] from now\\non. This should simplify configuring Packit in new repositories.\\n\\n[Fixed a bug] which was causing SRPM-build failures in Packit Service for projects\\nwhich had their spec files stored in a subdirectory.\\n\\nAs a result of [keys.fedoraproject.org] being turned off, Packit now [tries] a\\nlist of GPG keyservers when downloading keys to check commit signatures.\\n\\nWhen enabling Packit Service for new GitHub repositories, instead of checking\\nif the requester is a Fedora packager, we\'ll check if they [signed the Fedora\\nProject Contributor Agreement].\\n\\nWhile proposing an update to Fedora, Packit Service will [report a failure] now\\nwhen there are no releases found in the upstream GitHub repository.\\n\\nTest results became [serializable], we will not block when [no test results\\nare received], and Packit Service received [some initial code] to enable using\\nPostgreSQL as a data backend.\\n\\n[test jobs enabled]: https://github.com/packit-service/packit/pull/703\\n[fixed a bug]: https://github.com/packit-service/packit/pull/698\\n[tries]: https://github.com/packit-service/packit/pull/699\\n[keys.fedoraproject.org]: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/message/COEYWJBQDAWRSYNQW7Y7TD2EKEGBWOAY/\\n[signed the fedora project contributor agreement]: https://github.com/packit-service/packit-service/pull/403\\n[no test results are received]: https://github.com/packit-service/packit-service/pull/388\\n[some initial code]: https://github.com/packit-service/packit-service/pull/319\\n[report a failure]: https://github.com/packit-service/packit-service/pull/399\\n[serializable]: https://github.com/packit-service/packit-service/pull/391\\n\\n## Week 8\\n\\nPostgresql database was introduced in production environment to improve performance and enable implementation\\nof new features, e.g. storing logs to reduce amount of messages sent directly to pull request [(#406)], [(#420)].\\n\\nCleanup in configuration files was performed, so no longer needed values were removed from .packit.yaml [(#709)].\\nUser experience was improved by adding new `--upstrem-ref` option to `copr-build` command in command-line interface [(#718)]\\nand making error reporting more robust by adding new fedpkg clones related error message [(#714)].\\n\\nFollowing bugs were fixed:\\n\\n- bug in copr-build command fixed [(#713)]\\n- get_local_package_config() duplicate entries in \'directories\' bug fixed [(#715)]\\n\\n[(#709)]: https://github.com/packit-service/packit/pull/709\\n[(#718)]: https://github.com/packit-service/packit/pull/718\\n[(#714)]: https://github.com/packit-service/packit/pull/714\\n[(#713)]: https://github.com/packit-service/packit/pull/713\\n[(#715)]: https://github.com/packit-service/packit/pull/715\\n[(#406)]: https://github.com/packit-service/packit-service/pull/406\\n[(#420)]: https://github.com/packit-service/packit-service/pull/420\\n\\n## Week 9\\n\\n### packit\\n\\n- Dist-git patches are now applied in source-git repos with `-p1` to resolve an issue when they are generated with git and patch program fails to apply them [(#730)].\\n- Fedora 32 was added to \'fedora-all\' and \'fedora-development\' aliases [(#731)].\\n- We have put more links to our documentation (README, deprecation warning in packit) so that people can easily correct their configuration files [(#726)].\\n\\n### packit-service\\n\\n- `targets` key in copr job definition in the packit.yaml is no longer a required field (it defaults to `fedora-stable`) [(#431)].\\n- Builds are now correctly linked to their actual GitHub projects (this can be seen in the logs view) [(#441)].\\n\\n[(#730)]: https://github.com/packit-service/packit/pull/730\\n[(#731)]: https://github.com/packit-service/packit/pull/731\\n[(#726)]: https://github.com/packit-service/packit/pull/726\\n[(#431)]: https://github.com/packit-service/packit-service/pull/431\\n[(#441)]: https://github.com/packit-service/packit-service/pull/441\\n\\n## Week 10 (March 2nd - March 6th)\\n\\n### packit\\n\\n- The generate command is now deprecated in favour of the init command\\n  [(#728)], contributed by [@shreyaspapi](https://github.com/shreyaspapi).\\n\\n### packit-service\\n\\n- When a non-collaborator creates a PR, packit says that only \\"Collaborators\\n  can trigger packit-service\\" - this message has been improved to better match\\n  the reality [(#445)].\\n- Packit service no longer posts comments on pull requests when a SRPM can\'t be\\n  created - the logs should be now aviable in the service\'s logs view available\\n  when clocking on the commit status check URL [(#447)].\\n- Commands to control packit service can now be embedded in a comment\\n  (previously, the whole comment was treated as a command) - hence you can now\\n  create a comment to give an update and also trigger packit [(#433)],\\n  contributed by [@IceWreck](https://github.com/IceWreck).\\n- We have improved monitoring of packit-service by using more sentry.io\'s\\n  features [(#458)].\\n- You can now disable the functionality when packit service comments on a PR\\n  when it gets built for the first time (`notifications: {pull_request: {successful_build:: false}}` in your packit.yaml), hi\\n  [Lars](https://github.com/larskarlitski)! [(#455)].\\n\\n[(#728)]: https://github.com/packit-service/packit/pull/728\\n[(#445)]: https://github.com/packit-service/packit-service/pull/445\\n[(#447)]: https://github.com/packit-service/packit-service/pull/447\\n[(#433)]: https://github.com/packit-service/packit-service/pull/433\\n[(#458)]: https://github.com/packit-service/packit-service/pull/458\\n[(#455)]: https://github.com/packit-service/packit-service/pull/455\\n\\n## Week 11 (March 9th - March 13th)\\n\\n### packit\\n\\n- We have changed how packit treats version and release in the spec file [(#748)].\\n  - We handle the `git-describe` output better which should help when tags\\n    contain dashes [(#759)].\\n- When packit adds source-git patches into a spec file it adds them outside\\n  of rpm macros now [(#760)].\\n- In pull request pipelines we run the packit-service tests so that we are sure we\\n  do not break the service [(#752)].\\n\\n### packit-service\\n\\n- Comments from packit-service about successful `propose-update` in the issue\\n  which triggered the update now include the URL of the new pull-request in Fedora [(#472)].\\n- We have done some major refactoring how jobs are processed\\n  [(#476)], [(#746)], [(#453)].\\n- Development and debugging of the packit-service should be easier now, we\\n  documented how to run packit-service locally [(#473)].\\n\\n[(#746)]: https://github.com/packit-service/packit/pull/746\\n[(#748)]: https://github.com/packit-service/packit/pull/748\\n[(#752)]: https://github.com/packit-service/packit/pull/752\\n[(#759)]: https://github.com/packit-service/packit/pull/759\\n[(#760)]: https://github.com/packit-service/packit/pull/760\\n[(#472)]: https://github.com/packit-service/packit-service/pull/472\\n[(#473)]: https://github.com/packit-service/packit-service/pull/473\\n[(#476)]: https://github.com/packit-service/packit-service/pull/476\\n[(#453)]: https://github.com/packit-service/packit-service/pull/453\\n\\n## Week 12 (March 16th - March 20th)\\n\\n### packit\\n\\n- When you are executing `copr-build` command, you do not\\n  need to set the project name if this value is defined in\\n  the `copr_build` job in the configuration file [(#763)].\\n- All patches generated from a source-git repo are now prefixed with a number\\n  so they are easy to sort [(#765)].\\n- We improved the behaviour when loading the authentication in the config file -\\n  users are warned only if deprecated keys are used, no more confusing messages when\\n  you do not have `authentication` key in the configuration [(#754)].\\n\\n### packit-service\\n\\n- We periodically check the status of the copr-build so that we do not need to rely\\n  on the Fedora message bus. This should avoid failures in build status reporting [(#490)].\\n- `Propose-update` triggered by comment in GitHub now recognizes also pre-releases [(#498)].\\n- Several bugs in how we report results from Testing farm have been fixed and Testing\\n  farm results should now appear correctly in commit status checks\\n  [(#496)], [(#505)], [(#510)], [(#513)].\\n\\n[(#765)]: https://github.com/packit-service/packit/pull/765\\n[(#754)]: https://github.com/packit-service/packit/pull/754\\n[(#763)]: https://github.com/packit-service/packit/pull/763\\n[(#490)]: https://github.com/packit-service/packit-service/pull/490\\n[(#498)]: https://github.com/packit-service/packit-service/pull/498\\n[(#497)]: https://github.com/packit-service/packit-service/pull/497\\n[(#496)]: https://github.com/packit-service/packit-service/pull/496\\n[(#505)]: https://github.com/packit-service/packit-service/pull/505\\n[(#510)]: https://github.com/packit-service/packit-service/pull/510\\n[(#513)]: https://github.com/packit-service/packit-service/pull/513\\n\\n## Week 13 (March 23th - March 27th)\\n\\n- New Packit version 0.9.0 was released.\\n- Packit Service now mostly uses PostgreSQL instead of Redis as a backend,\\n  which will result in more responsive API and Dashboard.\\n\\n## Week 14 (March 30th - April 3rd)\\n\\n### packit\\n\\n- Fix web URLs for Copr builds owned by groups [(#778)].\\n- Create downstream spec if it\'s not there (propose-update) - this used to happen when using packit on a newly created package in Fedora which did not have spec fille added yet. [(#779)]\\n- Packit no longer inspects archive extension set in `Source` and creates `.tar.gz` by default - this should be more flexible and prevent issues for \\"non-standard\\" archive names. [(#781)]\\n\\n### packit-service\\n\\n- Several fixes and improvements after switching data store from Redis to PostgreSQL.\\n- Use the configured COPR project when triggering Testing Farm (tests no longer fail for projects which are built in their own COPR namespace) [(#524)].\\n\\n[(#778)]: https://github.com/packit-service/packit/pull/778\\n[(#779)]: https://github.com/packit-service/packit/pull/779\\n[(#781)]: https://github.com/packit-service/packit/pull/781\\n[(#524)]: https://github.com/packit-service/packit-service/pull/524\\n\\n## Week 15 (March 6th - April 9th)\\n\\n### packit\\n\\n- [Tom\xe1\u0161] finished teaching `packit srpm` to [linearise extremely complex Git\\n  histories], in order to get patches that can be applied when building the\\n  SRPM.\\n- [Jirka] made the schema validation code [Marshmallow3 compatible]. This\\n  enables building `packit` in Fedora 32 and Rawhide.\\n\\n### packit-service\\n\\n- [Franta] fixed an issue with [parsing release events].\\n- [Jirka] made code [Marshmallow3] compatible in this project, too.\\n\\n[tom\xe1\u0161]: https://github.com/TomasTomecek\\n[jirka]: https://github.com/jpopelka\\n[franta]: https://github.com/lachmanfrantisek\\n[linearise extremely complex git histories]: https://github.com/packit-service/packit/pull/766\\n[marshmallow3 compatible]: https://github.com/packit-service/packit/pull/775\\n[marshmallow3]: https://github.com/packit-service/packit-service/pull/538\\n[parsing release events]: https://github.com/packit-service/packit-service/issues/536\\n\\n## Week 16 (April 14th - April 17th)\\n\\n### packit & packit-service\\n\\n- Job metadata field `dist-git-branch` is now marked as deprecated, to be\\n  replaced by `dist_git_branches` to match the naming of other metadata fields\\n  and to accept multiple branch names where Packit should work. ([#797],\\n  [#788] and [#564]).\\n- A great deal of refactoring, CI work and general code improvements which\\n  will make Packit and Packit Service run smoother and development easier.\\n\\n[#797]: https://github.com/packit-service/packit/pull/797\\n[#788]: https://github.com/packit-service/packit/pull/788\\n[#564]: https://github.com/packit-service/packit-service/pull/564\\n\\n## Week 17 (April 20th - April 24th)\\n\\n### packit-service\\n\\nIn this week we mostly focused on CentOS Stream and\\nsome under the hood improvements,\\nnone of which are available for GitHub projects.\\n\\n- [Jano] did a lot of work on [initial CentOS Stream integration].\\n- [Hunor] added a Pagure build status reporting.\\n- [Anchit] added first API tests and improved build statuses given by the API.\\n- [Laura] and [Rishav] improved how data about Copr builds are stored in our db.\\n\\n[anchit]: https://github.com/IceWreck\\n[hunor]: https://github.com/csomh\\n[jano]: https://github.com/sakalosj\\n[laura]: https://github.com/lbarcziova\\n[rishav]: https://github.com/rishavanand\\n[initial centos stream integration]: https://github.com/packit-service/packit-service/pull/515\\n\\n## Week 18 (April 27th - April 30th)\\n\\n### packit-service\\n\\n- [Franta] did a great deal of service & worker refactoring related to CentOS ([#586])\\n  and to forks usage in GitHub. ([#589])\\n- [Hunor] fixed confusing GitHub status messages while building in Copr. ([#588])\\n\\n[#586]: https://github.com/packit-service/packit-service/pull/586\\n[#588]: https://github.com/packit-service/packit-service/pull/588\\n[#589]: https://github.com/packit-service/packit-service/pull/589\\n\\n## Week 19 (May 4th - May 6th)\\n\\n### packit\\n\\n- The image now uses ogr from git master instead of from Fedora stable RPM.\\n\\n### packit-service\\n\\n- [Franta] Fixed a previous week introduced bug, which prevented users from being whitelisted. ([#599])\\n- [Hunor] Made improvements to avoid a race condition in getting app access token. ([#601])\\n\\n[franta]: https://github.com/lachmanfrantisek\\n[hunor]: https://github.com/csomh\\n[#599]: https://github.com/packit-service/packit-service/pull/599\\n[#601]: https://github.com/packit-service/packit-service/pull/601\\n\\n## Week 20+21 (May 11th - May 22th)\\n\\n### packit\\n\\n- The debug logs in the CLI are now much more consistent. ([#824])\\n- A bug in the `propose-update` causing problems with the synchronization of the spec-file content was fixed. ([#830])\\n- You can now use `epel-all` alias in the arguments and also in the configuration. ([#835])\\n\\n### packit-service\\n\\n- In job definition for packit-service you can use `epel-all` alias as well. ([#835])\\n\\n[#824]: https://github.com/packit-service/packit/pull/824\\n[#830]: https://github.com/packit-service/packit/pull/830\\n[#835]: https://github.com/packit-service/packit/pull/835\\n\\n## Week 22 (May 25th - May 29th)\\n\\n### packit\\n\\n- [The problem with kerberos initialization](https://github.com/packit-service/packit/issues/837)\\n  was fixed. ([#838])\\n- We released a new version of the packit package. ([release 0.11.0])\\n- We have been also working on some smaller issues and preparation steps for our future work.\\n  ([#841], [#843], [#846], [#847])\\n\\n[#838]: https://github.com/packit-service/packit/pull/838\\n[#841]: https://github.com/packit-service/packit/pull/841\\n[#843]: https://github.com/packit-service/packit/pull/843\\n[#846]: https://github.com/packit-service/packit/pull/846\\n[#847]: https://github.com/packit-service/packit/pull/847\\n[release 0.11.0]: https://github.com/packit-service/packit/releases/tag/0.11.0\\n\\n### packit-service\\n\\n- [Jirka] implemented creating a new bug in Bugzilla for CentOS Stream pull-requests ([#627]).\\n  This will be triggered when the label \\"accepted\\" is added to a PR in the (near) future.\\n- You will be able to use aliases also for koji builds. ([packit:#839], [#632])\\n- [Laura] fixed [a problem](https://github.com/packit-service/packit-service/issues/535)\\n  with missing builds when triggering Packit Service with `/packit test`.\\n  Now, we trigger the build first if there are no builds for the pull-request yet. ([#631])\\n\\n[jirka]: https://github.com/jpopelka\\n[laura]: https://github.com/lbarcziova\\n[#627]: https://github.com/packit-service/packit-service/pull/627\\n[packit:#839]: https://github.com/packit-service/packit/pull/839\\n[#632]: https://github.com/packit-service/packit-service/pull/632\\n[#631]: https://github.com/packit-service/packit-service/pull/631\\n\\n## Week 23 (June 1st - June 5th)\\n\\nHello everyone, during this week we didn\'t manage to implement any significant new features - most of the work happened under the hood.\\n\\n### packit\\n\\n- We have fixed a formatting issue when packit prints installation instructions for using builds from a copr repo (by [@lachmanfrantisek](https://github.com/lachmanfrantisek), [#852](https://github.com/packit-service/packit/pulls/852)).\\n- You are able to set up builds when you push to a branch, we have set this up for master branch of packit, feel free to get inspired (by [@lachmanfrantisek](https://github.com/lachmanfrantisek), [#851](https://github.com/packit-service/packit/pulls/851)).\\n\\n### packit-as-a-service\\n\\n- We have run into multiple problems when you set up jobs for PRs and branch pushes - there were multiple fixes for this, packit-service wasn\'t able to work well with the fact that there are multiple jobs defined for the same job type - e.g. build.\\n\\n## Week 24 (June 8th - June 11th)\\n\\n### packit\\n\\n- [Tomas](https://github.com/TomasTomecek) re-implemented overriding of package config per job. This will enable overriding configuration for builds and releases once the corresponding changes are merged in Packit-as-a-Service. ([#858](https://github.com/packit-service/packit/pull/858), [#859](https://github.com/packit-service/packit/pull/859)).\\n\\n### packit-as-a-service\\n\\n- We are now parsing events from Koji about the progress of the builds and report them (by [Franta](https://github.com/lachmanfrantisek/), [#657](https://github.com/packit-service/packit-service/pull/657)).\\n- We are now able to listen to Gitlab hooks and parse the (comment & push) events (by [Shreyas](https://github.com/shreyaspapi), [#629](https://github.com/packit-service/packit-service/pull/629), [#671](https://github.com/packit-service/packit-service/pull/671)).\\n- Log pages have been restructured by linking SRPM build logs instead of including them (by [Hunor](https://github.com/csomh), [#641](https://github.com/packit-service/packit-service/pull/641)).\\n\\n## Week 25 (June 15th - June 19th)\\n\\n### packit\\n\\n- Packit logs more information for RebaseHelper errors (by [@csomh](https://github.com/csomh), [#865](https://github.com/packit-service/packit/pull/865)).\\n\\n### packit-as-a-service\\n\\n- Obtaining builds via packit [API endpoint](https://prod.packit.dev/api/copr-builds) is now significantly quicker (by [@IceWreck](https://github.com/IceWreck), [#674](https://github.com/packit-service/packit-service/pull/674)).\\n- We now have an API endpoint for obtaining results from testing farm (by [@IceWreck](https://github.com/IceWreck), [#678](https://github.com/packit-service/packit-service/pull/678)).\\n- We finished the implementation of the trigger to create bugs in Bugzilla. Therefore packit is now able to create bugzilla for accepted PR\'s in CentOS (by [@jpopelka](https://github.com/jpopelka), [#662](https://github.com/packit-service/packit-service/pull/662)).\\n\\n## Week 26 (June 22th - June 26th)\\n\\n### packit\\n\\n- packit now supports using custom repositories and packages when building in Copr and has options to preserve the project and to list it in on the Copr home page [@lachmanfrantisek](https://github.com/lachmanfrantisek), [#872](https://github.com/packit-service/packit/pull/872).\\n- Custom commands defined by user in packit config now are run in the shell, no more `bash -c` required (by [@TomasTomecek](https://github.com/TomasTomecek), [#871](https://github.com/packit-service/packit/pull/871)).\\n- packit now includes pull request ID in version of rpm. (by [@sturivny](https://github.com/sturivny) and [@TomasTomecek](https://github.com/TomasTomecek), [#870](https://github.com/packit-service/packit/pull/870)).\\n\\n### packit-as-a-service\\n\\n- We added support for copr builds in gitlab (by [@shreyaspapi](https://github.com/shreyaspapi), [#683](https://github.com/packit-service/packit-service/pull/683)).\\n- packit-service utilizes the new options introduced in packit (by [@lachmanfrantisek](https://github.com/lachmanfrantisek), [#694](https://github.com/packit-service/packit-service/pull/694)).\\n\\n## Week 27 (June 29th - July 3rd)\\n\\n### packit\\n\\n- We introduced a new command `packit validate-config` which validates the contect of a package configuration file in your project\\n  (contributed by [@TomasJani](https://github.com/TomasJani), [#826](https://github.com/packit-service/packit/pull/826)).\\n\\n### packit-as-a-service\\n\\n- You are now able to override configuration for builds, releases and other jobs (by [@TomasTomecek](https://github.com/TomasTomecek), [#676](https://github.com/packit-service/packit-service/pull/676)).\\n  Read more about this feature [here](/docs/configuration/#overriding-global-parameters).\\n\\n## Week 28 (July 6th - July 10th)\\n\\n### packit\\n\\n- Command `validate-config` works properly now and does not produce odd error messages, by [@TomasTomecek](https://github.com/TomasTomecek) and [@csomh](https://github.com/csomh), [#894](https://github.com/packit-service/packit/pull/894) and [#895](https://github.com/packit-service/packit/pull/895)\\n- You will now properly see git-describe metadata in the `%release` field in spec file when using `srpm` command, by [@TomasTomecek](https://github.com/TomasTomecek), [#894](https://github.com/packit-service/packit/pull/894)\\n- git-log is being used to get a list of commits between HEAD and latest tag to pick up commit messages and add those to %changelog, by [@TomasTomecek](https://github.com/TomasTomecek), [#889](https://github.com/packit-service/packit/pull/889)\\n- packit is now able to load metadata from commits of a source-git repo and utilize them when creating patch files, by [@lachmanfrantisek](https://github.com/lachmanfrantisek), [#875](https://github.com/packit-service/packit/pull/875)\\n\\n### packit-as-a-service\\n\\n- We now have a new API endpoint: [`/api/projects/`](https://prod.packit.dev/api/projects), by [@IceWreck](https://github.com/IceWreck), [#716](https://github.com/packit-service/packit-service/pull/716)\\n- Over the last few weeks, [@lbarcziova](https://github.com/lbarcziova) was very busy with refactoring how jobs and tasks are being executed in packit-service. This work is now complete which allows us to scale the deployment up while giving us better introspection in what\'s happening inside, by [@lbarcziova](https://github.com/lbarcziova), [#704](https://github.com/packit-service/packit-service/pull/704)\\n\\n## Week 29 (July 13th - July 17th)\\n\\n![Tatranska Lomnica](img/tatranska-lomnica-dhodovsk.jpg) Copyright (c) Dominika Hodovska. This work is licensed under a [Creative Commons Attribution 4.0 International License](http://creativecommons.org/licenses/by/4.0/).\\n\\n## Week 30 (July 20th - July 24th)\\n\\n- [Anchit] added [a few new API endpoints] to Packit-as-a-Service to retrieve\\n  project information. This is used in the Dashboard, to provide [an overview\\n  of the projects] served by Packit.\\n\\n[anchit]: https://github.com/IceWreck\\n[a few new api endpoints]: https://github.com/packit-service/packit-service/pull/746\\n[an overview of the projects]: https://dashboard.packit.dev/projects\\n\\n## Week 31 (July 27th - July 31st)\\n\\n- [Jano] did a lot of work on our deployment. The installation of all our dependencies is much simpler now.\\n  ([packit-service#747](https://github.com/packit-service/packit-service/pull/747),\\n  [packit-service#753](https://github.com/packit-service/packit-service/pull/753),\\n  [packit-service#756](https://github.com/packit-service/packit-service/pull/756),\\n  [packit-service#757](https://github.com/packit-service/packit-service/pull/757),\\n  [packit#919](https://github.com/packit-service/packit/pull/919)),\\n- Packit now puts a link to our documentation in a pull request status when a contributor is not allowed to build the PR, thanks to [Tom\xe1\u0161].\\n  ([packit-service#758](https://github.com/packit-service/packit-service/pull/758))\\n\\n[jano]: https://github.com/sakalosj\\n[tom\xe1\u0161]: https://github.com/TomasTomecek\\n\\n## Week 32 (August 3rd - August 7th) and 33 (August 10th - August 13th)\\n\\n- We renamed our GitHub organisation to `packit`.\\n  That user had been inactive for a long time and [Hunor]\'s request was successful.\\n- The Copr project settings are now changed only if needed. If we can\'t edit the settings,\\n  we ask for the admin access to the Copr project and the service shows you a table with\\n  the changes if you want to do the edit manually.\\n  ([packit#921](https://github.com/packit/packit/pull/921),\\n  [packit-service#764](https://github.com/packit/packit-service/pull/764))\\n- [Matej] fixed an old bug with the custom command for creating archives.\\n  The archive was not found when building SRPM because of the incorrect processing\\n  of the paths from the command output.\\n  ([packit#923](https://github.com/packit/packit/pull/923))\\n\\n[hunor]: https://github.com/csomh\\n[matej]: https://github.com/mfocko\\n\\n## Week 34 (August 17th - August 20th)\\n\\n- [Tomas] tought packit how to merge related commits, which were previously created\\n  by git-am applying of a multiple commit patch. ([packit#933](https://github.com/packit/packit/pull/933))\\n- [Anchit] added new `/api/srpm-builds/` endpoint.\\n- Service now requests \'builder\' permission for custom projects if needed.\\n- [Franta] fixed a problem with only one job executed executed for 2 build definitions for the same trigger.\\n\\n[anchit]: https://github.com/IceWreck\\n[franta]: https://github.com/lachmanfrantisek\\n[tomas]: https://github.com/TomasTomecek\\n\\n## Week 35 (August 24th - August 28th)\\n\\n- [Tomas] improved logging of the Packit actions\' output. ([packit#950](https://github.com/packit/packit/pull/950))\\n- [Anchit] fixed and enhanced the `/api/srpm-builds` endpoint.\\n  ([packit-service#788](https://github.com/packit/packit-service/pull/788))\\n\\n[tomas]: https://github.com/TomasTomecek\\n[anchit]: https://github.com/IceWreck\\n\\n## Week 36 (August 31th - September 4th)\\n\\n- We store the submission time of SRPM builds now ([packit-service#795](https://github.com/packit/packit-service/pull/795) by [Anchit]).\\n- [Shreyas] improved implementation of the build status reporting ([packit-service#740](https://github.com/packit/packit-service/pull/740)).\\n- [Anchit] enhanced the `/koji-builds` endpoint to be more consistent with `/copr-builds` endpoint ([packit-service#791](https://github.com/packit/packit-service/pull/791)).\\n\\n[anchit]: https://github.com/IceWreck\\n[shreyas]: https://github.com/shreyaspapi\\n\\n## Week 37 (September 7th - September 11th)\\n\\n- Stage now uses [Tokman](https://github.com/packit/tokman) to get access tokens for GitHub, which should resolve race condition when running parallel jobs\\n  (Tokman by [Hunor], ogr integration by [Matej]).\\n- [Franta] has addressed problems with Testing-Farm cluster with custom response on PRs that links to more information ([pinned info](https://github.com/packit/packit-service/issues/803), [packit-service#798](https://github.com/packit/packit-service/pull/798)).\\n\\n[hunor]: https://github.com/csomh\\n[matej]: https://github.com/mfocko\\n[franta]: https://github.com/lachmanfrantisek\\n\\n## Week 38 (September 14th - September 18th)\\n\\n- The combination of the source-git patches with existing patches now works well\\n  ([packit#963](https://github.com/packit/packit/pull/963)).\\n- Service now mostly supports also GitLab as you can see\\n  [here](https://gitlab.com/packit-service/hello-world/-/merge_requests/10)\\n  or [here](https://gitlab.com/packit-service/src/drpm/-/merge_requests/2).\\n  A lot of small issues were fixed in the last week\\n  ([packit-service#806](https://github.com/packit/packit-service/pull/806),\\n  [packit-service#812](https://github.com/packit/packit-service/pull/812),\\n  [packit-service#814](https://github.com/packit/packit-service/pull/814),\\n  [packit-service#815](https://github.com/packit/packit-service/pull/815),\\n  [packit-service#816](https://github.com/packit/packit-service/pull/816)\\n  ).\\n- Created Copr projects are now prefixed with the hostname\\n  for non-GitHub services and also support multipart namespaces\\n  ([packit-service#819](https://github.com/packit/packit-service/pull/819)).\\n- [Laura] fixed two testing-farm related issues\\n  ([packit-service#808](https://github.com/packit/packit-service/pull/808),\\n  [packit-service#809](https://github.com/packit/packit-service/pull/809)).\\n  You can now use `test` job also on Pagure and GitLab thanks to that.\\n\\n[laura]: https://github.com/lbarcziova\\n\\n## Week 39 (September 21st - September 25th)\\n\\n- Packit-service can be configured to work with private namespaces. This is plumbing work which we need right now for CentOS Stream. We are not planning to enable this for GitHub - packit-service will still work only for public repositories, private ones are ignored. [packit-service#831](https://github.com/packit/packit-service/pull/831)\\n- If git tag contains more information than just version (e.g. `pkg_name-v1.2.3`), it is possible to use upstream_tag_template to extract version from the tag, which will be used in a subsequent task. [doc](https://packit.dev/docs/configuration/#upstream_tag_template) [packit#959](https://github.com/packit/packit/pull/959)\\n- Added support for globbing pattern in upstream_ref. [doc](https://packit.dev/docs/configuration/#upstream_ref) [packit#960](https://github.com/packit/packit/pull/960)\\n- Packit `--remote` is global option now and available for all commands. Because of this `sync-from-downstream --remote` was renamed to `--remote-to-push`. Remote can now be specified in the user\'s config (via upstream_git_remote parameter). [packit#977](https://github.com/packit/packit/pull/977)\\n\\nFollowing bugs were fixed:\\n\\n- Packit dropping leading zeros in version. [packit#814](https://github.com/packit/packit/pull/814)\\n- Packit CLI issue caused by picking incorrect copr project name. [packit#971](https://github.com/packit/packit/pull/971)\\n\\n## Week 40 (September 28th - October 2nd)\\n\\n- Packit-service is now explicitly checking if requested copr-build targets exist and if not, the user is informed about it. [packit-service#835](https://github.com/packit/packit-service/pull/835)\\n- We have improved the way how packit updates `%setup` line in a spec file - you are now able to set content of `-n` option via archive_root_dir_template config option, it defaults to `{upstream-pkg-name}`. [doc](https://github.com/packit/packit.dev/pull/167) [packit#834](https://github.com/packit/packit-service/pull/834)\\n- Packit is able to generate a patch file with format-patch without leading a/ and b/ in the patch diff. Required for patches in dist-git which are applied with -p0.\\n- Contribution guidelines were updated, now we have one shared [link](https://github.com/packit/contributing).\\n\\n## Week 41 (October 5th - October 9th)\\n\\n- [franta] made triggering of jobs more reliable and in correct situations ([packit-service#837](https://github.com/packit/packit-service/pull/837))\\n\\n[franta]: https://github.com/lachmanfrantisek\\n\\n## Week 42 (October 12th - October 16th)\\n\\nNothing significant happened during this week. The only change was that Hunor\\n[resolved](https://github.com/packit/packit-service/pull/850) a problem when sentry client library ([the alert service](https://sentry.io/) we use) caused errors in stage\\nenvironment and hence the problem didn\'t make it to production.\\n\\nWe have also released a new version of packit: [0.18](https://github.com/packit/packit/releases/tag/0.18.0).\\n\\n## Week 43 (October 19th - October 24th)\\n\\nWe finally had a week with plenty updates!\\n\\n- We found out the hard way that one cannot build in [Fedora koji](https://koji.fedoraproject.org/koji/) directly\\n  from SRPM unless it\'s a scratch build. The discussion with Fedora rel-eng is\\n  happening at [pagure.io/releng/issue/9801](https://pagure.io/releng/issue/9801) and in the meantime, all koji builds\\n  will be halted on our side since we know they cannot succeed. Do `scratch: true` for koji builds before this gets resolved.\\n- Packit creates a symlink for a generated archive at the root of the project.\\n  So far it only did it from a relative path and now absolute paths are\\n  supported as well. This is useful when your specfile is placed in a\\n  subdirectory and rpmbuild can\'t find the archive.\\n- There is a new usability improvement to proposing a new downstream update. If\\n  the PR is already created, packit won\'t create it again. You will no longer\\n  receive duplicate downstream PRs in dist-git.\\n- When doing a new downstream update, packit doesn\'t sync %changelog since\\n  those are usually out of sync between upstream and downstream. Packit creates\\n  a new entry for the new release in the downstream. There is a new packit.yaml\\n  configuration option `sync_changelog` which bypasses this behaviour and\\n  copies the %changelog from upstream and overwrites the downstream changelog.\\n  Please use this option only when your changelogs are in sync. [Documentation](https://packit.dev/docs/configuration/#sync_changelog)\\n\\n## Week 44 (October 26th - October 30th)\\n\\nNo user-facing changes in packit(-service) this week.\\n\\n## Week 45 (November 2nd - November 6th)\\n\\n- [Laura] implemented an option for packit to copy description from a release into\\n  a changelog when running `propose-update`. Also the default message has been changed\\n  to the list of commit messages from last release. ([packit#1004](https://github.com/packit/packit/pull/1004))\\n- [Jano] improved handling of build targets in packit. ([packit#986](https://github.com/packit/packit/pull/986))\\n- [Tomas] improved an experience of a contributor to source-git in case the contributor\\n  doesn\'t follow git-am patches style that is used. ([packit#1000](https://github.com/packit/packit/pull/1000))\\n\\n## Week 46 (November 9th - November 13th)\\n\\n- [Tomas] improved the UX of logging in the CLI. ([packit#1014](https://github.com/packit/packit/pull/1014))\\n- [Jano] improved logic of acquiring current version in the CLI. ([packit#1013](https://github.com/packit/packit/pull/1013))\\n- We appreciate getting feedback from our users, if you could find some time to\\n  do so, there is an [open issue](https://github.com/packit/packit-service/issues/859)\\n  for it.\\n\\n## Week 47 (November 16th - November 20th)\\n\\n- ~~[Matej] fixed [an\\n  issue](https://github.com/packit/packit-service/issues/774) with Packit CLI,\\n  enabling recursive search for spec-files\\n  ([packit#1005](https://github.com/packit/packit/pull/1005)).~~ It turned\\n  out, this change made it very easy to [deplete GitHub API quota], so it was\\n  reverted.\\n- [Laura] made Copr builds to be part of the default jobs. This will cause\\n  build jobs to explicitly run, and display their own result flags in PRs,\\n  next to the test results. We hope this to be a more friendly behaviour for\\n  our new users ([packit#1024](https://github.com/packit/packit/pull/1024)).\\n\\n## Week 48 (November 23rd - November 27th)\\n\\n- [Laura] [fixed a bug], where Packit Service failed to trigger Copr builds\\n  before triggering the tests in case triggering Copr builds was configured\\n  for a different event.\\n- Thanks to [Matej], Packit Service will now [comment on commits] in case Copr\\n  builds fail after a merge, in order to indicate the reason for the failure.\\n- Packit Service will soon stop commenting on PRs after the first successful\\n  build. The installation instructions from these comments [were moved to the\\n  result page] by [Laura], while [Matej] [added a warning] to inform users\\n  about this upcoming change.\\n\\n[laura]: https://github.com/lbarcziova\\n[jano]: https://github.com/sakalosj\\n[tomas]: https://github.com/TomasTomecek\\n[matej]: https://github.com/mfocko\\n[deplete github api quota]: https://github.com/packit/packit-service/issues/876\\n[fixed a bug]: https://github.com/packit/packit-service/pull/888\\n[comment on commits]: https://github.com/packit/packit-service/pull/854\\n[added a warning]: https://github.com/packit/packit-service/pull/891\\n[were moved to the result page]: https://github.com/packit/packit-service/pull/877\\n\\n## Week 49 (November 30th - December 4th)\\n\\n- [Jano] fixed a bug in `sync_release` method of Packit API. ([packit#1043](https://github.com/packit/packit/pull/1043))\\n- [Jiri Konecny] contributed a fix for how Packit creates COPR urls. ([packit#1039](https://github.com/packit/packit/pull/1039))\\n- [Laura] updated instructions how to retrigger a job. ([packit-service#892](https://github.com/packit/packit-service/pull/892))\\n\\n[jano]: https://github.com/sakalosj\\n[jiri konecny]: https://github.com/jkonecny12\\n[laura]: https://github.com/lbarcziova\\n\\n## Week 50 (December 7th - December 11th)\\n\\n- [Tomas] implemented the `--upstream-url` option of `packit init` command. When specified,\\n  `init` also sets up a source-git repository next to creating a configuration file.\\n\\n[tomas]: https://github.com/TomasTomecek\\n\\n## Week 51 (December 14th - December 18th)\\n\\n- Congratulations comments are now disabled by default, unless enabled in config.\\n- A bug, which prevented npm to be run during SRPM build, has been fixed. ([sandcastle#86](https://github.com/packit/sandcastle/pull/86))"},{"id":"/2019","metadata":{"permalink":"/posts/weekly/2019","editUrl":"https://github.com/packit/packit.dev/tree/main/weekly/2019.md","source":"@site/weekly/2019.md","title":"2019","description":"Let\'s see what happened in Packit in 2019.","date":"2021-01-07T00:00:00.000Z","formattedDate":"January 7, 2021","tags":[{"label":"2019","permalink":"/posts/weekly/tags/2019"}],"readingTime":15.625,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"2019","date":"2021-01-07T00:00:00.000Z","tags":["2019"]},"prevItem":{"title":"2020","permalink":"/posts/weekly/2020"}},"content":"Let\'s see what happened in Packit in 2019.\\n\\n\x3c!--truncate--\x3e\\n\\n# Initial version 0.1.0 of packit is out! (2019-03-08)\\n\\nWe would like to announce general availability of the initial version of\\npackit, titled \'0.1.0\'.\\n\\nSince this is our first release, we would like to ask you to be patient if you\\nencounter any issues. We work hard on packit\'s usability. If you feel like that\\npackit is doing something weird or if anything is unclear, don\'t hesitate and\\nreach out to us by creating [a new GitHub\\nissue](https://github.com/packit-service/packit/issues/new).\\n\\nThe initial release contains two commands:\\n\\n- `packit propose-update` \u2014 Opens a pull request in dist-git for the latest\\n  upstream release of a selected repository.\\n- `packit watch-releases` \u2014 Watches events for all the upstream releases and\\n  performs `propose-update` for those who use packit.\\n\\n## Installation\\n\\n```\\n$ dnf install --enablerepo=updates-testing packit\\n```\\n\\nOr\\n\\n```\\n$ pip3 install --user packitos\\n```\\n\\nOr (if you\'re brave)\\n\\n```\\n$ pip3 install --user git+https://github.com/packit-service/packit\\n```\\n\\n## Requirements\\n\\nPresent features have strict requirements on the upstream projects:\\n\\n- You need to have a packit config file present in the upstream repo.\\n\\n- You need to have spec file present in the upstream repo.\\n\\nThis workflow is suitable for people who are both upstream and downstream\\nmaintainers of the particular project. If you don\'t fit into that bucket, then\\npackit might not be ready for you, yet. Please wait till we land more\\n[source-git](/source-git/)\\nrelated functionality into packit.\\n\\n## `propose-update`\\n\\nI\'m going to demonstrate this functionality on\\n[ogr](https://github.com/packit-service/ogr.git), our library for git forges,\\nwhich powers packit.\\n\\nIt was recently approved for Fedora, so we can use packit to bring the initial\\nversion of ogr into Fedora Rawhide, 30 and 29.\\n\\n### Do we have everything?\\n\\nLet\'s see [guide](/docs/cli/propose-downstream) for\\nthe `propose-update` command on what we need:\\n\\n#### 0. The upstream repository with a valid upstream release.\\n\\n```\\n$ git remote -v\\norigin  git@github.com:TomasTomecek/ogr.git (fetch)\\norigin  git@github.com:TomasTomecek/ogr.git (push)\\nupstream        https://github.com/packit-service/ogr.git (fetch)\\nupstream        https://github.com/packit-service/ogr.git (push)\\n```\\n\\nYup.\\n\\n```\\n$ git tag --list\\n0.0.1\\n0.0.2\\n0.0.3\\n\\n$ git checkout 0.0.3\\nNote: checking out \'0.0.3\'.\\n```\\n\\nAnd the tag name is matching the version in a spec file:\\n\\n```\\n$ grep Version python-ogr.spec\\nVersion:        0.0.3\\n```\\n\\n#### 1. Packit config file placed in the upstream repository.\\n\\n```\\n$ ll .packit.yaml\\n-rw-rw-r--. 1 tt tt 177 Mar  1 17:44 .packit.yaml\\n```\\n\\nCheck.\\n\\n#### 2. Spec file present in the upstream repository.\\n\\n```\\n$ ll python-ogr.spec\\n-rw-rw-r--. 1 tt tt 1.3K Mar  1 17:43 python-ogr.spec\\n```\\n\\n:+1:\\n\\n#### 3. Pagure API tokens for Fedora Dist-git.\\n\\n```\\n$ env | grep TOKEN\\nPAGURE_USER_TOKEN=will\\nPAGURE_FORK_TOKEN=not\\nGITHUB_TOKEN=share, sorry\\n```\\n\\n#### 4. Valid Fedora Kerberos ticket.\\n\\n```\\n$ kinit ttomecek@FEDORAPROJECT.ORG\\nPassword for ttomecek@FEDORAPROJECT.ORG:\\n\\n$ klist\\nTicket cache: KEYRING:persistent:1024:krb_ccache_g0t1Ty3Ah\\nDefault principal: ttomecek@FEDORAPROJECT.ORG\\n\\nValid starting       Expires              Service principal\\n03/01/2019 18:12:25  03/02/2019 18:12:19  krbtgt/FEDORAPROJECT.ORG@FEDORAPROJECT.ORG\\n        renew until 03/08/2019 18:12:19\\n```\\n\\nWe\'re all set!\\n\\n### Time to shine\\n\\nWe are still in the \\"ogr\\" upstream git repository.\\n\\n```\\n$ packit propose-update\\nINFO: Running \'anitya\' versioneer\\nERROR: Failed to determine latest upstream version!\\nCheck that the package exists on https://release-monitoring.org.\\nusing \\"master\\" dist-git branch\\nsyncing ./python-ogr.spec\\nINFO: Downloading file from URL https://files.pythonhosted.org/packages/source/o/ogr/ogr-0.0.3.tar.gz\\n100%[=============================>]    17.95K  eta 00:00:00\\ndownloaded archive: /tmp/tmp2e65b0xt/ogr-0.0.3.tar.gz\\nuploading to the lookaside cache\\nPR created: https://src.fedoraproject.org/rpms/python-ogr/pull-request/1\\n```\\n\\nMind-blowing, isn\'t it? Now we have latest python-ogr in Fedora Rawhide by\\nrunning only a single command.\\n\\nI have also [added](https://release-monitoring.org/project/18832/) ogr into release-monitoring as packit suggests.\\n\\nOnce we are okay with the changes, we have to [merge the pull\\nrequest](https://src.fedoraproject.org/rpms/python-ogr/pull-request/1). That\'s\\nour responsibility, as maintainers.\\n\\n### Building in koji\\n\\nTime to build the package (packit doesn\'t support building in koji, yet)\\n\\n```\\n$ fedpkg clone python-ogr\\nCloning into \'python-ogr\'...\\nremote: Counting objects: 8, done.\\nremote: Compressing objects: 100% (5/5), done.\\nremote: Total 8 (delta 0), reused 5 (delta 0)\\nReceiving objects: 100% (8/8), done.\\n\\n$ cd python-ogr\\n\\n$ git log\\ncommit c298df5e540ba1d010366e102c1c75d4f5b0b0cc (HEAD -> master, origin/master, origin/HEAD)\\nAuthor: Tomas Tomecek <ttomecek@redhat.com>\\nDate:   Fri Mar 1 18:15:00 2019 +0100\\n\\n    [packit] 0.0.3 upstream release\\n\\n    more info\\n\\n    Signed-off-by: Tomas Tomecek <ttomecek@redhat.com>\\n\\ncommit 7d5ab1471ca0ee2a6c0254410b83beaa83b80f0b\\nAuthor: Gwyn Ciesla <limb@fedoraproject.org>\\nDate:   Fri Mar 1 15:18:34 2019 +0000\\n\\n    Added the README\\n```\\n\\nYup, that\'s our commit. `more info` was added there by accident, this is\\nalready fixed in packit.\\n\\n```\\n$ fedpkg build\\nBuilding python-ogr-0.0.3-1.fc31 for rawhide\\nCreated task: 33125435\\nTask info: https://koji.fedoraproject.org/koji/taskinfo?taskID=33125435\\nWatching tasks (this may be safely interrupted)...\\n33125435 build (rawhide, /rpms/python-ogr.git:c298df5e540ba1d010366e102c1c75d4f5b0b0cc): free\\n33125435 build (rawhide, /rpms/python-ogr.git:c298df5e540ba1d010366e102c1c75d4f5b0b0cc): free -> open (buildvm-14.phx2.fedoraproject.org)\\n  33125451 buildArch (python-ogr-0.0.3-1.fc31.src.rpm, noarch): open (buildvm-14.phx2.fedoraproject.org)\\n  33125436 buildSRPMFromSCM (/rpms/python-ogr.git:c298df5e540ba1d010366e102c1c75d4f5b0b0cc): closed\\n33125435 build (rawhide, /rpms/python-ogr.git:c298df5e540ba1d010366e102c1c75d4f5b0b0cc): open (buildvm-14.phx2.fedoraproject.org) -> closed\\n  0 free  1 open  2 done  0 failed\\n  33125464 tagBuild (noarch): closed\\n  33125451 buildArch (python-ogr-0.0.3-1.fc31.src.rpm, noarch): open (buildvm-14.phx2.fedoraproject.org) -> closed\\n  0 free  0 open  4 done  0 failed\\n\\n33125435 build (rawhide, /rpms/python-ogr.git:c298df5e540ba1d010366e102c1c75d4f5b0b0cc) completed successfully\\n```\\n\\nThat was rough, can\'t wait to do this with packit.\\n\\nLet\'s do Fedora 30 now:\\n\\n```\\n$ packit propose-update --dist-git-branch f30\\nINFO: Running \'anitya\' versioneer\\nusing \\"f30\\" dist-git branch\\nsyncing ./python-ogr.spec\\nINFO: Downloading file from URL https://files.pythonhosted.org/packages/source/o/ogr/ogr-0.0.3.tar.gz\\n100%[=============================>]    17.95K  eta 00:00:00\\ndownloaded archive: /tmp/tmpl5xxq22x/ogr-0.0.3.tar.gz\\nuploading to the lookaside cache\\nPR created: https://src.fedoraproject.org/rpms/python-ogr/pull-request/3\\n```\\n\\nAnd so on...\\n\\n## Conclusion\\n\\nAs you can see, packit is useful for us right away.\\n\\nWe\'ll be delighted if you try it out and let us know what you think.\\n\\n# Packit 0.2.0 is here! (2019-03-19)\\n\\nOur sprint nears an end which means we have released [a new version of packit -\\n0.2.0](https://github.com/packit-service/packit/releases/tag/0.2.0)! You can\\nexpect a new release after every sprint (i.e. every 2 weeks).\\n\\nThe 0.2.0 version has a bunch of new features and improvements: you can find\\na complete list [in the\\nchangelog](https://github.com/packit-service/packit/blob/master/CHANGELOG.md#020).\\nWe also have a [detailed\\ndocumentation](https://github.com/packit-service/packit#workflows-covered-by-packit)\\nfor all the workflows packit covers.\\n\\nLet\'s get through what\'s new:\\n\\n1. We have decided to rename two keys in our config file so they are more\\n   descriptive. Old names still work but they are deprecated:\\n   - `package_name` \u2192 `downstream_package_name`\\n   - `upstream_name` \u2192 `upstream_project_name`\\n2. You don\'t need to touch dist-git at all when getting your new upstream\\n   release into Fedora, you can stay in your upstream repository and just fire\\n   off a bunch of packit calls:\\n   - `packit propose-update` to create a pull request in Fedora dist-git with\\n     the selected upstream release\\n   - `packit build` to build the new upstream release once the pull request is\\n     merged\\n   - and finally, `packit create-update` creates a new bodhi update (if you\\n     chose a stable Fedora release)\\n3. Packit now has a `srpm` command which creates an SRPM out of the local\\n   content of your upstream repository.\\n4. You can now use packit to sync files from your dist-git repo back into\\n   upstream (mainly to keep spec files in sync). `sync-from-downstream` is the\\n   command.\\n5. Command `propose-update` received numerous improvements:\\n   - You can pick upstream version to use.\\n   - Packit will NOT check out the git ref with the upstream release if you\\n     specify `--local-content`\\n   - It\'s possible to force packit to execute `fedpkg new-sources` using\\n     `--force-new-sources` and bypass the caching mechanism.\\n\\n## Installation\\n\\nPlease make sure you are installing `0.2.0`:\\n\\n```\\n$ dnf install --enablerepo=updates-testing packit\\n```\\n\\nOr\\n\\n```\\n$ pip3 install --user packitos\\n```\\n\\nYou can also install packit from master branch, if you are brave enough:\\n\\n```\\n$ pip3 install --user git+https://github.com/packit-service/packit\\n```\\n\\n## How are we using packit?\\n\\nI\'d like to show you how we used packit to bring a new upstream\\nrelease of ogr into Fedora, a library which packit is using.\\n\\nOnce we have performed an upstream release of ogr, we can propose an update in\\ndist-git:\\n\\n```\\n$ git clone https://github.com/packit-service/ogr && cd ogr/\\n\\n$ packit propose-update\\nINFO: Running \'anitya\' versioneer\\nVersion in upstream registries is \'0.0.3\'.\\nVersion in spec file is \'0.0.3\'.\\nPicking version of the latest release from the upstream registry over spec file.\\nChecking out upstream version 0.0.3\\nUsing \'master\' dist-git branch\\nCloning repo: https://src.fedoraproject.org/rpms/python-ogr.git -> /tmp/tmpb9xlvdhj\\nSyncing /home/tt/g/user-cont/ogr/python-ogr.spec\\nArchive ogr-0.0.3.tar.gz found in lookaside cache (skipping upload).\\nERROR    Cmd(\'git\') failed due to: exit code(1)\\n  cmdline: git commit -s -m [packit] 0.0.3 upstream release -m Upstream tag: 0.0.3\\nUpstream commit: 059d21080a7849acff4626b6e0ec61830d537ac4\\n\\n  stdout: \'On branch 0.0.3-master-update\\nnothing to commit, working tree clean\'\\n```\\n\\nWhoops, it seems that I have messed up, I forgot to bump the spec file in the\\nupstream repo when doing the release. I will bump it locally and utilize\\n`--local-content` argument:\\n\\n```\\n$ rpmdev-bumpspec -n 0.1.0 -c \'New upstream release: 0.1.0\' *.spec\\n\\n$ packit propose-update --local-content\\nINFO: Running \'anitya\' versioneer\\nVersion in upstream registries is \'0.0.3\'.\\nVersion in spec file is \'0.1.0\'.\\nPicking version of the latest release from the upstream registry over spec file.\\nUsing \'master\' dist-git branch\\nCloning repo: https://src.fedoraproject.org/rpms/python-ogr.git -> /tmp/tmpd9j4se27\\nSyncing /home/tt/g/user-cont/ogr/python-ogr.spec\\nArchive ogr-0.1.0.tar.gz found in lookaside cache (skipping upload).\\nINFO: Downloading file from URL https://files.pythonhosted.org/packages/source/o/ogr/ogr-0.1.0.tar.gz\\n100%[=============================>]    20.25K  eta 00:00:00\\nDownloaded archive: \'/tmp/tmpd9j4se27/ogr-0.1.0.tar.gz\'\\nAbout to upload to lookaside cache\\nwon\'t be doing kinit, no credentials provided\\nPR created: https://src.fedoraproject.org/rpms/python-ogr/pull-request/6\\n```\\n\\nOnce the scratch build is done and tests passed we merged and built it:\\n\\n```\\n$ packit build\\nUsing \'master\' dist-git branch\\nCloning repo: https://src.fedoraproject.org/rpms/python-ogr.git -> /tmp/tmprp3cmdjy\\nBuilding python-ogr-0.1.0-1.fc31 for rawhide\\nCreated task: 33616980\\nTask info: https://koji.fedoraproject.org/koji/taskinfo?taskID=33616980\\n```\\n\\nWe have done the same for F30 and F29.\\n\\nThe previous commands were run in the directory of the upstream repository. Packit also accepts path to your upstream clone, or even URL. So let\'s create a bodhi update for python-ogr by specifying the upstream repo URL:\\n\\n```\\n$ cd $HOME\\n\\n$ packit create-update --dist-git-branch f29 https://github.com/packit-service/ogr\\nCloning repo: https://github.com/packit-service/ogr -> /tmp/tmpdkdadmn_\\nKoji builds for package python-ogr and koji tag f29-updates-candidate:\\n - python-ogr-0.1.0-1.fc29\\nCloning repo: https://src.fedoraproject.org/rpms/python-ogr.git -> /tmp/tmpn1809ec9\\nBodhi update FEDORA-2019-78948e62d2:\\n- https://bodhi.fedoraproject.org/updates/FEDORA-2019-78948e62d2\\n- stable_karma: 3\\n- unstable_karma: -3\\n- notes:\\nNew upstream release: 0.1.0\\n```\\n\\nAnd that\'s it, no need to access dist-git any more.\\n\\nPlease give packit a try and let us know what you think.\\n\\n# Packit 0.3.0 (2019-04-11)\\n\\nIn the previous post we promised to\\nprovide a new release every 2 weeks and we are already breaking this promise as\\nit\'s been 3 weeks since then. We decided to wait with the release to merge\\nseveral pull requests related to source-git support.\\n\\nNow the good news. You can find a complete list of new features and\\nimprovements of version\\n[0.3.0](https://github.com/packit-service/packit/releases/tag/0.3.0) in the\\n[changelog](https://github.com/packit-service/packit/blob/master/CHANGELOG.md#030).\\n\\n## Features\\n\\n- You can now specify your own hooks or actions to replace default packit\\n  behaviour. (More information can be found [in the\\n  documentation](/docs/configuration/actions/)).\\n- Packit supports pagure.io-based upstream projects.\\n- Commands `propose-update` and `sync-from-downstream` supports [copying\\n  directories](/docs/configuration/#minimal-sample-config).\\n- A new command `status`! It displays useful upstream/downstream info.\\n- Packit now supports [Source-git](/source-git/). The\\n  functionality is not available, yet - we will add a CLI interface for it in\\n  the next release.\\n- You can now have a config file for packit in your home directory(`~/.config/packit.yaml`).\\n- Packit installed from an RPM now has manpages.\\n\\n### `packit status` example\\n\\n```bash\\n$ packit status\\nCloning repo: https://src.fedoraproject.org/rpms/packit.git -> /tmp/tmp84we_6n8\\nDownstream PRs: No open PRs.\\nf29: 0.2.0\\nf30: 0.2.0\\nmaster: 0.2.0\\n```\\n\\n# Packit 0.4.0 & 0.4.1 (2019-05-18)\\n\\nIt\'s been over a month since we released packit \\"0.3.0\\". Here comes packit 0.4.0 (and patch release 0.4.1) and as always they bring a lot of new features and improvements.\\n\\nYou can find a complete list in the\\n[changelog](https://github.com/packit-service/packit/blob/master/CHANGELOG.md#040).\\n\\n## Packit as a service\\n\\n- We have Packit as a service running in OpenShift and also a GitHub App, which uses it.\\n  Unfortunately it\'s still not in the [Marketplace](https://github.com/marketplace),\\n  so [we](https://github.com/packit-service) have been the only one using it so far.\\n  The service/app submits builds in [copr](https://copr.fedorainfracloud.org/coprs/packit/) and\\n  once they\'re done it adds a GitHub status and comment with instructions how to install the builds.\\n  The service is now configurable via [jobs](/docs/configuration/#packit-service-jobs) defined\\n  in configuration file.\\n- Packit is now able to check GPG signatures of the upstream commits against configured fingerprints.\\n\\n## CLI\\n\\n- `srpm` command now works also with [Source-git](/source-git/).\\n- `status` command now access remote APIs asynchronously in parallel, which should speed up\\n  the execution.\\n- CLI has new `--dry-run` option to not perform any remote changes (pull requests or comments).\\n- Fedmsg parsing has been unified into a single `listen-to-fedmsg` command.\\n\\n# Packit 0.4.2 (2019-06-26)\\n\\nAnother relase after a month since [0.4.1](https://packit.dev/posts/packit-041/), this time mostly with bug fixes.\\n\\nWe\'ve been busy polishing our [GitHub App](https://packit.dev/packit-as-a-service/) recently, therefore we had no resources for new features.\\n\\nSee [CHANGELOG](https://github.com/packit-service/packit/blob/master/CHANGELOG.md#042) for more details.\\n\\n# September 2020\\n\\n## Week 36 (August 31th - September 4th)\\n\\n- We store the submission time of SRPM builds now ([packit-service#795](https://github.com/packit/packit-service/pull/795) by [Anchit]).\\n- [Shreyas] improved implementation of the build status reporting ([packit-service#740](https://github.com/packit/packit-service/pull/740)).\\n- [Anchit] enhanced the `/koji-builds` endpoint to be more consistent with `/copr-builds` endpoint ([packit-service#791](https://github.com/packit/packit-service/pull/791)).\\n\\n[anchit]: https://github.com/IceWreck\\n[shreyas]: https://github.com/shreyaspapi\\n\\n## Week 37 (September 7th - September 11th)\\n\\n- Stage now uses [Tokman](https://github.com/packit/tokman) to get access tokens for GitHub, which should resolve race condition when running parallel jobs\\n  (Tokman by [Hunor], ogr integration by [Matej]).\\n- [Franta] has addressed problems with Testing-Farm cluster with custom response on PRs that links to more information ([pinned info](https://github.com/packit/packit-service/issues/803), [packit-service#798](https://github.com/packit/packit-service/pull/798)).\\n\\n[hunor]: https://github.com/csomh\\n[matej]: https://github.com/mfocko\\n[franta]: https://github.com/lachmanfrantisek\\n\\n## Week 38 (September 14th - September 18th)\\n\\n- The combination of the source-git patches with existing patches now works well\\n  ([packit#963](https://github.com/packit/packit/pull/963)).\\n- Service now mostly supports also GitLab as you can see\\n  [here](https://gitlab.com/packit-service/hello-world/-/merge_requests/10)\\n  or [here](https://gitlab.com/packit-service/src/drpm/-/merge_requests/2).\\n  A lot of small issues were fixed in the last week\\n  ([packit-service#806](https://github.com/packit/packit-service/pull/806),\\n  [packit-service#812](https://github.com/packit/packit-service/pull/812),\\n  [packit-service#814](https://github.com/packit/packit-service/pull/814),\\n  [packit-service#815](https://github.com/packit/packit-service/pull/815),\\n  [packit-service#816](https://github.com/packit/packit-service/pull/816)\\n  ).\\n- Created Copr projects are now prefixed with the hostname\\n  for non-GitHub services and also support multipart namespaces\\n  ([packit-service#819](https://github.com/packit/packit-service/pull/819)).\\n- [Laura] fixed two testing-farm related issues\\n  ([packit-service#808](https://github.com/packit/packit-service/pull/808),\\n  [packit-service#809](https://github.com/packit/packit-service/pull/809)).\\n  You can now use `test` job also on Pagure and GitLab thanks to that.\\n\\n[laura]: https://github.com/lbarcziova\\n\\n## Week 39 (September 21st - September 25th)\\n\\n- Packit-service can be configured to work with private namespaces. This is plumbing work which we need right now for CentOS Stream. We are not planning to enable this for GitHub - packit-service will still work only for public repositories, private ones are ignored. [packit-service#831](https://github.com/packit/packit-service/pull/831)\\n- If git tag contains more information than just version (e.g. `pkg_name-v1.2.3`), it is possible to use upstream_tag_template to extract version from the tag, which will be used in a subsequent task. [doc](https://packit.dev/docs/configuration/#upstream_tag_template) [packit#959](https://github.com/packit/packit/pull/959)\\n- Added support for globbing pattern in upstream_ref. [doc](https://packit.dev/docs/configuration/#upstream_ref) [packit#960](https://github.com/packit/packit/pull/960)\\n- Packit `--remote` is global option now and available for all commands. Because of this `sync-from-downstream --remote` was renamed to `--remote-to-push`. Remote can now be specified in the user\'s config (via upstream_git_remote parameter). [packit#977](https://github.com/packit/packit/pull/977)\\n\\nFollowing bugs were fixed:\\n\\n- Packit dropping leading zeros in version. [packit#814](https://github.com/packit/packit/pull/814)\\n- Packit CLI issue caused by picking incorrect copr project name. [packit#971](https://github.com/packit/packit/pull/971)\\n\\n## Week 40 (September 28th - October 2nd)\\n\\n- Packit-service is now explicitly checking if requested copr-build targets exist and if not, the user is informed about it. [packit-service#835](https://github.com/packit/packit-service/pull/835)\\n- We have improved the way how packit updates `%setup` line in a spec file - you are now able to set content of `-n` option via archive_root_dir_template config option, it defaults to `{upstream-pkg-name}`. [doc](https://github.com/packit/packit.dev/pull/167) [packit#834](https://github.com/packit/packit-service/pull/834)\\n- Packit is able to generate a patch file with format-patch without leading a/ and b/ in the patch diff. Required for patches in dist-git which are applied with -p0.\\n- Contribution guidelines were updated, now we have one shared [link](https://github.com/packit/contributing).\\n\\n# Week 44-48 (November) 2019\\n\\nWith this blog post we\'d like to continue with the idea of openly communicating changes in Packit.\\nSince most of the developers use Packit as the [GitHub App](https://packit.dev/packit-as-a-service) (which uses code from [this repository - Packit Service](https://github.com/packit-service/packit-service)), this blog will be about changes in all the parts, i.e. the GitHub App, the Packit Service and Packit itself.\\n\\n## Continuous Deployment (CD)\\n\\nAt the moment the workflow is that one of us manually triggers production container image build at the end of a week.\\nThis image is then automatically deployed into our production instance of the service over a weekend (Sun/Mon night) so that everyone can start a week with all the amazing stuff we added the previous week.\\nIn case an issue makes it through our staging instance into production uncaught, we can easily rollback on Monday.\\nThe same person also writes down what\'s changed in Packit (service/app) since previous deployment.\\n\\n## Changes in production (since the end of November)\\n\\nPrevious post is almost half a year old so we won\'t list all the changes since then, but only since last deployment, i.e. since end of December.\\n\\n### Packit\\n\\nPrevious deployment was running [packit-0.7.1](https://pypi.org/project/packitos/0.7.1/).\\nWe haven\'t released a newer version since then, but in the service we install Packit from the Git repository (we have a separate `stable` git branch for our production deployment).\\nFrom the most visible changes, Packit now:\\n\\n- better handles Create-archive action\\n- is able to work in a repo with detached head\\n- logs output from subprocesses in realtime\\n- syncs config file and spec file by default in Propose-update action\\n- hadles patches with undecodable chars\\n\\n### Packit Service\\n\\nNow:\\n\\n- better reports Copr builds\\n  - uses separate commit status for srpm build and every chroot\\n  - clears test farm commit statuses when new build is triggered\\n  - better handles failed Copr builds\\n- gracefully handles no config file in the repo\\n- better handles when no (copr build) targets are specified in config file\\n- better checks whitelist of users\\n- does not create duplicate tickets in our [notification repo](https://github.com/packit-service/notifications) when a new user install the app\\n\\nChanges not visible to end users:\\n\\n- using [Requre](https://github.com/packit-service/requre) for integration/E2E tests\\n- Fedora messaging consumer part of the service has been improved and moved to separate [repo/image](https://github.com/packit-service/packit-service-fedmsg)\\n- using FAS instead of Fedora Badges for checking whether a user is Fedora packager\\n- many improved logs\\n- many bugs squashed\\n- lot\'s of code refactored\\n\\n# December 2019\\n\\n## Week 49\\n\\n### ogr & packit\\n\\n- ogr-0.9.0 has been released greatly restructured. ([#291](https://github.com/packit-service/ogr/pull/291/files))\\n- `packit status` (CLI) now shows also latest Copr builds. ([#579](https://github.com/packit-service/packit/pull/579))\\n- Target aliases (currently `fedora-development`, `fedora-stable`, `fedora-all`) can now be used in the packit config file. ([#619](https://github.com/packit-service/packit/pull/619))\\n- When doing a new update in Fedora dist-git, packit now by default creates a new pull request instead of pushing directly to dist-git. ([#622](https://github.com/packit-service/packit/pull/622))\\n\\n### packit service\\n\\n- Does not set test checks when tests are not configured. ([#275](https://github.com/packit-service/packit-service/pull/275))\\n- Supports target aliases and dist-git branches aliases. ([#277](https://github.com/packit-service/packit-service/pull/277), [#285](https://github.com/packit-service/packit-service/pull/285))\\n- Nicely formats errors from OpenShift API. ([#283](https://github.com/packit-service/packit-service/pull/283))\\n- Runs Copr build when user adds a `/packit build` comment into a PR. ([#290](https://github.com/packit-service/packit-service/pull/290))\\n\\n## Week 50\\n\\n### packit\\n\\n- If there is no `upstream_package_name`/`downstream_package_name` given in `.packit.yaml`, they now default to the name of the GitHub repo. ([#624](https://github.com/packit-service/packit/pull/624))\\n- If no `jobs` are defined in `.packit.yaml` packit by default runs `build` job on `fedora-stable` targets and `propose_downstream` on `fedora-all` branches. ([#625](https://github.com/packit-service/packit/pull/625))\\n- `build` command has nicer output. ([#630](https://github.com/packit-service/packit/pull/630))\\n- Smaller fixes. ([#630](https://github.com/packit-service/packit/pull/630), [#636](https://github.com/packit-service/packit/pull/636))\\n\\n### packit service\\n\\n- Creates a new issue when `propose-update` fails. ([#300](https://github.com/packit-service/packit-service/pull/300))\\n- Better reports failed submitting of a Copr build. ([#301](https://github.com/packit-service/packit-service/pull/301))"}]}')}}]);