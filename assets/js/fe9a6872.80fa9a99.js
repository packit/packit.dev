"use strict";(self.webpackChunkpackit_dev=self.webpackChunkpackit_dev||[]).push([[92059],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>f});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},47282:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(58168),a=(r(96540),r(15680));const i={title:"pull-from-upstream",date:new Date("2024-02-22T00:00:00.000Z"),sidebar_position:8},o="packit pull-from-upstream",l={unversionedId:"cli/pull-from-upstream",id:"cli/pull-from-upstream",title:"pull-from-upstream",description:"This is a detailed documentation for the update functionality of packit. The",source:"@site/docs/cli/pull-from-upstream.md",sourceDirName:"cli",slug:"/cli/pull-from-upstream",permalink:"/docs/cli/pull-from-upstream",draft:!1,editUrl:"https://github.com/packit/packit.dev/tree/main/docs/cli/pull-from-upstream.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"pull-from-upstream",date:"2024-02-22T00:00:00.000Z",sidebar_position:8},sidebar:"autogenerated",previous:{title:"prepare-sources",permalink:"/docs/cli/prepare-sources"},next:{title:"srpm",permalink:"/docs/cli/srpm"}},s={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Help",id:"help",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.yg)(u,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"packit-pull-from-upstream"},(0,a.yg)("inlineCode",{parentName:"h1"},"packit pull-from-upstream")),(0,a.yg)("p",null,"This is a detailed documentation for the update functionality of packit. The\ncommand creates a new pull request in Fedora (or CentOS Stream) using the selected or the latest\nupstream release. This command is meant to be called from ",(0,a.yg)("strong",{parentName:"p"},"dist-git repository"),"."),(0,a.yg)("h2",{id:"requirements"},"Requirements"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Packit config file placed in the dist-git repository."),(0,a.yg)("li",{parentName:"ul"},"Pagure API tokens for Fedora (or CentOS Stream) Dist-git."),(0,a.yg)("li",{parentName:"ul"},"Valid Fedora (or CentOS Stream) Kerberos ticket."),(0,a.yg)("li",{parentName:"ul"},"If ",(0,a.yg)("inlineCode",{parentName:"li"},"upstream_project_url")," is configured in Packit config:",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Upstream project is expected to be a git repository on GitHub/GitLab."),(0,a.yg)("li",{parentName:"ul"},"Upstream release (git tag) where version in spec file is equivalent to\nthe name of the git tag (or ",(0,a.yg)("inlineCode",{parentName:"li"},"upstream_tag_template")," is configured).")))),(0,a.yg)("h2",{id:"help"},"Help"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"Usage: packit pull-from-upstream [OPTIONS] [PATH_OR_URL] [VERSION]\n\n  Land a new upstream release in Fedora using downstream packit config.\n\n  PATH_OR_URL argument is a local path or a URL to the dist-git repository, it\n  defaults to the current working directory\n\n  VERSION argument is optional, the latest upstream version will be used by\n  default\n\nOptions:\n  --dist-git-branch TEXT  Comma separated list of target branches in dist-git\n                          to release into. (defaults to all branches)\n  --dist-git-path TEXT    Path to dist-git repo to work in. Otherwise clone\n                          the repo in a temporary directory.\n  --force-new-sources     Upload the new sources also when the archive is\n                          already in the lookaside cache.\n  --pr / --no-pr          Create a pull request to downstream repository or\n                          push directly. If not set, defaults to value set in\n                          configuration.\n  -f, --force             Don't discard changes in the git repo by default,\n                          unless this is set.\n  -b, --resolve-bug TEXT  Bug(s) that are resolved with the update, e.g.,\n                          rhbz#123 (multiple can be specified)\n  --sync-acls             Sync ACLs between dist-git repo and the fork, is\n                          considered only with --pr option.\n  -p, --package TEXT      Package to sync downstream, if more than one\n                          available, like in a monorepo configuration. Use it\n                          multiple times to select multiple packages.Defaults\n                          to all the packages listed inside the config.\n  -h, --help              Show this message and exit.\n")))}m.isMDXComponent=!0}}]);